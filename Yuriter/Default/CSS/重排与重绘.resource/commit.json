{"compress":true,"commitItems":[["54ccaa81-adad-4982-8322-c6da7fd8e6f7",1579228050493,"",[[1579228006801,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"# 重排与重绘\n\n\n\n"]],[0,0],[10,10]]],[1579228012528,["Administrator@WIN-T3FPCJLTUH1",[[-1,0,"# 重排与重绘\n\n\n"]],[0,10],[0,0]]],[1579228027029,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"1、重绘(Repaint)\n重绘是一个元素外观的改变所触发的浏览器行为，例如改变outline、背景色等属性。浏览器会根据元素的新属性重新绘制，\n使元素呈现新的外观。重绘不会带来重新布局，所以并不一定伴随重排。\n\n2、重排(Reflow)\n渲染对象在创建完成并添加到渲染树时，并不包含位置和大小信息。计算这些值的过程称为布局或重排\n\n\"重绘\"不一定需要\"重排\"，比如改变某个网页元素的颜色，就只会触发\"重绘\"，不会触发\"重排\"，因为布局没有改变。\n但是，\"重排\"必然导致\"重绘\"，比如改变一个网页元素的位置，就会同时触发\"重排\"和\"重绘\"，因为布局改变了。\n\n3、常见的触发重排的操作\nReflow 的成本比 Repaint 的成本高得多的多。DOM Tree 里的每个结点都会有 reflow 方法，\n一个结点的 reflow 很有可能导致子结点，甚至父点以及同级结点的 reflow。在一些高性能的电脑上也许还没什么，\n但是如果 reflow 发生在手机上，那么这个过程是非常痛苦和耗电的。\n\n所以，下面这些动作有很大可能会是成本比较高的。\n当你增加、删除、修改 DOM 结点时，会导致 Reflow , Repaint。\n当你移动 DOM 的位置\n当你修改 CSS 样式的时候。\n当你 Resize 窗口的时候（移动端没有这个问题）\n当你修改网页的默认字体时。\n获取某些属性时\n注：display:none 会触发 reflow，而 visibility:hidden 只会触发 repaint，\n因为没有发现位置变化。\n\n4、注意\n当你请求向浏览器请求一些 style信息的时候，就会让浏览器flush队列，比如：\n\n（1）offsetTop, offsetLeft, offsetWidth, offsetHeight\n（2）scrollTop/Left/Width/Height\n（3）clientTop/Left/Width/Height\n（4）width,height\n\n当你请求上面的一些属性的时候，浏览器为了给你最精确的值，需要flush队列，\n因为队列中可能会有影响到这些值的操作。即使你获取元素的布局和样式信息跟最近的布局信息差不多，\n浏览器都会强行刷新渲染队列。\n\n5、优化\n（1）将多次改变样式属性的操作合并成一次操作\n（2）将需要多次重排的元素，position属性设为absolute或fixed，\n这样此元素就脱离了文档流，它的变化不会影响到其他元素。例如有动画效果的元素就最好设置为绝对定位。\n（3）由于display属性为none的元素不在渲染树中，对隐藏的元素操作不会引发其他元素的重排。\n如果要对一个元素进行复杂的操作时，可以先隐藏它，操作完成后再显示。这样只在隐藏和显示时触发2次重排。"]],[0,0],[1165,1165]]],[1579228034382,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"#"]],[0,0],[1,1]]],[1579228036633,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"#"]],[1,1],[2,2]]],[1579228037010,["Administrator@WIN-T3FPCJLTUH1",[[1,2," "]],[2,2],[3,3]]],[1579228041325,["Administrator@WIN-T3FPCJLTUH1",[[1,110,"## "]],[110,110],[113,113]]],[1579228043588,["Administrator@WIN-T3FPCJLTUH1",[[1,286,"## "]],[286,286],[289,289]]],[1579228046618,["Administrator@WIN-T3FPCJLTUH1",[[1,674,"## "]],[674,674],[677,677]]],[1579228048757,["Administrator@WIN-T3FPCJLTUH1",[[1,958,"## "]],[958,958],[961,961]]],[1579228055548,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"\n"]],[0,0],[1,1]]],[1579228055946,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"\n"]],[1,1],[2,2]]],[1579228063641,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"页面重拍"]],[0,0],[4,4]]],[1579228064122,["Administrator@WIN-T3FPCJLTUH1",[[-1,3,"拍"]],[4,4],[3,3]]],[1579228078580,["Administrator@WIN-T3FPCJLTUH1",[[1,3,"排与重绘及优化"]],[3,3],[10,10]]],[1579228080920,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"# "]],[0,0],[2,2]]],[1579228086579,["Administrator@WIN-T3FPCJLTUH1",[[-1,17,"1、"]],[19,19],[17,17]]],[1579228087666,["Administrator@WIN-T3FPCJLTUH1",[[-1,125,"2、"]],[125,127],[125,125]]],[1579228089795,["Administrator@WIN-T3FPCJLTUH1",[[-1,299,"3、"]],[299,301],[299,299]]],[1579228092283,["Administrator@WIN-T3FPCJLTUH1",[[-1,685,"4、"]],[685,687],[685,685]]],[1579228094384,["Administrator@WIN-T3FPCJLTUH1",[[1,29,"\n"]],[28,28],[29,29]]],[1579228094936,["Administrator@WIN-T3FPCJLTUH1",[[1,137,"\n"]],[136,136],[137,137]]],[1579228096116,["Administrator@WIN-T3FPCJLTUH1",[[1,312,"\n"]],[311,311],[312,312]]],[1579228097319,["Administrator@WIN-T3FPCJLTUH1",[[1,691,"\n"]],[690,690],[691,691]]],[1579228098920,["Administrator@WIN-T3FPCJLTUH1",[[1,976,"\n"]],[975,975],[976,976]]],[1579228100667,["Administrator@WIN-T3FPCJLTUH1",[[-1,971,"5、"]],[971,973],[971,971]]],[1579228122153,["Administrator@WIN-T3FPCJLTUH1",[[1,493,"* "],[1,534,"* "],[1,547,"* "],[1,563,"* "],[1,590,"* "],[1,604,"* "]],[493,611],[495,623]]],[1579228132909,["Administrator@WIN-T3FPCJLTUH1",[[1,624,"* \n"]],[623,623],[626,626]]],[1579228135155,["Administrator@WIN-T3FPCJLTUH1",[[-1,624,"* "]],[626,626],[625,625]]],[1579228148420,["Administrator@WIN-T3FPCJLTUH1",[[-1,862,"（4）"]],[862,865],[862,862]]],[1579228149345,["Administrator@WIN-T3FPCJLTUH1",[[-1,831,"（3）"]],[831,834],[831,831]]],[1579228150404,["Administrator@WIN-T3FPCJLTUH1",[[-1,800,"（2）"]],[800,803],[800,800]]],[1579228151355,["Administrator@WIN-T3FPCJLTUH1",[[-1,748,"（1）"]],[748,751],[748,748]]],[1579228155319,["Administrator@WIN-T3FPCJLTUH1",[[1,748,"1. "],[1,797,"2. "],[1,825,"3. "],[1,853,"4. "]],[748,865],[751,877]]],[1579228159642,["Administrator@WIN-T3FPCJLTUH1",[[-1,988,"（1）"]],[988,991],[988,988]]],[1579228160488,["Administrator@WIN-T3FPCJLTUH1",[[-1,1008,"（2）"]],[1008,1011],[1008,1008]]],[1579228161454,["Administrator@WIN-T3FPCJLTUH1",[[-1,1096,"（3）"]],[1096,1099],[1096,1096]]],[1579228172566,["Administrator@WIN-T3FPCJLTUH1",[[-1,1142,"\n"]],[1143,1143],[1142,1142]]],[1579228176671,["Administrator@WIN-T3FPCJLTUH1",[[1,988,"1. "],[1,1008,"2. "],[1,1047,"3. "],[1,1096,"4. "]],[988,1192],[991,1204]]],[1579228187584,["Administrator@WIN-T3FPCJLTUH1",[[-1,1053,"3. "]],[1053,1056],[1053,1053]]],[1579228188032,["Administrator@WIN-T3FPCJLTUH1",[[-1,1052,"\n"]],[1053,1053],[1052,1052]]],[1579228193430,["Administrator@WIN-T3FPCJLTUH1",[[-1,1101,"4"],[1,1102,"3"]],[1101,1102],[1102,1102]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["3ade9fe5-3c22-4b96-846c-1335912a9a54",1582178432227,"# 页面重排与重绘及优化\n\n## 重绘(Repaint)\n\n重绘是一个元素外观的改变所触发的浏览器行为，例如改变outline、背景色等属性。浏览器会根据元素的新属性重新绘制，\n使元素呈现新的外观。重绘不会带来重新布局，所以并不一定伴随重排。\n\n## 重排(Reflow)\n\n渲染对象在创建完成并添加到渲染树时，并不包含位置和大小信息。计算这些值的过程称为布局或重排\n\n\"重绘\"不一定需要\"重排\"，比如改变某个网页元素的颜色，就只会触发\"重绘\"，不会触发\"重排\"，因为布局没有改变。\n但是，\"重排\"必然导致\"重绘\"，比如改变一个网页元素的位置，就会同时触发\"重排\"和\"重绘\"，因为布局改变了。\n\n## 常见的触发重排的操作\n\nReflow 的成本比 Repaint 的成本高得多的多。DOM Tree 里的每个结点都会有 reflow 方法，\n一个结点的 reflow 很有可能导致子结点，甚至父点以及同级结点的 reflow。在一些高性能的电脑上也许还没什么，\n但是如果 reflow 发生在手机上，那么这个过程是非常痛苦和耗电的。\n\n所以，下面这些动作有很大可能会是成本比较高的。\n* 当你增加、删除、修改 DOM 结点时，会导致 Reflow , Repaint。\n* 当你移动 DOM 的位置\n* 当你修改 CSS 样式的时候。\n* 当你 Resize 窗口的时候（移动端没有这个问题）\n* 当你修改网页的默认字体时。\n* 获取某些属性时\n\n注：display:none 会触发 reflow，而 visibility:hidden 只会触发 repaint，\n因为没有发现位置变化。\n\n## 注意\n\n当你请求向浏览器请求一些 style信息的时候，就会让浏览器flush队列，比如：\n\n1. offsetTop, offsetLeft, offsetWidth, offsetHeight\n2. scrollTop/Left/Width/Height\n3. clientTop/Left/Width/Height\n4. width,height\n\n当你请求上面的一些属性的时候，浏览器为了给你最精确的值，需要flush队列，\n因为队列中可能会有影响到这些值的操作。即使你获取元素的布局和样式信息跟最近的布局信息差不多，\n浏览器都会强行刷新渲染队列。\n\n## 优化\n\n1. 将多次改变样式属性的操作合并成一次操作\n2. 将需要多次重排的元素，position属性设为absolute或fixed，这样此元素就脱离了文档流，它的变化不会影响到其他元素。例如有动画效果的元素就最好设置为绝对定位。\n3. 由于display属性为none的元素不在渲染树中，对隐藏的元素操作不会引发其他元素的重排。如果要对一个元素进行复杂的操作时，可以先隐藏它，操作完成后再显示。这样只在隐藏和显示时触发2次重排。\n",[[1582178379898,["Administrator@WIN-T3FPCJLTUH1",[[1,981,"‘"]],[981,981],[982,982]]],[1582178388311,["Administrator@WIN-T3FPCJLTUH1",[[-1,981,"‘"]],[982,982],[981,981]]]],null,"Administrator@WIN-T3FPCJLTUH1"]]}