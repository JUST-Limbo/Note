{"compress":true,"commitItems":[["0863dabf-58ca-4985-8d4e-a065c9b150fc",1584946757460,"",[[1584946714842,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"# 2020.03.23\n\n\n\n"]],[0,0],[15,15]]],[1584946719823,["Administrator@WIN-T3FPCJLTUH1",[[1,14,"17"]],[14,14],[16,16]]],[1584946722681,["Administrator@WIN-T3FPCJLTUH1",[[-1,14,"17"]],[16,16],[14,14]]],[1584946729452,["Administrator@WIN-T3FPCJLTUH1",[[-1,15,"\n"],[1,16,"1"]],[15,15],[16,16]]],[1584946729905,["Administrator@WIN-T3FPCJLTUH1",[[1,16,". "]],[16,16],[18,18]]],[1584946760106,["Administrator@WIN-T3FPCJLTUH1",[[1,18,"INPOUT"]],[18,18],[24,24]]],[1584946761387,["Administrator@WIN-T3FPCJLTUH1",[[-1,18,"INPOUT"]],[24,24],[18,18]]],[1584946787048,["Administrator@WIN-T3FPCJLTUH1",[[1,18,"input上传图片"]],[18,18],[27,27]]],[1584946877588,["Administrator@WIN-T3FPCJLTUH1",[[-1,15,"1."],[1,17,"【"]],[15,15],[16,16]]],[1584946877696,["Administrator@WIN-T3FPCJLTUH1",[[1,16,"】"]],[16,16],[17,17]]],[1584946878577,["Administrator@WIN-T3FPCJLTUH1",[[-1,15,"【】"]],[17,17],[15,15]]],[1584946879187,["Administrator@WIN-T3FPCJLTUH1",[[1,15,"[]"]],[15,15],[17,17]]],[1584946880606,["Administrator@WIN-T3FPCJLTUH1",[[1,16,"html"]],[16,16],[20,20]]],[1584946905292,["Administrator@WIN-T3FPCJLTUH1",[[-1,29,"图片"]],[31,31],[29,29]]],[1584946906723,["Administrator@WIN-T3FPCJLTUH1",[[1,29,"wenjin"]],[29,29],[35,35]]],[1584946907674,["Administrator@WIN-T3FPCJLTUH1",[[-1,29,"wenjin"]],[35,35],[29,29]]],[1584946916979,["Administrator@WIN-T3FPCJLTUH1",[[1,29,"文件，怎么"]],[29,29],[34,34]]],[1584947012291,["Administrator@WIN-T3FPCJLTUH1",[[1,34,"触发"]],[34,34],[36,36]]],[1584947373139,["Administrator@WIN-T3FPCJLTUH1",[[1,36,"相机拍照？"]],[36,36],[41,41]]],[1584947376321,["Administrator@WIN-T3FPCJLTUH1",[[1,41,"\n\n"]],[41,41],[42,42]]],[1584947378984,["Administrator@WIN-T3FPCJLTUH1",[[-1,14,"\n"]],[14,14],[13,13]]],[1584947382617,["Administrator@WIN-T3FPCJLTUH1",[[-1,41,"\n"],[1,42,"【"]],[41,41],[42,42]]],[1584947382723,["Administrator@WIN-T3FPCJLTUH1",[[1,42,"】"]],[42,42],[43,43]]],[1584947383367,["Administrator@WIN-T3FPCJLTUH1",[[-1,42,"】"]],[43,43],[42,42]]],[1584947383553,["Administrator@WIN-T3FPCJLTUH1",[[-1,41,"【"],[1,42,"\n"]],[42,42],[41,41]]],[1584947384047,["Administrator@WIN-T3FPCJLTUH1",[[-1,41,"\n"],[1,42,"p"]],[41,41],[42,42]]],[1584947384530,["Administrator@WIN-T3FPCJLTUH1",[[-1,41,"p"],[1,42,"\n"]],[42,42],[41,41]]],[1584947385010,["Administrator@WIN-T3FPCJLTUH1",[[-1,41,"\n"],[1,42,"["]],[41,41],[42,42]]],[1584947385084,["Administrator@WIN-T3FPCJLTUH1",[[1,42,"]"]],[42,42],[43,43]]],[1584947385995,["Administrator@WIN-T3FPCJLTUH1",[[1,42,"css"]],[42,42],[45,45]]],[1584947405892,["Administrator@WIN-T3FPCJLTUH1",[[1,46," 1. css加载不会阻塞DOM树的解析\n2. css加载会阻塞DOM树的渲染\n3. css加载会阻塞后面js语句的执行"]],[46,46],[106,106]]],[1584947413542,["Administrator@WIN-T3FPCJLTUH1",[[-1,47,"1. "],[1,50,"\n"]],[47,50],[48,48]]],[1584947415012,["Administrator@WIN-T3FPCJLTUH1",[[1,47,"1. "],[-1,47,"\n"]],[48,48],[47,50]]],[1584947417797,["Administrator@WIN-T3FPCJLTUH1",[[1,47,"\n"]],[47,47],[48,48]]],[1584947420343,["Administrator@WIN-T3FPCJLTUH1",[[1,47,"panduan "]],[47,47],[55,55]]],[1584947421501,["Administrator@WIN-T3FPCJLTUH1",[[-1,47,"panduan "]],[55,55],[47,47]]],[1584947430168,["Administrator@WIN-T3FPCJLTUH1",[[1,47,"判断下面三句话的对错？"]],[47,47],[58,58]]],[1584947433812,["Administrator@WIN-T3FPCJLTUH1",[[1,14,"* "]],[14,14],[16,16]]],[1584947436354,["Administrator@WIN-T3FPCJLTUH1",[[1,43,"* "]],[43,43],[45,45]]],[1584947446888,["Administrator@WIN-T3FPCJLTUH1",[[1,63,"  "]],[63,63],[65,65]]],[1584947448661,["Administrator@WIN-T3FPCJLTUH1",[[1,85,"  "]],[85,85],[87,87]]],[1584947449306,["Administrator@WIN-T3FPCJLTUH1",[[1,106,"  "]],[106,106],[108,108]]],[1584947454339,["Administrator@WIN-T3FPCJLTUH1",[[1,128,"\n  4. "]],[128,128],[134,134]]],[1584947455854,["Administrator@WIN-T3FPCJLTUH1",[[-1,129,"  4. "],[1,134,"\n\n"]],[134,134],[130,130]]],[1584947458175,["Administrator@WIN-T3FPCJLTUH1",[[1,129,"* "]],[129,129],[131,131]]],[1584947461024,["Administrator@WIN-T3FPCJLTUH1",[[1,129,"  4. \n"]],[128,128],[134,134]]],[1584947462029,["Administrator@WIN-T3FPCJLTUH1",[[-1,129,"  4. "]],[134,134],[130,130]]],[1584947465887,["Administrator@WIN-T3FPCJLTUH1",[[1,132,"[]"]],[132,132],[134,134]]],[1584947466777,["Administrator@WIN-T3FPCJLTUH1",[[1,133,"js"]],[133,133],[135,135]]],[1584947467392,["Administrator@WIN-T3FPCJLTUH1",[[1,136," "]],[136,136],[137,137]]],[1584947507461,["Administrator@WIN-T3FPCJLTUH1",[[1,137,"数组与类数组有什么"]],[137,137],[146,146]]],[1584947509477,["Administrator@WIN-T3FPCJLTUH1",[[-1,137,"数组与类数组有什么"]],[146,146],[137,137]]],[1584947518434,["Administrator@WIN-T3FPCJLTUH1",[[1,137,"数组、对象和类数组"]],[137,137],[146,146]]],[1584947542166,["Administrator@WIN-T3FPCJLTUH1",[[1,137,"了解"]],[137,137],[139,139]]],[1584947558338,["Administrator@WIN-T3FPCJLTUH1",[[1,148,"。"]],[148,148],[149,149]]],[1584947574201,["Administrator@WIN-T3FPCJLTUH1",[[-1,73,"不"]],[74,74],[73,73]]],[1584947580546,["Administrator@WIN-T3FPCJLTUH1",[[1,115,"不"]],[115,115],[116,116]]],[1584947616094,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"#"]],[1,1],[2,2]]],[1584947618007,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"\n"]],[0,0],[1,1]]],[1584947618868,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"\n"]],[0,0],[1,1]]],[1584947624720,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"# 每日日"]],[0,0],[5,5]]],[1584947625190,["Administrator@WIN-T3FPCJLTUH1",[[-1,4,"日"]],[5,5],[4,4]]],[1584947628311,["Administrator@WIN-T3FPCJLTUH1",[[1,4,"三连"]],[4,4],[6,6]]],[1584948143022,["Administrator@WIN-T3FPCJLTUH1",[[1,54,"\n* "]],[51,51],[54,54]]],[1584948143605,["Administrator@WIN-T3FPCJLTUH1",[[-1,52,"* "]],[54,54],[53,53]]],[1584948157347,["Administrator@WIN-T3FPCJLTUH1",[[-1,52,"\n"]],[52,52],[51,51]]],[1584948205733,["Administrator@WIN-T3FPCJLTUH1",[[1,160,"\n"]],[159,159],[160,160]]],[1584948209089,["Administrator@WIN-T3FPCJLTUH1",[[-1,160,"\n"],[1,161,"·"]],[160,160],[161,161]]],[1584948209866,["Administrator@WIN-T3FPCJLTUH1",[[-1,160,"·"],[1,161,"\n"]],[161,161],[160,160]]],[1584948210824,["Administrator@WIN-T3FPCJLTUH1",[[-1,160,"\n"],[1,161,"`"]],[160,160],[161,161]]],[1584948211266,["Administrator@WIN-T3FPCJLTUH1",[[1,161,"``"]],[161,161],[163,163]]],[1584948211291,["Administrator@WIN-T3FPCJLTUH1",[[1,163,"language\n```\n"]],[163,163],[163,171]]],[1584948214810,["Administrator@WIN-T3FPCJLTUH1",[[-1,163,"language"],[1,171,"j"]],[163,171],[164,164]]],[1584948216054,["Administrator@WIN-T3FPCJLTUH1",[[1,164,"avas"]],[164,164],[168,168]]],[1584948217488,["Administrator@WIN-T3FPCJLTUH1",[[-1,163,"javas"]],[168,168],[163,163]]],[1584948218352,["Administrator@WIN-T3FPCJLTUH1",[[1,163,"html"]],[163,163],[167,167]]],[1584948219088,["Administrator@WIN-T3FPCJLTUH1",[[1,168,"\n"]],[167,167],[168,168]]],[1584948227203,["Administrator@WIN-T3FPCJLTUH1",[[1,168,"<html>"]],[168,168],[174,174]]],[1584948259513,["Administrator@WIN-T3FPCJLTUH1",[[-1,169,"html"],[1,173,"i"]],[169,173],[170,170]]],[1584948274569,["Administrator@WIN-T3FPCJLTUH1",[[1,170,"nput type=\"file\" accept=\""]],[170,170],[195,195]]],[1584948624914,["Administrator@WIN-T3FPCJLTUH1",[[1,195,"image/*\" capture=\"camera\""]],[195,195],[220,220]]],[1584949106845,["Administrator@WIN-T3FPCJLTUH1",[[-1,211,"=\"camera\""]],[211,220],[211,211]]],[1584949119190,["Administrator@WIN-T3FPCJLTUH1",[[1,211,"=\"camera\""]],[211,211],[211,220]]],[1584949121874,["Administrator@WIN-T3FPCJLTUH1",[[1,222,"\n"]],[221,221],[222,222]]],[1584949127021,["Administrator@WIN-T3FPCJLTUH1",[[1,222,"<!-->"]],[222,222],[227,227]]],[1584949129579,["Administrator@WIN-T3FPCJLTUH1",[[1,226,"--"]],[226,226],[228,228]]],[1584949131764,["Administrator@WIN-T3FPCJLTUH1",[[1,226," "]],[226,226],[227,227]]],[1584949138994,["Administrator@WIN-T3FPCJLTUH1",[[-1,222,"<!-- -->"]],[230,230],[222,222]]],[1584949139934,["Administrator@WIN-T3FPCJLTUH1",[[-1,222,"\n"]],[222,222],[221,221]]],[1584949141858,["Administrator@WIN-T3FPCJLTUH1",[[1,226,"\n"]],[225,225],[226,226]]],[1584949447514,["Administrator@WIN-T3FPCJLTUH1",[[-1,211,"=\"camera\""]],[211,220],[211,211]]],[1584949462423,["Administrator@WIN-T3FPCJLTUH1",[[-1,160,"```html\n<input type=\"file\" accept=\"image/*\" capture>\n```\n"]],[160,217],[160,160]]],[1584949464350,["Administrator@WIN-T3FPCJLTUH1",[[1,54,"\n* "]],[51,51],[54,54]]],[1584949465291,["Administrator@WIN-T3FPCJLTUH1",[[-1,52,"* "]],[54,54],[53,53]]],[1584949465473,["Administrator@WIN-T3FPCJLTUH1",[[1,53,"```html\n<input type=\"file\" accept=\"image/*\" capture>\n```\n"]],[53,53],[110,110]]],[1584949467568,["Administrator@WIN-T3FPCJLTUH1",[[1,110,"\n"]],[110,110],[111,111]]],[1584949473907,["Administrator@WIN-T3FPCJLTUH1",[[1,52,"* \n"]],[51,51],[54,54]]],[1584949474291,["Administrator@WIN-T3FPCJLTUH1",[[-1,52,"* "]],[54,54],[53,53]]],[1584949474974,["Administrator@WIN-T3FPCJLTUH1",[[1,54,"\n"]],[53,53],[54,54]]],[1584949475875,["Administrator@WIN-T3FPCJLTUH1",[[-1,54,"\n"]],[54,54],[53,53]]],[1584949476233,["Administrator@WIN-T3FPCJLTUH1",[[-1,53,"\n"]],[53,53],[52,52]]],[1584949477985,["Administrator@WIN-T3FPCJLTUH1",[[-1,52,"\n"]],[52,52],[51,51]]],[1584949479879,["Administrator@WIN-T3FPCJLTUH1",[[1,52,"* \n"]],[51,51],[54,54]]],[1584949483060,["Administrator@WIN-T3FPCJLTUH1",[[-1,52,"* "]],[54,54],[52,52]]],[1584949496720,["Administrator@WIN-T3FPCJLTUH1",[[1,197,"  4. \n"]],[196,196],[202,202]]],[1584949497173,["Administrator@WIN-T3FPCJLTUH1",[[-1,197,"  4. "]],[202,202],[198,198]]],[1584949512821,["Administrator@WIN-T3FPCJLTUH1",[[1,198,"cuo"]],[198,198],[201,201]]],[1584949513757,["Administrator@WIN-T3FPCJLTUH1",[[-1,198,"cuo"]],[201,201],[198,198]]],[1584949525006,["Administrator@WIN-T3FPCJLTUH1",[[1,198,"× √ ×"]],[198,198],[203,203]]],[1584949553247,["Administrator@WIN-T3FPCJLTUH1",[[-1,198,"× √ ×"]],[198,203],[198,198]]],[1584949553610,["Administrator@WIN-T3FPCJLTUH1",[[-1,198,"\n"]],[198,198],[197,197]]],[1584949557202,["Administrator@WIN-T3FPCJLTUH1",[[1,151,"           "]],[151,151],[162,162]]],[1584949560358,["Administrator@WIN-T3FPCJLTUH1",[[-1,151,"           "],[1,162,"-"]],[151,162],[152,152]]],[1584949564362,["Administrator@WIN-T3FPCJLTUH1",[[1,152,"----------------×"]],[152,152],[169,169]]],[1584949568581,["Administrator@WIN-T3FPCJLTUH1",[[1,190,"-----------------"]],[190,190],[207,207]]],[1584949572111,["Administrator@WIN-T3FPCJLTUH1",[[1,207,"√"]],[207,207],[208,208]]],[1584949578102,["Administrator@WIN-T3FPCJLTUH1",[[1,232,"----------×"]],[232,232],[243,243]]],[1584950956900,["Administrator@WIN-T3FPCJLTUH1",[[1,265,"* \n"]],[264,264],[267,267]]],[1584950957596,["Administrator@WIN-T3FPCJLTUH1",[[-1,265,"* "]],[267,267],[266,266]]],[1584950980026,["Administrator@WIN-T3FPCJLTUH1",[[1,266,"1. 数组"]],[266,266],[271,271]]],[1584950983394,["Administrator@WIN-T3FPCJLTUH1",[[-1,269,"数组"]],[271,271],[269,269]]],[1584950991411,["Administrator@WIN-T3FPCJLTUH1",[[1,269,"在JS底层，我们认为"]],[269,269],[279,279]]],[1584950992682,["Administrator@WIN-T3FPCJLTUH1",[[-1,276,"们"]],[277,277],[276,276]]],[1584950998011,["Administrator@WIN-T3FPCJLTUH1",[[1,278,"，数组时"]],[278,278],[282,282]]],[1584950998432,["Administrator@WIN-T3FPCJLTUH1",[[-1,281,"时"]],[282,282],[281,281]]],[1584951009142,["Administrator@WIN-T3FPCJLTUH1",[[1,281,"是一种特殊的对象，"]],[281,281],[290,290]]],[1584951055036,["Administrator@WIN-T3FPCJLTUH1",[[1,290,"即key都为正整数的对象"]],[290,290],[302,302]]],[1584951068358,["Administrator@WIN-T3FPCJLTUH1",[[1,299,"，且有length属性和"]],[299,299],[311,311]]],[1584951074688,["Administrator@WIN-T3FPCJLTUH1",[[1,311,"自己独有方法"]],[311,311],[317,317]]],[1584951099598,["Administrator@WIN-T3FPCJLTUH1",[[-1,317,"的对象"]],[317,320],[317,317]]],[1584951101398,["Administrator@WIN-T3FPCJLTUH1",[[1,315,"的"]],[315,315],[316,316]]],[1584951102569,["Administrator@WIN-T3FPCJLTUH1",[[1,318,"。"]],[318,318],[319,319]]],[1584951117449,["Administrator@WIN-T3FPCJLTUH1",[[-1,289,"，"]],[290,290],[289,289]]],[1584951121212,["Administrator@WIN-T3FPCJLTUH1",[[1,289,"。可以认为，"]],[289,289],[295,295]]],[1584951128211,["Administrator@WIN-T3FPCJLTUH1",[[-1,290,"可以认为，即"]],[295,296],[290,290]]],[1584951129730,["Administrator@WIN-T3FPCJLTUH1",[[1,290,"数组"]],[290,290],[292,292]]],[1584951130274,["Administrator@WIN-T3FPCJLTUH1",[[1,292,"的"]],[292,292],[293,293]]],[1584951168976,["Administrator@WIN-T3FPCJLTUH1",[[1,321,"for in和for of都适用。"]],[321,321],[338,338]]],[1584951173970,["Administrator@WIN-T3FPCJLTUH1",[[1,337,"于数组"]],[337,337],[340,340]]],[1584951176158,["Administrator@WIN-T3FPCJLTUH1",[[1,342,"2. \n"]],[341,341],[345,345]]],[1584951191399,["Administrator@WIN-T3FPCJLTUH1",[[1,266,"  "]],[266,266],[268,268]]],[1584951192420,["Administrator@WIN-T3FPCJLTUH1",[[1,344,"  "]],[344,344],[346,346]]],[1584951267731,["Administrator@WIN-T3FPCJLTUH1",[[1,343,"‘"]],[343,343],[344,344]]],[1584951268617,["Administrator@WIN-T3FPCJLTUH1",[[-1,343,"‘"]],[344,344],[343,343]]],[1584951270344,["Administrator@WIN-T3FPCJLTUH1",[[1,343,"’‘"]],[343,343],[345,345]]],[1584951272493,["Administrator@WIN-T3FPCJLTUH1",[[-1,343,"’‘"]],[345,345],[343,343]]],[1584951391652,["Administrator@WIN-T3FPCJLTUH1",[[-1,298,"都"]],[299,299],[298,298]]],[1584951399392,["Administrator@WIN-T3FPCJLTUH1",[[1,299,"从0开始的"]],[299,299],[304,304]]],[1584951413312,["Administrator@WIN-T3FPCJLTUH1",[[1,353,"对象"]],[353,353],[355,355]]],[1584951418550,["Administrator@WIN-T3FPCJLTUH1",[[-1,353,"对象"]],[355,355],[353,353]]],[1584951462575,["Administrator@WIN-T3FPCJLTUH1",[[1,353,"对象是包含若干个key-value"]],[353,353],[370,370]]],[1584951466863,["Administrator@WIN-T3FPCJLTUH1",[[-1,364,"-"]],[365,365],[364,364]]],[1584951467337,["Administrator@WIN-T3FPCJLTUH1",[[1,364,":"]],[364,364],[365,365]]],[1584951471223,["Administrator@WIN-T3FPCJLTUH1",[[1,361,"`"]],[361,361],[362,362]]],[1584951472965,["Administrator@WIN-T3FPCJLTUH1",[[1,371,"`"]],[371,371],[372,372]]],[1584951475664,["Administrator@WIN-T3FPCJLTUH1",[[1,327,"`"]],[327,327],[328,328]]],[1584951476686,["Administrator@WIN-T3FPCJLTUH1",[[1,334,"`"]],[334,334],[335,335]]],[1584951477844,["Administrator@WIN-T3FPCJLTUH1",[[1,336,"`"]],[336,336],[337,337]]],[1584951478987,["Administrator@WIN-T3FPCJLTUH1",[[1,343,"`"]],[343,343],[344,344]]],[1584951483538,["Administrator@WIN-T3FPCJLTUH1",[[1,310,"`"]],[310,310],[311,311]]],[1584951484823,["Administrator@WIN-T3FPCJLTUH1",[[1,317,"`"]],[317,317],[318,318]]],[1584951486338,["Administrator@WIN-T3FPCJLTUH1",[[1,295,"`"]],[295,295],[296,296]]],[1584951487007,["Administrator@WIN-T3FPCJLTUH1",[[1,299,"`"]],[299,299],[300,300]]],[1584951513769,["Administrator@WIN-T3FPCJLTUH1",[[1,380,"的数据结构，没有length属性，有自己的对象方法。"]],[380,380],[406,406]]],[1584951516416,["Administrator@WIN-T3FPCJLTUH1",[[1,407,"  3. \n"]],[406,406],[412,412]]],[1584951522912,["Administrator@WIN-T3FPCJLTUH1",[[1,412,"当毒性"]],[412,412],[415,415]]],[1584951523544,["Administrator@WIN-T3FPCJLTUH1",[[-1,413,"毒性"]],[415,415],[413,413]]],[1584951532523,["Administrator@WIN-T3FPCJLTUH1",[[1,413,"对象的每个·"]],[413,413],[419,419]]],[1584951533221,["Administrator@WIN-T3FPCJLTUH1",[[-1,418,"·"]],[419,419],[418,418]]],[1584951533816,["Administrator@WIN-T3FPCJLTUH1",[[1,418,"``"]],[418,418],[420,420]]],[1584951537733,["Administrator@WIN-T3FPCJLTUH1",[[1,419,"key:value"]],[419,419],[428,428]]],[1584951544751,["Administrator@WIN-T3FPCJLTUH1",[[1,429,"的key`"]],[429,429],[434,434]]],[1584951545612,["Administrator@WIN-T3FPCJLTUH1",[[1,430,"`"]],[430,430],[431,431]]],[1584951549575,["Administrator@WIN-T3FPCJLTUH1",[[1,435,"遵循"]],[435,435],[437,437]]],[1584951561290,["Administrator@WIN-T3FPCJLTUH1",[[1,437,"从0开始的正整数时"]],[437,437],[446,446]]],[1584951571696,["Administrator@WIN-T3FPCJLTUH1",[[-1,435,"遵循从0开始的正整数时"]],[446,446],[435,435]]],[1584951577574,["Administrator@WIN-T3FPCJLTUH1",[[1,412,"而"]],[412,412],[413,413]]],[1584951589768,["Administrator@WIN-T3FPCJLTUH1",[[1,436,"变成顺序数字()"]],[436,436],[444,444]]],[1584951592107,["Administrator@WIN-T3FPCJLTUH1",[[1,443,"实际上"]],[443,443],[446,446]]],[1584951597562,["Administrator@WIN-T3FPCJLTUH1",[[-1,442,"(实际上)"]],[446,446],[442,442]]],[1584951603720,["Administrator@WIN-T3FPCJLTUH1",[[1,442,"时，"]],[442,442],[444,444]]],[1584951616931,["Administrator@WIN-T3FPCJLTUH1",[[-1,442,"时，"]],[444,444],[442,442]]],[1584951631777,["Administrator@WIN-T3FPCJLTUH1",[[1,442,"，且该对象有了自己的length属性时"]],[442,442],[461,461]]],[1584951633636,["Administrator@WIN-T3FPCJLTUH1",[[1,458,"`"]],[458,458],[459,459]]],[1584951634845,["Administrator@WIN-T3FPCJLTUH1",[[1,452,"`"]],[452,452],[453,453]]],[1584951658569,["Administrator@WIN-T3FPCJLTUH1",[[1,463,"，就变成了一个特殊的类数组对象，如"]],[463,463],[480,480]]],[1584951934272,["Administrator@WIN-T3FPCJLTUH1",[[1,480,"``"]],[480,480],[482,482]]],[1584951940774,["Administrator@WIN-T3FPCJLTUH1",[[1,481,"Arguments"]],[481,481],[490,490]]],[1584951954150,["Administrator@WIN-T3FPCJLTUH1",[[1,491,"对象，document.getElementsByTagName()返回一个类数组对象"]],[491,491],[534,534]]],[1584951956818,["Administrator@WIN-T3FPCJLTUH1",[[1,494,"`"]],[494,494],[495,495]]],[1584951958025,["Administrator@WIN-T3FPCJLTUH1",[[1,526,"`"]],[526,526],[527,527]]],[1584951965265,["Administrator@WIN-T3FPCJLTUH1",[[1,536,"。"]],[536,536],[537,537]]],[1584951995526,["Administrator@WIN-T3FPCJLTUH1",[[1,406,"此时。``"]],[406,406],[411,411]]],[1584951998618,["Administrator@WIN-T3FPCJLTUH1",[[1,410,"for in"]],[410,410],[416,416]]],[1584952001551,["Administrator@WIN-T3FPCJLTUH1",[[-1,408,"。"]],[409,409],[408,408]]],[1584952004113,["Administrator@WIN-T3FPCJLTUH1",[[1,408,"，只有"]],[408,408],[411,411]]],[1584952008344,["Administrator@WIN-T3FPCJLTUH1",[[1,419,"能用。"]],[419,419],[422,422]]],[1584952162088,["Administrator@WIN-T3FPCJLTUH1",[[1,422,"``"]],[422,422],[424,424]]],[1584952168991,["Administrator@WIN-T3FPCJLTUH1",[[1,423,"for of"]],[423,423],[429,429]]],[1584952179992,["Administrator@WIN-T3FPCJLTUH1",[[1,430,"只接受数字``"]],[430,430],[437,437]]],[1584952182960,["Administrator@WIN-T3FPCJLTUH1",[[1,436,"key"]],[436,436],[439,439]]],[1584952184795,["Administrator@WIN-T3FPCJLTUH1",[[1,440,"。"]],[440,440],[441,441]]],[1584952227339,["Administrator@WIN-T3FPCJLTUH1",[[-1,436,"key"],[1,439,"iterable"]],[436,439],[444,444]]],[1584952228921,["Administrator@WIN-T3FPCJLTUH1",[[-1,433,"数字"]],[435,435],[433,433]]],[1584952270252,["Administrator@WIN-T3FPCJLTUH1",[[1,443,"类型的数据，如数组、类数组、字符串"]],[443,443],[460,460]]],[1584952316473,["Administrator@WIN-T3FPCJLTUH1",[[1,592,"此时，``"]],[592,592],[597,597]]],[1584952318945,["Administrator@WIN-T3FPCJLTUH1",[[1,596,"for of "]],[596,596],[603,603]]],[1584952319578,["Administrator@WIN-T3FPCJLTUH1",[[-1,602," "]],[603,603],[602,602]]],[1584952330037,["Administrator@WIN-T3FPCJLTUH1",[[1,603,"还会是我们预期的结果，"]],[603,603],[614,614]]],[1584952332776,["Administrator@WIN-T3FPCJLTUH1",[[1,614,"但是``"]],[614,614],[618,618]]],[1584952335778,["Administrator@WIN-T3FPCJLTUH1",[[1,617,"forin"]],[617,617],[622,622]]],[1584952337282,["Administrator@WIN-T3FPCJLTUH1",[[1,620," "]],[620,620],[621,621]]],[1584952349910,["Administrator@WIN-T3FPCJLTUH1",[[1,624,"不是。"]],[624,624],[627,627]]],[1584952365537,["Administrator@WIN-T3FPCJLTUH1",[[-1,626,"。"]],[627,627],[626,626]]],[1584952365871,["Administrator@WIN-T3FPCJLTUH1",[[1,626,"，"]],[626,626],[627,627]]],[1584952367928,["Administrator@WIN-T3FPCJLTUH1",[[-1,624,"不是，"]],[627,627],[624,624]]],[1584952384443,["Administrator@WIN-T3FPCJLTUH1",[[1,624,"会遍历除了数字``"]],[624,624],[633,633]]],[1584952386746,["Administrator@WIN-T3FPCJLTUH1",[[1,632,"key"]],[632,632],[635,635]]],[1584952387994,["Administrator@WIN-T3FPCJLTUH1",[[1,636,"wai"]],[636,636],[639,639]]],[1584952389056,["Administrator@WIN-T3FPCJLTUH1",[[-1,636,"wai"]],[639,639],[636,636]]],[1584952390185,["Administrator@WIN-T3FPCJLTUH1",[[1,636,"外"]],[636,636],[637,637]]],[1584952395686,["Administrator@WIN-T3FPCJLTUH1",[[1,637,"，length\nVM228:1 item\nVM228:1 namedItem"]],[637,637],[675,675]]],[1584952400374,["Administrator@WIN-T3FPCJLTUH1",[[-1,657,"\nVM228:1"],[1,665,"、"]],[657,657],[658,658]]],[1584952402400,["Administrator@WIN-T3FPCJLTUH1",[[-1,644,"\nVM228:1 "],[1,653,"、"]],[644,644],[645,645]]],[1584952415158,["Administrator@WIN-T3FPCJLTUH1",[[1,624,"除了"]],[624,624],[626,626]]],[1584952417840,["Administrator@WIN-T3FPCJLTUH1",[[-1,627,"遍历除了"]],[631,631],[627,627]]],[1584952421597,["Administrator@WIN-T3FPCJLTUH1",[[1,627,"获得"]],[627,627],[629,629]]],[1584952426047,["Administrator@WIN-T3FPCJLTUH1",[[1,638,"还有`"]],[638,638],[641,641]]],[1584952427502,["Administrator@WIN-T3FPCJLTUH1",[[1,647,"`"]],[647,647],[648,648]]],[1584952428274,["Administrator@WIN-T3FPCJLTUH1",[[1,649,"`"]],[649,649],[650,650]]],[1584952429301,["Administrator@WIN-T3FPCJLTUH1",[[1,654,"`"]],[654,654],[655,655]]],[1584952429859,["Administrator@WIN-T3FPCJLTUH1",[[1,657,"`"]],[657,657],[658,658]]],[1584952436648,["Administrator@WIN-T3FPCJLTUH1",[[1,667,"`三个key·"]],[667,667],[674,674]]],[1584952438261,["Administrator@WIN-T3FPCJLTUH1",[[-1,673,"·"]],[674,674],[673,673]]],[1584952438958,["Administrator@WIN-T3FPCJLTUH1",[[1,673,"`"]],[673,673],[674,674]]],[1584952439637,["Administrator@WIN-T3FPCJLTUH1",[[1,670,"`"]],[670,670],[671,671]]],[1584952441063,["Administrator@WIN-T3FPCJLTUH1",[[1,675,"."]],[675,675],[676,676]]],[1584952441892,["Administrator@WIN-T3FPCJLTUH1",[[-1,675,"."]],[676,676],[675,675]]],[1584952442478,["Administrator@WIN-T3FPCJLTUH1",[[1,675,"。"]],[675,675],[676,676]]],[1584952529001,["Administrator@WIN-T3FPCJLTUH1",[[1,676,"而且，类数组对象可以通过call"]],[676,676],[692,692]]],[1584952539425,["Administrator@WIN-T3FPCJLTUH1",[[-1,686,"通过call"]],[692,692],[686,686]]],[1584952543903,["Administrator@WIN-T3FPCJLTUH1",[[1,686,"转换为数组"]],[686,686],[691,691]]],[1584952546141,["Administrator@WIN-T3FPCJLTUH1",[[1,689,"普通"]],[689,689],[691,691]]],[1584952548278,["Administrator@WIN-T3FPCJLTUH1",[[1,693,"。"]],[693,693],[694,694]]],[1584952579414,["Administrator@WIN-T3FPCJLTUH1",[[1,61,"```\n"],[-1,105,"\n```"]],[105,105],[109,109]]],[1584952580734,["Administrator@WIN-T3FPCJLTUH1",[[-1,61,"```\n"],[1,109,"\n```"]],[109,109],[105,105]]],[1584952582709,["Administrator@WIN-T3FPCJLTUH1",[[1,105,"length\nVM228:1 item\nVM228:1 namedItemlength\nVM228:1 item\nVM228:1 namedItem"]],[105,105],[179,179]]],[1584952584132,["Administrator@WIN-T3FPCJLTUH1",[[-1,105,"length\nVM228:1 item\nVM228:1 namedItemlength\nVM228:1 item\nVM228:1 namedItem"]],[179,179],[105,105]]],[1584952584354,["Administrator@WIN-T3FPCJLTUH1",[[1,61,"```\n"],[-1,105,"\n```"]],[105,105],[109,109]]],[1584952585998,["Administrator@WIN-T3FPCJLTUH1",[[-1,61,"```\n"],[1,109,"\n```"]],[109,109],[105,105]]],[1584952589000,["Administrator@WIN-T3FPCJLTUH1",[[1,106,"\n"]],[105,105],[106,106]]],[1584952589237,["Administrator@WIN-T3FPCJLTUH1",[[1,106,"<input type=\"file\" accept=\"image/*\" capture>"]],[106,106],[150,150]]],[1584952589621,["Administrator@WIN-T3FPCJLTUH1",[[1,151,"\n"]],[150,150],[151,151]]],[1584952589806,["Administrator@WIN-T3FPCJLTUH1",[[1,151,"<input type=\"file\" accept=\"image/*\" capture>"]],[151,151],[195,195]]],[1584952593747,["Administrator@WIN-T3FPCJLTUH1",[[-1,133,"image"],[1,138,"video"]],[133,138],[138,138]]],[1584952595672,["Administrator@WIN-T3FPCJLTUH1",[[-1,178,"im"],[-1,181,"ge"]],[178,183],[179,179]]],[1584952596467,["Administrator@WIN-T3FPCJLTUH1",[[1,179,"uu"]],[179,179],[181,181]]],[1584952597565,["Administrator@WIN-T3FPCJLTUH1",[[-1,180,"u"]],[181,181],[180,180]]],[1584952598271,["Administrator@WIN-T3FPCJLTUH1",[[1,180,"dio"]],[180,180],[183,183]]],[1584952616456,["Administrator@WIN-T3FPCJLTUH1",[[-1,766,"而且，类数组对象可以转换为普通数组。"]],[766,784],[766,766]]],[1584952669385,["Administrator@WIN-T3FPCJLTUH1",[[1,767,"  4. \n"]],[766,766],[772,772]]],[1584952677881,["Administrator@WIN-T3FPCJLTUH1",[[1,772,"还有一种不常见"]],[772,772],[779,779]]],[1584952689517,["Administrator@WIN-T3FPCJLTUH1",[[1,779,"的东西，叫做关联数组。"]],[779,779],[790,790]]],[1584952699061,["Administrator@WIN-T3FPCJLTUH1",[[1,791,"  5. \n"]],[790,790],[796,796]]],[1584952699751,["Administrator@WIN-T3FPCJLTUH1",[[-1,791,"  5. "]],[796,796],[792,792]]],[1584952707826,["Administrator@WIN-T3FPCJLTUH1",[[-1,792,"\n"]],[792,792],[791,791]]],[1584952708314,["Administrator@WIN-T3FPCJLTUH1",[[-1,791,"\n"]],[791,791],[790,790]]],[1584952711760,["Administrator@WIN-T3FPCJLTUH1",[[1,790,"``"]],[790,790],[792,792]]],[1584952713699,["Administrator@WIN-T3FPCJLTUH1",[[1,791,"arr=[]"]],[791,791],[797,797]]],[1584952721464,["Administrator@WIN-T3FPCJLTUH1",[[1,796,"'a',"]],[796,796],[800,800]]],[1584952722030,["Administrator@WIN-T3FPCJLTUH1",[[-1,799,","]],[800,800],[799,799]]],[1584952727715,["Administrator@WIN-T3FPCJLTUH1",[[1,799,":1, 'v'"]],[799,799],[806,806]]],[1584952728808,["Administrator@WIN-T3FPCJLTUH1",[[-1,804,"v'"]],[806,806],[804,804]]],[1584952730951,["Administrator@WIN-T3FPCJLTUH1",[[1,804,"b':2"]],[804,804],[808,808]]],[1584952735654,["Administrator@WIN-T3FPCJLTUH1",[[1,810,"."]],[810,810],[811,811]]],[1584952736409,["Administrator@WIN-T3FPCJLTUH1",[[-1,810,"."]],[811,811],[810,810]]],[1584952736807,["Administrator@WIN-T3FPCJLTUH1",[[1,810,"。"]],[810,810],[811,811]]],[1584953706719,["Administrator@WIN-T3FPCJLTUH1",[[1,334,"  4. \n"]],[333,333],[339,339]]],[1584953707253,["Administrator@WIN-T3FPCJLTUH1",[[-1,334,"  4. "]],[339,339],[335,335]]],[1584953709966,["Administrator@WIN-T3FPCJLTUH1",[[-1,335,"\n"]],[335,335],[334,334]]],[1584953711256,["Administrator@WIN-T3FPCJLTUH1",[[1,335,"\n"]],[334,334],[335,335]]],[1584953712851,["Administrator@WIN-T3FPCJLTUH1",[[1,334,"[https://www.cnblogs.com/chenjg/p/7126822.html](https://www.cnblogs.com/chenjg/p/7126822.html)"]],[334,334],[428,428]]],[1584953719040,["Administrator@WIN-T3FPCJLTUH1",[[-1,335,"https://www.cnblogs.com/chenjg/p/7126822.html"],[1,380,"参考"]],[335,335],[337,337]]],[1584953728371,["Administrator@WIN-T3FPCJLTUH1",[[1,334,"  4. \n"]],[333,333],[339,339]]],[1584953730168,["Administrator@WIN-T3FPCJLTUH1",[[-1,390,")"]],[391,391],[390,390]]],[1584953735585,["Administrator@WIN-T3FPCJLTUH1",[[1,390,")"]],[390,390],[391,391]]],[1584953739528,["Administrator@WIN-T3FPCJLTUH1",[[-1,334,"  4. "]],[339,339],[334,334]]],[1584953740028,["Administrator@WIN-T3FPCJLTUH1",[[-1,334,"\n"]],[334,334],[333,333]]],[1584953752196,["Administrator@WIN-T3FPCJLTUH1",[[1,334,"  4. \n"]],[333,333],[339,339]]],[1584953752835,["Administrator@WIN-T3FPCJLTUH1",[[-1,334,"  4. "]],[339,339],[335,335]]],[1584953759144,["Administrator@WIN-T3FPCJLTUH1",[[-1,335,"[参考](https://www.cnblogs.com/chenjg/p/7126822.html)"]],[335,386],[335,335]]],[1584953760044,["Administrator@WIN-T3FPCJLTUH1",[[1,220,"[参考](https://www.cnblogs.com/chenjg/p/7126822.html)"]],[220,220],[271,271]]],[1584953765465,["Administrator@WIN-T3FPCJLTUH1",[[-1,387,"\n"]],[386,386],[385,385]]],[1584953766513,["Administrator@WIN-T3FPCJLTUH1",[[-1,386,"\n"]],[385,385],[384,384]]],[1584953780770,["Administrator@WIN-T3FPCJLTUH1",[[1,61,"\n"]],[60,60],[61,61]]],[1584953782172,["Administrator@WIN-T3FPCJLTUH1",[[1,61,"//"]],[61,61],[63,63]]],[1584953784936,["Administrator@WIN-T3FPCJLTUH1",[[-1,61,"//"]],[63,63],[61,61]]],[1584953785246,["Administrator@WIN-T3FPCJLTUH1",[[-1,61,"\n"]],[61,61],[60,60]]],[1584953790649,["Administrator@WIN-T3FPCJLTUH1",[[1,61,"\n"]],[60,60],[61,61]]],[1584953793598,["Administrator@WIN-T3FPCJLTUH1",[[1,61,"// 拍照"]],[61,61],[66,66]]],[1584953796509,["Administrator@WIN-T3FPCJLTUH1",[[1,112,"\n"]],[111,111],[112,112]]],[1584953800605,["Administrator@WIN-T3FPCJLTUH1",[[1,112,"// 录像"]],[112,112],[117,117]]],[1584953802607,["Administrator@WIN-T3FPCJLTUH1",[[1,163,"\n"]],[162,162],[163,163]]],[1584953805861,["Administrator@WIN-T3FPCJLTUH1",[[1,163,"// 录音"]],[163,163],[168,168]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["601c33b0-4b2b-4fad-82d7-a476f4735c2a",1585027341356,"# 每日三连\n\n## 2020.03.23\n\n* [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n\n* [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n* [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n",[[1585027335950,["Administrator@WIN-T3FPCJLTUH1",[[1,881,"  5. \n"]],[880,880],[886,886]]],[1585027336301,["Administrator@WIN-T3FPCJLTUH1",[[-1,881,"  5. "]],[886,886],[882,882]]],[1585027336936,["Administrator@WIN-T3FPCJLTUH1",[[1,882,"\n"]],[882,882],[883,883]]],[1585027339281,["Administrator@WIN-T3FPCJLTUH1",[[1,883,"\n"]],[883,883],[884,884]]],[1585027339802,["Administrator@WIN-T3FPCJLTUH1",[[-1,883,"\n"],[1,884,"#"]],[884,884],[884,884]]],[1585027339963,["Administrator@WIN-T3FPCJLTUH1",[[1,884,"#"]],[884,884],[885,885]]],[1585027344664,["Administrator@WIN-T3FPCJLTUH1",[[-1,882,"\n"]],[882,882],[881,881]]],[1585027352076,["Administrator@WIN-T3FPCJLTUH1",[[1,885,"2020.03.24"]],[885,885],[895,895]]],[1585027353104,["Administrator@WIN-T3FPCJLTUH1",[[1,895,"\n\n"]],[895,895],[896,896]]],[1585027354684,["Administrator@WIN-T3FPCJLTUH1",[[1,897,"\n"]],[896,896],[897,897]]],[1585027357051,["Administrator@WIN-T3FPCJLTUH1",[[-1,897,"\n"],[1,898,"*"]],[897,897],[898,898]]],[1585027358133,["Administrator@WIN-T3FPCJLTUH1",[[1,898," []"]],[898,898],[901,901]]],[1585027359418,["Administrator@WIN-T3FPCJLTUH1",[[1,900,"html"]],[900,900],[904,904]]],[1585027360571,["Administrator@WIN-T3FPCJLTUH1",[[1,905," "]],[905,905],[906,906]]],[1585028480307,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585028480307,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585028479534,["Administrator@WIN-T3FPCJLTUH1",[[1,906,"如何禁止输入框"]],[906,906],[913,913]]],[1585028600308,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585028600308,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585028581603,["Administrator@WIN-T3FPCJLTUH1",[[1,910,"input"]],[910,910],[915,915]]],[1585028594761,["Administrator@WIN-T3FPCJLTUH1",[[1,918,"的历史记录？\n* "]],[918,918],[927,927]]],[1585028660309,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585028660309,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585028604281,["Administrator@WIN-T3FPCJLTUH1",[[1,927,"{】"]],[927,927],[929,929]]],[1585028605408,["Administrator@WIN-T3FPCJLTUH1",[[-1,927,"{】"]],[929,929],[927,927]]],[1585028605757,["Administrator@WIN-T3FPCJLTUH1",[[1,927,"【】"]],[927,927],[929,929]]],[1585028606309,["Administrator@WIN-T3FPCJLTUH1",[[-1,927,"【】"]],[929,929],[927,927]]],[1585028606815,["Administrator@WIN-T3FPCJLTUH1",[[1,927,"{】"]],[927,927],[929,929]]],[1585028607503,["Administrator@WIN-T3FPCJLTUH1",[[-1,927,"{】"]],[929,929],[927,927]]],[1585028608732,["Administrator@WIN-T3FPCJLTUH1",[[1,927,"[]"]],[927,927],[929,929]]],[1585028610817,["Administrator@WIN-T3FPCJLTUH1",[[1,928,"css"]],[928,928],[931,931]]],[1585028616429,["Administrator@WIN-T3FPCJLTUH1",[[1,932," \n* "]],[932,932],[936,936]]],[1585028616577,["Administrator@WIN-T3FPCJLTUH1",[[-1,934,"* "],[1,936,"\n\n"]],[936,936],[935,935]]],[1585028616786,["Administrator@WIN-T3FPCJLTUH1",[[1,936,"\n"]],[935,935],[936,936]]],[1585028616918,["Administrator@WIN-T3FPCJLTUH1",[[1,937,"\n"]],[936,936],[937,937]]],[1585029320325,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585029320325,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585029295841,["Administrator@WIN-T3FPCJLTUH1",[[1,934,"* \n"]],[933,933],[936,936]]],[1585029297786,["Administrator@WIN-T3FPCJLTUH1",[[1,936,"[]"]],[936,936],[938,938]]],[1585029299236,["Administrator@WIN-T3FPCJLTUH1",[[1,937,"js"]],[937,937],[939,939]]],[1585029310899,["Administrator@WIN-T3FPCJLTUH1",[[1,940," 怎么"]],[940,940],[943,943]]],[1585029500334,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585029500334,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585029470418,["Administrator@WIN-T3FPCJLTUH1",[[1,943,"把类数组对象转换为数组？"]],[943,943],[955,955]]],[1585030167080,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585030167080,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585030130891,["Administrator@WIN-T3FPCJLTUH1",[[1,933,"了解CSS"]],[933,933],[938,938]]],[1585030288080,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585030288080,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585030239316,["Administrator@WIN-T3FPCJLTUH1",[[-1,933,"了解CSS"]],[938,938],[933,933]]],[1585038837126,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585038837126,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585038831099,["Administrator@WIN-T3FPCJLTUH1",[[1,933,"画一个爱心。"]],[933,933],[939,939]]],[1585038897128,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585038897128,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585038839856,["Administrator@WIN-T3FPCJLTUH1",[[1,933,"纯css"]],[933,933],[937,937]]],[1585038957128,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585038957128,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585038926833,["Administrator@WIN-T3FPCJLTUH1",[[1,927,"\n* "]],[924,924],[927,927]]],[1585038927331,["Administrator@WIN-T3FPCJLTUH1",[[-1,925,"* "]],[927,927],[926,926]]],[1585038931049,["Administrator@WIN-T3FPCJLTUH1",[[1,925,"  <input type=\"text\" autocomplete=\"off\" />"]],[925,925],[967,967]]],[1585038937003,["Administrator@WIN-T3FPCJLTUH1",[[1,927,"```"]],[927,927],[930,930]]],[1585038938573,["Administrator@WIN-T3FPCJLTUH1",[[1,970,"```"]],[970,970],[973,973]]],[1585038943596,["Administrator@WIN-T3FPCJLTUH1",[[-1,970,"```"]],[973,973],[970,970]]],[1585038943833,["Administrator@WIN-T3FPCJLTUH1",[[-1,927,"```"]],[930,930],[927,927]]],[1585038944208,["Administrator@WIN-T3FPCJLTUH1",[[-1,925,"  <input type=\"text\" autocomplete=\"off\" />"]],[967,967],[925,925]]],[1585038946362,["Administrator@WIN-T3FPCJLTUH1",[[1,925,"```"]],[925,925],[928,928]]],[1585038946389,["Administrator@WIN-T3FPCJLTUH1",[[1,928,"language\n```\n"]],[928,928],[928,936]]],[1585038948668,["Administrator@WIN-T3FPCJLTUH1",[[1,925,"* \n"]],[924,924],[927,927]]],[1585038949703,["Administrator@WIN-T3FPCJLTUH1",[[-1,925,"* "]],[927,927],[926,926]]],[1585038955987,["Administrator@WIN-T3FPCJLTUH1",[[-1,929,"language"],[1,937,"h"]],[929,937],[930,930]]],[1585038956647,["Administrator@WIN-T3FPCJLTUH1",[[1,930,"tml"]],[930,930],[933,933]]],[1585038956927,["Administrator@WIN-T3FPCJLTUH1",[[1,934,"\n"]],[933,933],[934,934]]],[1585039017131,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585039017131,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585038958036,["Administrator@WIN-T3FPCJLTUH1",[[1,934,"in"]],[934,934],[936,936]]],[1585038958728,["Administrator@WIN-T3FPCJLTUH1",[[-1,934,"in"]],[936,936],[934,934]]],[1585038959178,["Administrator@WIN-T3FPCJLTUH1",[[1,934,"<input type=\"text\" autocomplete=\"off\" />"]],[934,934],[974,974]]],[1585038977114,["Administrator@WIN-T3FPCJLTUH1",[[1,975,"\n"]],[974,974],[975,975]]],[1585038978786,["Administrator@WIN-T3FPCJLTUH1",[[1,975,"// 比较特殊的是input的类型为password"]],[975,975],[1001,1001]]],[1585038991763,["Administrator@WIN-T3FPCJLTUH1",[[1,1002,"\n"]],[1001,1001],[1002,1002]]],[1585038992117,["Administrator@WIN-T3FPCJLTUH1",[[1,1002,"autocomplete=\"new-password\""]],[1002,1002],[1029,1029]]],[1585039003298,["Administrator@WIN-T3FPCJLTUH1",[[1,1002,"<input type=\"o"]],[1002,1002],[1016,1016]]],[1585039003408,["Administrator@WIN-T3FPCJLTUH1",[[1,1017,"a"]],[1016,1016],[1017,1017]]],[1585039003660,["Administrator@WIN-T3FPCJLTUH1",[[-1,1017,"a"]],[1017,1017],[1016,1016]]],[1585039003882,["Administrator@WIN-T3FPCJLTUH1",[[1,1016,"p"]],[1016,1016],[1017,1017]]],[1585039004415,["Administrator@WIN-T3FPCJLTUH1",[[-1,1015,"op"]],[1017,1017],[1015,1015]]],[1585039004581,["Administrator@WIN-T3FPCJLTUH1",[[1,1015,"p"]],[1015,1015],[1016,1016]]],[1585039004652,["Administrator@WIN-T3FPCJLTUH1",[[1,1017,"a"]],[1016,1016],[1017,1017]]],[1585039008212,["Administrator@WIN-T3FPCJLTUH1",[[1,1017,"ssword\" "]],[1017,1017],[1025,1025]]],[1585039011025,["Administrator@WIN-T3FPCJLTUH1",[[1,1052," />"]],[1052,1052],[1055,1055]]],[1585040172083,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585040172083,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585040141533,["Administrator@WIN-T3FPCJLTUH1",[[1,1082,"\n* "]],[1079,1079],[1082,1082]]],[1585040142077,["Administrator@WIN-T3FPCJLTUH1",[[-1,1080,"* "]],[1082,1082],[1081,1081]]],[1585040145471,["Administrator@WIN-T3FPCJLTUH1",[[1,1080,"··"]],[1080,1080],[1082,1082]]],[1585040146310,["Administrator@WIN-T3FPCJLTUH1",[[-1,1080,"··"]],[1082,1082],[1080,1080]]],[1585040147113,["Administrator@WIN-T3FPCJLTUH1",[[1,1080,"```"]],[1080,1080],[1083,1083]]],[1585040147140,["Administrator@WIN-T3FPCJLTUH1",[[1,1083,"language\n```\n"]],[1083,1083],[1083,1091]]],[1585040148009,["Administrator@WIN-T3FPCJLTUH1",[[-1,1083,"language"],[1,1091,"h"]],[1083,1091],[1084,1084]]],[1585040148764,["Administrator@WIN-T3FPCJLTUH1",[[1,1084,"tml"]],[1084,1084],[1087,1087]]],[1585040149549,["Administrator@WIN-T3FPCJLTUH1",[[1,1088,"\n"]],[1087,1087],[1088,1088]]],[1585040150317,["Administrator@WIN-T3FPCJLTUH1",[[1,1088,"<!DOCTYPE html>\n\n<html lang=\"en\">\n\n<head>\n\n  <meta charset=\"UTF-8\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n  <title>Document</title>\n\n  <style>\n\n    .heart {\n\n      width: 66px;\n\n      height: 66px;\n\n      background-color: red;\n\n      transform: rotateZ(45deg) translateX(100%);\n\n    }\n\n    .heart::before {\n\n      content: '';\n\n      display: block;\n\n      width: 100%;\n\n      height: 100%;\n\n      background-color: red;\n\n      border-radius: 50%;\n\n      transform: translateX(-50%);\n\n    }\n\n    .heart::after {\n\n      content: '';\n\n      display: block;\n\n      width: 100%;\n\n      height: 100%;\n\n      background-color: red;\n\n      border-radius: 50%;\n\n      transform: rotateZ(-90deg) translateX(150%);\n\n    }\n\n  </style>\n\n</head>\n\n<body>\n\n  <div class=\"heart\"></div>\n\n</body>\n\n</html>"]],[1088,1088],[1913,1913]]],[1585040152152,["Administrator@WIN-T3FPCJLTUH1",[[-1,1104,"\n"]],[1104,1104],[1103,1103]]],[1585040153582,["Administrator@WIN-T3FPCJLTUH1",[[-1,1121,"\n"]],[1121,1121],[1120,1120]]],[1585040154121,["Administrator@WIN-T3FPCJLTUH1",[[-1,1128,"\n"]],[1128,1128],[1127,1127]]],[1585040154624,["Administrator@WIN-T3FPCJLTUH1",[[-1,1153,"\n"]],[1153,1153],[1152,1152]]],[1585040155224,["Administrator@WIN-T3FPCJLTUH1",[[-1,1226,"\n"]],[1226,1226],[1225,1225]]],[1585040155802,["Administrator@WIN-T3FPCJLTUH1",[[-1,1252,"\n"]],[1252,1252],[1251,1251]]],[1585040156316,["Administrator@WIN-T3FPCJLTUH1",[[-1,1262,"\n"]],[1262,1262],[1261,1261]]],[1585040159200,["Administrator@WIN-T3FPCJLTUH1",[[-1,1275,"\n"]],[1275,1275],[1274,1274]]],[1585040159670,["Administrator@WIN-T3FPCJLTUH1",[[-1,1294,"\n"]],[1294,1294],[1293,1293]]],[1585040160134,["Administrator@WIN-T3FPCJLTUH1",[[-1,1314,"\n"]],[1314,1314],[1313,1313]]],[1585040160605,["Administrator@WIN-T3FPCJLTUH1",[[-1,1343,"\n"]],[1343,1343],[1342,1342]]],[1585040161125,["Administrator@WIN-T3FPCJLTUH1",[[-1,1393,"\n"]],[1393,1393],[1392,1392]]],[1585040161583,["Administrator@WIN-T3FPCJLTUH1",[[-1,1399,"\n"]],[1399,1399],[1398,1398]]],[1585040162081,["Administrator@WIN-T3FPCJLTUH1",[[-1,1420,"\n"]],[1420,1420],[1419,1419]]],[1585040162998,["Administrator@WIN-T3FPCJLTUH1",[[-1,1439,"\n"]],[1439,1439],[1438,1438]]],[1585040163688,["Administrator@WIN-T3FPCJLTUH1",[[-1,1461,"\n"]],[1461,1461],[1460,1460]]],[1585040164317,["Administrator@WIN-T3FPCJLTUH1",[[-1,1480,"\n"]],[1480,1480],[1479,1479]]],[1585040164972,["Administrator@WIN-T3FPCJLTUH1",[[-1,1500,"\n"]],[1500,1500],[1499,1499]]],[1585040165617,["Administrator@WIN-T3FPCJLTUH1",[[-1,1529,"\n"]],[1529,1529],[1528,1528]]],[1585040166089,["Administrator@WIN-T3FPCJLTUH1",[[-1,1555,"\n"]],[1555,1555],[1554,1554]]],[1585040166669,["Administrator@WIN-T3FPCJLTUH1",[[-1,1590,"\n"]],[1590,1590],[1589,1589]]],[1585040167691,["Administrator@WIN-T3FPCJLTUH1",[[-1,1617,"\n"]],[1617,1617],[1616,1616]]],[1585040168240,["Administrator@WIN-T3FPCJLTUH1",[[-1,1636,"\n"]],[1636,1636],[1635,1635]]],[1585040168834,["Administrator@WIN-T3FPCJLTUH1",[[-1,1596,"\n"]],[1596,1596],[1595,1595]]],[1585040169831,["Administrator@WIN-T3FPCJLTUH1",[[-1,1657,"\n"]],[1657,1657],[1656,1656]]],[1585040170774,["Administrator@WIN-T3FPCJLTUH1",[[-1,1676,"\n"]],[1676,1676],[1675,1675]]],[1585040172031,["Administrator@WIN-T3FPCJLTUH1",[[-1,1696,"\n"]],[1696,1696],[1695,1695]]],[1585040232090,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585040232090,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585040172525,["Administrator@WIN-T3FPCJLTUH1",[[-1,1725,"\n"]],[1725,1725],[1724,1724]]],[1585040173133,["Administrator@WIN-T3FPCJLTUH1",[[-1,1751,"\n"]],[1751,1751],[1750,1750]]],[1585040173774,["Administrator@WIN-T3FPCJLTUH1",[[-1,1802,"\n"]],[1802,1802],[1801,1801]]],[1585040174942,["Administrator@WIN-T3FPCJLTUH1",[[-1,1808,"\n"]],[1808,1808],[1807,1807]]],[1585040175682,["Administrator@WIN-T3FPCJLTUH1",[[-1,1819,"\n"]],[1819,1819],[1818,1818]]],[1585040176130,["Administrator@WIN-T3FPCJLTUH1",[[-1,1827,"\n"]],[1827,1827],[1826,1826]]],[1585040176593,["Administrator@WIN-T3FPCJLTUH1",[[-1,1834,"\n"]],[1834,1834],[1833,1833]]],[1585040177194,["Administrator@WIN-T3FPCJLTUH1",[[-1,1862,"\n"]],[1862,1862],[1861,1861]]],[1585040177722,["Administrator@WIN-T3FPCJLTUH1",[[-1,1870,"\n"]],[1870,1870],[1869,1869]]],[1585040195056,["Administrator@WIN-T3FPCJLTUH1",[[-1,1088,"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Document</title>"]],[1088,1251],[1088,1088]]],[1585040195469,["Administrator@WIN-T3FPCJLTUH1",[[-1,1088,"\n"]],[1088,1088],[1087,1087]]],[1585040199440,["Administrator@WIN-T3FPCJLTUH1",[[-1,1088,"  "],[-1,1098,"    "],[-1,1111,"      "],[-1,1130,"      "],[-1,1150,"      "],[-1,1179,"      "],[-1,1229,"    "],[-1,1235,"    "],[-1,1256,"      "],[-1,1275,"      "],[-1,1297,"      "],[-1,1316,"      "],[-1,1336,"      "],[-1,1365,"      "],[-1,1391,"      "],[-1,1426,"    "],[-1,1432,"    "],[-1,1452,"      "],[-1,1471,"      "],[-1,1493,"      "],[-1,1512,"      "],[-1,1532,"      "],[-1,1561,"      "],[-1,1587,"      "],[-1,1638,"    "],[-1,1644,"  "]],[1090,1654],[1090,1654]]],[1585040203191,["Administrator@WIN-T3FPCJLTUH1",[[1,1088,"  "],[1,1096,"    "],[1,1105,"      "],[1,1118,"      "],[1,1132,"      "],[1,1155,"      "],[1,1199,"    "],[1,1201,"    "],[1,1218,"      "],[1,1231,"      "],[1,1247,"      "],[1,1260,"      "],[1,1274,"      "],[1,1297,"      "],[1,1317,"      "],[1,1346,"    "],[1,1348,"    "],[1,1364,"      "],[1,1377,"      "],[1,1393,"      "],[1,1406,"      "],[1,1420,"      "],[1,1443,"      "],[1,1463,"      "],[1,1508,"    "],[1,1510,"  "]],[1090,1654],[1090,1654]]],[1585040204651,["Administrator@WIN-T3FPCJLTUH1",[[-1,1088,"  "],[-1,1098,"    "],[-1,1111,"      "],[-1,1130,"      "],[-1,1150,"      "],[-1,1179,"      "],[-1,1229,"    "],[-1,1235,"    "],[-1,1256,"      "],[-1,1275,"      "],[-1,1297,"      "],[-1,1316,"      "],[-1,1336,"      "],[-1,1365,"      "],[-1,1391,"      "],[-1,1426,"    "],[-1,1432,"    "],[-1,1452,"      "],[-1,1471,"      "],[-1,1493,"      "],[-1,1512,"      "],[-1,1532,"      "],[-1,1561,"      "],[-1,1587,"      "],[-1,1638,"    "],[-1,1644,"  "]],[1090,1654],[1090,1654]]],[1585040217618,["Administrator@WIN-T3FPCJLTUH1",[[-1,1519,"</head>\n<body>"]],[1519,1533],[1519,1519]]],[1585040219249,["Administrator@WIN-T3FPCJLTUH1",[[-1,1548,"</body>\n</html>"]],[1548,1563],[1548,1548]]],[1585040220882,["Administrator@WIN-T3FPCJLTUH1",[[-1,1548,"\n"]],[1548,1548],[1547,1547]]],[1585040221494,["Administrator@WIN-T3FPCJLTUH1",[[-1,1521," "]],[1522,1522],[1521,1521]]],[1585040221992,["Administrator@WIN-T3FPCJLTUH1",[[-1,1545,">"]],[1546,1546],[1545,1545]]],[1585040225002,["Administrator@WIN-T3FPCJLTUH1",[[1,1545,">"]],[1545,1545],[1546,1546]]],[1585040228430,["Administrator@WIN-T3FPCJLTUH1",[[-1,1520," <div class=\"heart\"></div>"]],[1521,1521],[1520,1520]]],[1585040229334,["Administrator@WIN-T3FPCJLTUH1",[[-1,1520,"\n"]],[1520,1520],[1519,1519]]],[1585040229677,["Administrator@WIN-T3FPCJLTUH1",[[-1,1519,"\n"]],[1519,1519],[1518,1518]]],[1585040231223,["Administrator@WIN-T3FPCJLTUH1",[[1,1088,"\n"]],[1087,1087],[1088,1088]]],[1585040231999,["Administrator@WIN-T3FPCJLTUH1",[[1,1088,"<div class=\"heart\"></div>"]],[1088,1088],[1113,1113]]],[1585040292090,[null,[[1,884," "],[-1,894,"\n"]],[884,884],[894,894]]],[1585040292090,[null,[[-1,884," "],[1,895,"\n"]],[894,894],[884,884]]],[1585040242689,["Administrator@WIN-T3FPCJLTUH1",[[1,1122,"  "],[1,1131,"  "],[1,1144,"  "],[1,1158,"  "],[1,1181,"  "],[1,1225,"  "],[1,1227,"  "],[1,1244,"  "],[1,1257,"  "],[1,1273,"  "],[1,1286,"  "],[1,1300,"  "],[1,1323,"  "],[1,1343,"  "],[1,1372,"  "],[1,1374,"  "],[1,1390,"  "],[1,1403,"  "],[1,1419,"  "],[1,1432,"  "],[1,1446,"  "],[1,1469,"  "],[1,1489,"  "],[1,1534,"  "]],[1122,1535],[1122,1583]]],[1585040245758,["Administrator@WIN-T3FPCJLTUH1",[[1,1135,"  "],[1,1148,"  "],[1,1166,"  "],[1,1189,"  "]],[1135,1234],[1137,1242]]],[1585040247919,["Administrator@WIN-T3FPCJLTUH1",[[1,1268,"  "],[1,1281,"  "],[1,1301,"  "],[1,1314," "],[1,1316," "],[1,1330,"  "],[1,1355," "],[1,1357," "],[1,1377,"  "]],[1268,1407],[1270,1421]]],[1585040249440,["Administrator@WIN-T3FPCJLTUH1",[[1,1446,"  "],[1,1459,"  "],[1,1479,"  "],[1,1492," "],[1,1494," "],[1,1508,"  "],[1,1533," "],[1,1535," "],[1,1555,"  "]],[1446,1601],[1448,1615]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["f9b7c528-3272-444c-be08-5004e9a0666a",1585113296862,"# 每日三连\n\n## 2020.03.23\n\n* [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n\n* [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n* [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n* [html] 如何禁止input输入框的历史记录？\n\n```html\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n* [css] 纯css画一个爱心。\n```html\n<div class=\"heart\"></div>\n<style>\n  .heart {\n    width: 66px;\n    height: 66px;\n    background-color: red;\n    transform: rotateZ(45deg) translateX(100%);\n  }\n  .heart::before {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    background-color: red;\n    border-radius: 50%;\n    transform: translateX(-50%);\n  }\n  .heart::after {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    background-color: red;\n    border-radius: 50%;\n    transform: rotateZ(-90deg) translateX(150%);\n  }\n</style>\n```\n\n* [js] 怎么把类数组对象转换为数组？\n\n\n\n\n",[[1585113290383,["Administrator@WIN-T3FPCJLTUH1",[[1,1656,"* \n"]],[1655,1655],[1658,1658]]],[1585113292530,["Administrator@WIN-T3FPCJLTUH1",[[-1,1656,"* "]],[1658,1658],[1657,1657]]],[1585113295345,["Administrator@WIN-T3FPCJLTUH1",[[-1,1092," "],[1,1093," "],[-1,1130," "],[1,1131," "],[-1,1143," "],[1,1144," "],[-1,1161," "],[1,1162," "],[-1,1189," "],[1,1190," "],[-1,1209," "],[1,1210," "],[-1,1224," "],[1,1225," "],[-1,1263," "],[1,1264," "],[-1,1278," "],[1,1279," "],[-1,1295," "],[1,1296," "],[-1,1313," "],[1,1314," "],[-1,1331," "],[1,1332," "],[-1,1359," "],[1,1360," "],[-1,1383," "],[1,1384," "],[-1,1403," "],[1,1404," "],[-1,1441," "],[1,1442," "],[-1,1456," "],[1,1457," "],[-1,1473," "],[1,1474," "],[-1,1491," "],[1,1492," "],[-1,1509," "],[1,1510," "],[-1,1537," "],[1,1538," "],[-1,1561," "],[1,1562," "],[-1,1581," "],[1,1582," "],[-1,1597," "],[1,1598," "],[1,1657,"```"]],[1657,1657],[1660,1660]]],[1585113295373,["Administrator@WIN-T3FPCJLTUH1",[[1,1660,"language\n```\n"]],[1660,1660],[1660,1668]]],[1585113298585,["Administrator@WIN-T3FPCJLTUH1",[[-1,1660,"language"],[1,1668,"j"]],[1660,1668],[1661,1661]]],[1585113301288,["Administrator@WIN-T3FPCJLTUH1",[[1,1661,"avascript"]],[1661,1661],[1670,1670]]],[1585113301826,["Administrator@WIN-T3FPCJLTUH1",[[1,1671,"\n"]],[1670,1670],[1671,1671]]],[1585113323726,["Administrator@WIN-T3FPCJLTUH1",[[1,1671,"// 1.Array.from(0"]],[1671,1671],[1688,1688]]],[1585113324712,["Administrator@WIN-T3FPCJLTUH1",[[-1,1687,"0"]],[1688,1688],[1687,1687]]],[1585113325512,["Administrator@WIN-T3FPCJLTUH1",[[1,1687,"0"]],[1687,1687],[1688,1688]]],[1585113326060,["Administrator@WIN-T3FPCJLTUH1",[[-1,1687,"0"]],[1688,1688],[1687,1687]]],[1585113330419,["Administrator@WIN-T3FPCJLTUH1",[[1,1687,")方法"]],[1687,1687],[1690,1690]]],[1585113330801,["Administrator@WIN-T3FPCJLTUH1",[[1,1691,"\n"]],[1690,1690],[1691,1691]]],[1585113797151,["Administrator@WIN-T3FPCJLTUH1",[[-1,1657,"```javascript\n// 1.Array.from()方法\n\n```"]],[1657,1695],[1657,1657]]],[1585113799493,["Administrator@WIN-T3FPCJLTUH1",[[1,1657,"```javascript\n// 1.Array.from()方法\n\n```"]],[1657,1657],[1657,1695]]],[1585113801247,["Administrator@WIN-T3FPCJLTUH1",[[-1,1692,"```"]],[1695,1695],[1692,1692]]],[1585113801509,["Administrator@WIN-T3FPCJLTUH1",[[-1,1696,"\n"]],[1692,1692],[1691,1691]]],[1585113803522,["Administrator@WIN-T3FPCJLTUH1",[[-1,1657,"```javascript"]],[1657,1670],[1657,1657]]],[1585113804098,["Administrator@WIN-T3FPCJLTUH1",[[-1,1657,"\n"]],[1657,1657],[1656,1656]]],[1585113807085,["Administrator@WIN-T3FPCJLTUH1",[[-1,1657,"// "]],[1660,1660],[1657,1657]]],[1585113807468,["Administrator@WIN-T3FPCJLTUH1",[[-1,1656,"\n"]],[1657,1657],[1656,1656]]],[1585113808157,["Administrator@WIN-T3FPCJLTUH1",[[-1,1655,"\n"]],[1656,1656],[1655,1655]]],[1585113808853,["Administrator@WIN-T3FPCJLTUH1",[[1,1655,"\n"]],[1655,1655],[1656,1656]]],[1585113813735,["Administrator@WIN-T3FPCJLTUH1",[[1,1658," "]],[1658,1658],[1659,1659]]],[1585113817621,["Administrator@WIN-T3FPCJLTUH1",[[1,1656,"  "]],[1656,1656],[1658,1658]]],[1585113821536,["Administrator@WIN-T3FPCJLTUH1",[[-1,1656,"  "]],[1658,1658],[1656,1656]]],[1585113822845,["Administrator@WIN-T3FPCJLTUH1",[[1,1656,"  "]],[1656,1656],[1658,1658]]],[1585113828981,["Administrator@WIN-T3FPCJLTUH1",[[1,1661,"`"]],[1661,1661],[1662,1662]]],[1585113830606,["Administrator@WIN-T3FPCJLTUH1",[[1,1674,"`"]],[1674,1674],[1675,1675]]],[1585113854702,["Administrator@WIN-T3FPCJLTUH1",[[1,1678,"[https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)"]],[1678,1678],[1864,1864]]],[1585113862542,["Administrator@WIN-T3FPCJLTUH1",[[-1,1679,"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from"],[1,1770,"具体用法"]],[1679,1679],[1683,1683]]],[1585113865650,["Administrator@WIN-T3FPCJLTUH1",[[-1,1677,"\n"]],[1678,1678],[1677,1677]]],[1585113871214,["Administrator@WIN-T3FPCJLTUH1",[[1,1677,"---"]],[1677,1677],[1680,1680]]],[1585113874065,["Administrator@WIN-T3FPCJLTUH1",[[1,1780,"  2. \n"]],[1779,1779],[1785,1785]]],[1585113874886,["Administrator@WIN-T3FPCJLTUH1",[[-1,1780,"  2. "]],[1785,1785],[1781,1781]]],[1585113886508,["Administrator@WIN-T3FPCJLTUH1",[[1,1780,"```"]],[1780,1780],[1783,1783]]],[1585113886536,["Administrator@WIN-T3FPCJLTUH1",[[1,1783,"language\n```\n"]],[1783,1783],[1783,1791]]],[1585113887781,["Administrator@WIN-T3FPCJLTUH1",[[-1,1783,"language"],[1,1791,"j"]],[1783,1791],[1784,1784]]],[1585113890017,["Administrator@WIN-T3FPCJLTUH1",[[1,1784,"avascript"]],[1784,1784],[1793,1793]]],[1585113890236,["Administrator@WIN-T3FPCJLTUH1",[[1,1794,"\n"]],[1793,1793],[1794,1794]]],[1585113896007,["Administrator@WIN-T3FPCJLTUH1",[[1,1794,"//将hdList用Array.from（）方法转换为数组，并用list变量接收\nlet list = Array.from(hdList);"]],[1794,1794],[1865,1865]]],[1585113903462,["Administrator@WIN-T3FPCJLTUH1",[[-1,1797,"hdList"],[1,1803,"l"]],[1797,1803],[1798,1798]]],[1585113906024,["Administrator@WIN-T3FPCJLTUH1",[[1,1798,"ikeArray"]],[1798,1798],[1806,1806]]],[1585113911193,["Administrator@WIN-T3FPCJLTUH1",[[-1,1860,"hdList"],[1,1866,"l"]],[1860,1866],[1861,1861]]],[1585113913111,["Administrator@WIN-T3FPCJLTUH1",[[1,1861,"ikeArray"]],[1861,1861],[1869,1869]]],[1585113930073,["Administrator@WIN-T3FPCJLTUH1",[[1,1780,"  "]],[1780,1780],[1782,1782]]],[1585113937452,["Administrator@WIN-T3FPCJLTUH1",[[-1,1873,"\n"]],[1874,1874],[1873,1873]]],[1585113939219,["Administrator@WIN-T3FPCJLTUH1",[[1,1873,"\n"]],[1873,1873],[1874,1874]]],[1585113940514,["Administrator@WIN-T3FPCJLTUH1",[[-1,1780,"  "]],[1782,1782],[1780,1780]]],[1585113971414,["Administrator@WIN-T3FPCJLTUH1",[[1,1876,"  2. "]],[1876,1876],[1881,1881]]],[1585113976583,["Administrator@WIN-T3FPCJLTUH1",[[1,1878,"  "]],[1878,1878],[1880,1880]]],[1585113983668,["Administrator@WIN-T3FPCJLTUH1",[[-1,1876,"    "]],[1880,1880],[1876,1876]]],[1585113984197,["Administrator@WIN-T3FPCJLTUH1",[[-1,1875,"\n"]],[1876,1876],[1875,1875]]],[1585113986210,["Administrator@WIN-T3FPCJLTUH1",[[1,1875,"\n"]],[1875,1875],[1876,1876]]],[1585113987676,["Administrator@WIN-T3FPCJLTUH1",[[1,1876,"\n"]],[1876,1876],[1877,1877]]],[1585113988133,["Administrator@WIN-T3FPCJLTUH1",[[1,1877,"\n"]],[1877,1877],[1878,1878]]],[1585113988707,["Administrator@WIN-T3FPCJLTUH1",[[1,1878,"\n"]],[1878,1878],[1879,1879]]],[1585113989139,["Administrator@WIN-T3FPCJLTUH1",[[1,1879,"\n"]],[1879,1879],[1880,1880]]],[1585113989562,["Administrator@WIN-T3FPCJLTUH1",[[-1,1879,"\n"]],[1880,1880],[1879,1879]]],[1585113989799,["Administrator@WIN-T3FPCJLTUH1",[[-1,1878,"\n"]],[1879,1879],[1878,1878]]],[1585113990026,["Administrator@WIN-T3FPCJLTUH1",[[-1,1877,"\n"]],[1878,1878],[1877,1877]]],[1585113992346,["Administrator@WIN-T3FPCJLTUH1",[[1,1877,"      "]],[1877,1877],[1883,1883]]],[1585113993508,["Administrator@WIN-T3FPCJLTUH1",[[-1,1878,"     "]],[1883,1883],[1878,1878]]],[1585114001505,["Administrator@WIN-T3FPCJLTUH1",[[-1,1877," 2.\n "]],[1881,1881],[1876,1876]]],[1585114004863,["Administrator@WIN-T3FPCJLTUH1",[[-1,1781,"``javascript"]],[1781,1793],[1781,1781]]],[1585114006196,["Administrator@WIN-T3FPCJLTUH1",[[-1,1861,"``"]],[1861,1863],[1861,1861]]],[1585114020052,["Administrator@WIN-T3FPCJLTUH1",[[-1,1781,"\n"]],[1782,1782],[1781,1781]]],[1585114021341,["Administrator@WIN-T3FPCJLTUH1",[[-1,1780,"`"]],[1781,1781],[1780,1780]]],[1585114022655,["Administrator@WIN-T3FPCJLTUH1",[[-1,1780,"//"]],[1782,1782],[1780,1780]]],[1585114027055,["Administrator@WIN-T3FPCJLTUH1",[[-1,1801,"（"]],[1802,1802],[1801,1801]]],[1585114028718,["Administrator@WIN-T3FPCJLTUH1",[[1,1801,"（"]],[1801,1801],[1802,1802]]],[1585114032258,["Administrator@WIN-T3FPCJLTUH1",[[-1,1801,"（）"]],[1803,1803],[1801,1801]]],[1585114034566,["Administrator@WIN-T3FPCJLTUH1",[[1,1801,"()"]],[1801,1801],[1803,1803]]],[1585114038238,["Administrator@WIN-T3FPCJLTUH1",[[-1,1856,"`"]],[1857,1857],[1856,1856]]],[1585114038797,["Administrator@WIN-T3FPCJLTUH1",[[-1,1861,"\n"]],[1856,1856],[1855,1855]]],[1585114041607,["Administrator@WIN-T3FPCJLTUH1",[[1,1822,"`"]],[1822,1822],[1823,1823]]],[1585114042724,["Administrator@WIN-T3FPCJLTUH1",[[1,1856,"`"]],[1856,1856],[1857,1857]]],[1585114048432,["Administrator@WIN-T3FPCJLTUH1",[[1,1781,"`"]],[1781,1781],[1782,1782]]],[1585114049675,["Administrator@WIN-T3FPCJLTUH1",[[1,1791,"`"]],[1791,1791],[1792,1792]]],[1585114051049,["Administrator@WIN-T3FPCJLTUH1",[[1,1793,"`"]],[1793,1793],[1794,1794]]],[1585114051975,["Administrator@WIN-T3FPCJLTUH1",[[1,1806,"`"]],[1806,1806],[1807,1807]]],[1585114054044,["Administrator@WIN-T3FPCJLTUH1",[[1,1817,"`"]],[1817,1817],[1818,1818]]],[1585114055604,["Administrator@WIN-T3FPCJLTUH1",[[1,1822,"`"]],[1822,1822],[1823,1823]]],[1585114062025,["Administrator@WIN-T3FPCJLTUH1",[[1,1869,"\n"]],[1863,1863],[1864,1864]]],[1585114064211,["Administrator@WIN-T3FPCJLTUH1",[[1,1864,"2. "]],[1864,1864],[1867,1867]]],[1585114066083,["Administrator@WIN-T3FPCJLTUH1",[[1,1864,"  "]],[1864,1864],[1866,1866]]],[1585114075500,["Administrator@WIN-T3FPCJLTUH1",[[1,1869,"用Array.prototype.slice.call（elems）方法转化为数组"]],[1869,1869],[1910,1910]]],[1585114082084,["Administrator@WIN-T3FPCJLTUH1",[[1,1870,"`"]],[1870,1870],[1871,1871]]],[1585114083710,["Administrator@WIN-T3FPCJLTUH1",[[1,1904,"`"]],[1904,1904],[1905,1905]]],[1585114087438,["Administrator@WIN-T3FPCJLTUH1",[[-1,1897,"（"]],[1898,1898],[1897,1897]]],[1585114088144,["Administrator@WIN-T3FPCJLTUH1",[[1,1897,"("]],[1897,1897],[1898,1898]]],[1585114091419,["Administrator@WIN-T3FPCJLTUH1",[[-1,1903,"）"]],[1904,1904],[1903,1903]]],[1585114091793,["Administrator@WIN-T3FPCJLTUH1",[[1,1903,")"]],[1903,1903],[1904,1904]]],[1585114103806,["Administrator@WIN-T3FPCJLTUH1",[[-1,1898,"elems"]],[1903,1903],[1898,1898]]],[1585114109191,["Administrator@WIN-T3FPCJLTUH1",[[-1,1902,"转化为数组"]],[1907,1907],[1902,1902]]],[1585114119381,["Administrator@WIN-T3FPCJLTUH1",[[1,1903,"  3. \n  3. \n"]],[1902,1902],[1908,1908]]],[1585114120159,["Administrator@WIN-T3FPCJLTUH1",[[-1,1903,"  3. "]],[1908,1908],[1904,1904]]],[1585114137530,["Administrator@WIN-T3FPCJLTUH1",[[1,1904,"```javascript\n//hdList转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(hdList);\n//添加点击事件\nlist.forEach((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n"]],[1903,1903],[2128,2128]]],[1585114145256,["Administrator@WIN-T3FPCJLTUH1",[[-1,1903,"\n"]],[1903,1903],[1902,1902]]],[1585114167035,["Administrator@WIN-T3FPCJLTUH1",[[-1,1657," "]],[1658,1658],[1657,1657]]],[1585114169747,["Administrator@WIN-T3FPCJLTUH1",[[-1,1864," "]],[1865,1865],[1864,1864]]],[1585114185411,["Administrator@WIN-T3FPCJLTUH1",[[-1,1779,"将`likeArray`用`Array.from()`方法转换为数组，并用`list`变量接收\n`let list = Array.from(likeArray);`"]],[1779,1862],[1779,1779]]],[1585114190385,["Administrator@WIN-T3FPCJLTUH1",[[1,1779,"```javascript"]],[1779,1779],[1792,1792]]],[1585114192759,["Administrator@WIN-T3FPCJLTUH1",[[1,1793,"\n"]],[1792,1792],[1793,1793]]],[1585114194558,["Administrator@WIN-T3FPCJLTUH1",[[1,1793,"```"]],[1793,1793],[1796,1796]]],[1585114197058,["Administrator@WIN-T3FPCJLTUH1",[[1,1793,"\n"]],[1792,1792],[1793,1793]]],[1585114201640,["Administrator@WIN-T3FPCJLTUH1",[[1,1793,"//将hdList用Array.from（）方法转换为数组，并用list变量接收\nlet list = Array.from(hdList);"]],[1793,1793],[1864,1864]]],[1585114208718,["Administrator@WIN-T3FPCJLTUH1",[[-1,1796,"hdList"],[1,1802,"l"]],[1796,1802],[1797,1797]]],[1585114210617,["Administrator@WIN-T3FPCJLTUH1",[[1,1797,"ikeArray"]],[1797,1797],[1805,1805]]],[1585114214170,["Administrator@WIN-T3FPCJLTUH1",[[-1,1859,"hdList"],[1,1865,"likeArray"]],[1859,1865],[1868,1868]]],[1585114216612,["Administrator@WIN-T3FPCJLTUH1",[[-1,1816,"（）"],[1,1818,"("]],[1816,1818],[1817,1817]]],[1585114216713,["Administrator@WIN-T3FPCJLTUH1",[[1,1817,")"]],[1817,1817],[1818,1818]]],[1585114238692,["Administrator@WIN-T3FPCJLTUH1",[[-1,1998,"//添加点击事件\nlist.forEach((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});"]],[1998,2131],[1998,1998]]],[1585114239587,["Administrator@WIN-T3FPCJLTUH1",[[-1,1998,"\n"]],[1998,1998],[1997,1997]]],[1585114244642,["Administrator@WIN-T3FPCJLTUH1",[[-1,1929,"hdList"],[1,1935,"likeArray"]],[1929,1935],[1938,1938]]],[1585114246047,["Administrator@WIN-T3FPCJLTUH1",[[-1,1992,"hdList"],[1,1998,"likeArray"]],[1992,1998],[2001,2001]]],[1585114254372,["Administrator@WIN-T3FPCJLTUH1",[[-1,2009,"  "]],[2011,2011],[2009,2009]]],[1585114255323,["Administrator@WIN-T3FPCJLTUH1",[[-1,2008,"\n"]],[2009,2009],[2008,2008]]],[1585114260453,["Administrator@WIN-T3FPCJLTUH1",[[-1,1878," "]],[1878,1879],[1878,1878]]],[1585114261189,["Administrator@WIN-T3FPCJLTUH1",[[1,1878," "]],[1878,1878],[1879,1879]]],[1585114266921,["Administrator@WIN-T3FPCJLTUH1",[[1,2011,"用[ ...elems ]方法转化为数组"]],[2011,2011],[2031,2031]]],[1585114269604,["Administrator@WIN-T3FPCJLTUH1",[[-1,2026,"转化为数组"]],[2031,2031],[2026,2026]]],[1585114272595,["Administrator@WIN-T3FPCJLTUH1",[[1,2024,"`"]],[2024,2024],[2025,2025]]],[1585114274590,["Administrator@WIN-T3FPCJLTUH1",[[1,2012,"`"]],[2012,2012],[2013,2013]]],[1585114276998,["Administrator@WIN-T3FPCJLTUH1",[[1,2029,"4. \n"]],[2028,2028],[2032,2032]]],[1585114278301,["Administrator@WIN-T3FPCJLTUH1",[[-1,2029,"4. "]],[2032,2032],[2030,2030]]],[1585114280200,["Administrator@WIN-T3FPCJLTUH1",[[1,2029,"```"]],[2029,2029],[2032,2032]]],[1585114280231,["Administrator@WIN-T3FPCJLTUH1",[[1,2032,"language\n```\n"]],[2032,2032],[2032,2040]]],[1585114280991,["Administrator@WIN-T3FPCJLTUH1",[[-1,2032,"language"],[1,2040,"j"]],[2032,2040],[2033,2033]]],[1585114282546,["Administrator@WIN-T3FPCJLTUH1",[[1,2033,"avascript"]],[2033,2033],[2042,2042]]],[1585114283154,["Administrator@WIN-T3FPCJLTUH1",[[1,2043,"\n"]],[2042,2042],[2043,2043]]],[1585114287937,["Administrator@WIN-T3FPCJLTUH1",[[1,2043,"let list = [...hdList];//用[ ...elems ]方法转化为数组并用list接收"]],[2043,2043],[2096,2096]]],[1585114294193,["Administrator@WIN-T3FPCJLTUH1",[[-1,2058,"hdList"],[1,2064,"likeArray"]],[2058,2064],[2067,2067]]],[1585114310655,["Administrator@WIN-T3FPCJLTUH1",[[1,2104,"4. "]],[2104,2104],[2107,2107]]],[1585114316619,["Administrator@WIN-T3FPCJLTUH1",[[1,2107,"用Array.prototype.forEach.call(elem,callback)方法"]],[2107,2107],[2153,2153]]],[1585114320119,["Administrator@WIN-T3FPCJLTUH1",[[1,2108,"`"]],[2108,2108],[2109,2109]]],[1585114320801,["Administrator@WIN-T3FPCJLTUH1",[[1,2152,"`"]],[2152,2152],[2153,2153]]],[1585114346700,["Administrator@WIN-T3FPCJLTUH1",[[1,1908,"elem"]],[1908,1908],[1912,1912]]],[1585117396127,["Administrator@WIN-T3FPCJLTUH1",[[1,2160,"5. \n"]],[2159,2159],[2163,2163]]],[1585117396910,["Administrator@WIN-T3FPCJLTUH1",[[-1,2160,"5. "]],[2163,2163],[2161,2161]]],[1585117399641,["Administrator@WIN-T3FPCJLTUH1",[[1,2161,"```"]],[2161,2161],[2164,2164]]],[1585117399671,["Administrator@WIN-T3FPCJLTUH1",[[1,2164,"language\n```\n"]],[2164,2164],[2164,2172]]],[1585117400407,["Administrator@WIN-T3FPCJLTUH1",[[-1,2164,"language"],[1,2172,"j"]],[2164,2172],[2165,2165]]],[1585117401969,["Administrator@WIN-T3FPCJLTUH1",[[1,2165,"avascript"]],[2165,2165],[2174,2174]]],[1585117402289,["Administrator@WIN-T3FPCJLTUH1",[[1,2175,"\n"]],[2174,2174],[2175,2175]]],[1585117406546,["Administrator@WIN-T3FPCJLTUH1",[[1,2175,"//直接对hdList集合进行循环或者map等\nArray.prototype.forEach.call（hdList,function(){\n//...\n}）\nArray.prototype.map.call（hdList,function(){\n//...\n}）"]],[2175,2175],[2308,2308]]],[1585117415988,["Administrator@WIN-T3FPCJLTUH1",[[-1,2180,"hdList"],[1,2186,"likeArray"]],[2180,2186],[2189,2189]]],[1585117416905,["Administrator@WIN-T3FPCJLTUH1",[[-1,2231,"hdList"],[1,2237,"likeArray"]],[2231,2237],[2240,2240]]],[1585117417634,["Administrator@WIN-T3FPCJLTUH1",[[1,2290,"likeArraylikeArray"]],[2290,2290],[2308,2308]]],[1585117418740,["Administrator@WIN-T3FPCJLTUH1",[[-1,2290,"likeArraylikeArray"]],[2308,2308],[2290,2290]]],[1585117420229,["Administrator@WIN-T3FPCJLTUH1",[[-1,2287,"hdList"],[1,2293,"likeArray"]],[2287,2293],[2296,2296]]],[1585117654074,["Administrator@WIN-T3FPCJLTUH1",[[-1,2160,"\n"]],[2160,2160],[2159,2159]]],[1585117662694,["Administrator@WIN-T3FPCJLTUH1",[[1,2321,"5. 用Array.prototype.forEach.apply(elem,[callback])方法"]],[2321,2321],[2373,2373]]],[1585117665370,["Administrator@WIN-T3FPCJLTUH1",[[1,2325,"`"]],[2325,2325],[2326,2326]]],[1585117666331,["Administrator@WIN-T3FPCJLTUH1",[[1,2372,"`"]],[2372,2372],[2373,2373]]],[1585117685728,["Administrator@WIN-T3FPCJLTUH1",[[1,2376,"6. \n"]],[2375,2375],[2379,2379]]],[1585117686660,["Administrator@WIN-T3FPCJLTUH1",[[-1,2376,"6. "]],[2379,2379],[2377,2377]]],[1585117688065,["Administrator@WIN-T3FPCJLTUH1",[[1,2376,"```"]],[2376,2376],[2379,2379]]],[1585117688095,["Administrator@WIN-T3FPCJLTUH1",[[1,2379,"language\n```\n"]],[2379,2379],[2379,2387]]],[1585117688911,["Administrator@WIN-T3FPCJLTUH1",[[-1,2379,"language"],[1,2387,"j"]],[2379,2387],[2380,2380]]],[1585117690499,["Administrator@WIN-T3FPCJLTUH1",[[1,2380,"avascript"]],[2380,2380],[2389,2389]]],[1585117690980,["Administrator@WIN-T3FPCJLTUH1",[[1,2390,"\n"]],[2389,2389],[2390,2390]]],[1585117691550,["Administrator@WIN-T3FPCJLTUH1",[[1,2390,"//添加点击事件\nArray.prototype.forEach.apply(hdList,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);"]],[2390,2390],[2549,2549]]],[1585117701589,["Administrator@WIN-T3FPCJLTUH1",[[1,2554,"6. "]],[2554,2554],[2557,2557]]],[1585117703208,["Administrator@WIN-T3FPCJLTUH1",[[-1,2554,"6. "]],[2557,2557],[2555,2555]]],[1585117706523,["Administrator@WIN-T3FPCJLTUH1",[[1,2554,"6. "]],[2554,2554],[2557,2557]]],[1585117713326,["Administrator@WIN-T3FPCJLTUH1",[[1,2558,"用bind方法"]],[2558,2558],[2565,2565]]],[1585117715279,["Administrator@WIN-T3FPCJLTUH1",[[-1,2557,"\n"]],[2558,2558],[2557,2557]]],[1585117718972,["Administrator@WIN-T3FPCJLTUH1",[[1,2558,"`"]],[2558,2558],[2559,2559]]],[1585117720010,["Administrator@WIN-T3FPCJLTUH1",[[1,2563,"`"]],[2563,2563],[2564,2564]]],[1585117721271,["Administrator@WIN-T3FPCJLTUH1",[[1,2567,"7. \n"]],[2566,2566],[2570,2570]]],[1585117722059,["Administrator@WIN-T3FPCJLTUH1",[[-1,2567,"7. "]],[2570,2570],[2568,2568]]],[1585117723429,["Administrator@WIN-T3FPCJLTUH1",[[1,2567,"```"]],[2567,2567],[2570,2570]]],[1585117723459,["Administrator@WIN-T3FPCJLTUH1",[[1,2570,"language\n```\n"]],[2570,2570],[2570,2578]]],[1585117724311,["Administrator@WIN-T3FPCJLTUH1",[[-1,2570,"language"],[1,2578,"j"]],[2570,2578],[2571,2571]]],[1585117725695,["Administrator@WIN-T3FPCJLTUH1",[[1,2571,"avascript"]],[2571,2571],[2580,2580]]],[1585117726092,["Administrator@WIN-T3FPCJLTUH1",[[1,2581,"\n"]],[2580,2580],[2581,2581]]],[1585117731315,["Administrator@WIN-T3FPCJLTUH1",[[1,2581,"//添加点击事件\nArray.prototype.forEach.bind(hdList)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});"]],[2581,2581],[2738,2738]]],[1585117956908,["Administrator@WIN-T3FPCJLTUH1",[[-1,2619,"hdList"],[1,2625,"likeArray"]],[2619,2625],[2628,2628]]],[1585117958222,["Administrator@WIN-T3FPCJLTUH1",[[-1,2429,"hdList"],[1,2435,"likeArray"]],[2429,2435],[2438,2438]]],[1585118960167,["Administrator@WIN-T3FPCJLTUH1",[[-1,2229,"（"],[1,2230,"("]],[2229,2230],[2230,2230]]],[1585118963177,["Administrator@WIN-T3FPCJLTUH1",[[-1,2285,"（"],[1,2286,"("]],[2285,2286],[2286,2286]]],[1585118978828,["Administrator@WIN-T3FPCJLTUH1",[[1,2750,"###"]],[2750,2750],[2753,2753]]],[1585118979934,["Administrator@WIN-T3FPCJLTUH1",[[-1,2752,"#"]],[2753,2753],[2752,2752]]],[1585118985505,["Administrator@WIN-T3FPCJLTUH1",[[1,2752," 2020.03."]],[2752,2752],[2761,2761]]],[1585118986096,["Administrator@WIN-T3FPCJLTUH1",[[1,2761,"25"]],[2761,2761],[2763,2763]]],[1585118987483,["Administrator@WIN-T3FPCJLTUH1",[[1,2766,"\n"]],[2763,2763],[2764,2764]]],[1585118993633,["Administrator@WIN-T3FPCJLTUH1",[[1,2767,"\n"]],[2764,2764],[2765,2765]]],[1585118995573,["Administrator@WIN-T3FPCJLTUH1",[[1,2765,"* []"]],[2765,2765],[2769,2769]]],[1585118997758,["Administrator@WIN-T3FPCJLTUH1",[[1,2768,"html"]],[2768,2768],[2772,2772]]],[1585118999440,["Administrator@WIN-T3FPCJLTUH1",[[1,2773," "]],[2773,2773],[2774,2774]]],[1585119054259,["Administrator@WIN-T3FPCJLTUH1",[[1,934,"\n"]],[933,933],[934,934]]],[1585119055877,["Administrator@WIN-T3FPCJLTUH1",[[1,934,"// *   给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n*   给单个input加上 `autocomplete=off` 可禁止这个input的历史记录"]],[934,934],[1031,1031]]],[1585119059975,["Administrator@WIN-T3FPCJLTUH1",[[-1,937,"*   "]],[937,941],[937,937]]],[1585119062067,["Administrator@WIN-T3FPCJLTUH1",[[-1,944," "],[1,945," "],[-1,963," "],[1,964," "],[-1,978,"*   "],[1,982,"/"],[-1,992," "],[1,993," "],[-1,1011," "],[1,1012," "]],[978,982],[979,979]]],[1585119062363,["Administrator@WIN-T3FPCJLTUH1",[[1,979,"/ "]],[979,979],[981,981]]],[1585119170870,["Administrator@WIN-T3FPCJLTUH1",[[1,2870,"\n"]],[2868,2868],[2869,2869]]],[1585119171430,["Administrator@WIN-T3FPCJLTUH1",[[1,2871,"\n"]],[2869,2869],[2870,2870]]],[1585119171467,["Administrator@WIN-T3FPCJLTUH1",[[1,2872,"\n"]],[2870,2870],[2871,2871]]],[1585119171505,["Administrator@WIN-T3FPCJLTUH1",[[1,2873,"\n"]],[2871,2871],[2872,2872]]],[1585119171579,["Administrator@WIN-T3FPCJLTUH1",[[1,2874,"\n"]],[2872,2872],[2873,2873]]],[1585119171611,["Administrator@WIN-T3FPCJLTUH1",[[1,2875,"\n"]],[2873,2873],[2874,2874]]],[1585119171648,["Administrator@WIN-T3FPCJLTUH1",[[1,2876,"\n"]],[2874,2874],[2875,2875]]],[1585119171687,["Administrator@WIN-T3FPCJLTUH1",[[1,2877,"\n"]],[2875,2875],[2876,2876]]],[1585119171731,["Administrator@WIN-T3FPCJLTUH1",[[1,2878,"\n"]],[2876,2876],[2877,2877]]],[1585119171823,["Administrator@WIN-T3FPCJLTUH1",[[1,2879,"\n"]],[2877,2877],[2878,2878]]],[1585119171852,["Administrator@WIN-T3FPCJLTUH1",[[1,2880,"\n"]],[2878,2878],[2879,2879]]],[1585119171886,["Administrator@WIN-T3FPCJLTUH1",[[1,2881,"\n"]],[2879,2879],[2880,2880]]],[1585119171932,["Administrator@WIN-T3FPCJLTUH1",[[1,2882,"\n"]],[2880,2880],[2881,2881]]],[1585119171967,["Administrator@WIN-T3FPCJLTUH1",[[1,2883,"\n"]],[2881,2881],[2882,2882]]],[1585119171997,["Administrator@WIN-T3FPCJLTUH1",[[1,2884,"\n"]],[2882,2882],[2883,2883]]],[1585119172053,["Administrator@WIN-T3FPCJLTUH1",[[1,2885,"\n"]],[2883,2883],[2884,2884]]],[1585119172091,["Administrator@WIN-T3FPCJLTUH1",[[1,2886,"\n"]],[2884,2884],[2885,2885]]],[1585119172123,["Administrator@WIN-T3FPCJLTUH1",[[1,2887,"\n"]],[2885,2885],[2886,2886]]],[1585119786923,["Administrator@WIN-T3FPCJLTUH1",[[1,2867,"[你知道`<a>`标签的target属性规定在何处打开链接文档吗？](https://github.com/haizlin/fe-interview/issues/2023)"]],[2867,2867],[2954,2954]]],[1585119790358,["Administrator@WIN-T3FPCJLTUH1",[[-1,2900,"](https://github.com/haizlin/fe-interview/issues/2023)"]],[2900,2954],[2900,2900]]],[1585119791586,["Administrator@WIN-T3FPCJLTUH1",[[-1,2867,"["]],[2868,2868],[2867,2867]]],[1585120191336,["Administrator@WIN-T3FPCJLTUH1",[[1,2900,"* \n"]],[2899,2899],[2902,2902]]],[1585120192505,["Administrator@WIN-T3FPCJLTUH1",[[1,2902,"【】"]],[2902,2902],[2904,2904]]],[1585120193334,["Administrator@WIN-T3FPCJLTUH1",[[-1,2902,"【】"]],[2904,2904],[2902,2902]]],[1585120193829,["Administrator@WIN-T3FPCJLTUH1",[[1,2902,"[]"]],[2902,2902],[2904,2904]]],[1585120195450,["Administrator@WIN-T3FPCJLTUH1",[[1,2903,"csss"]],[2903,2903],[2907,2907]]],[1585120196008,["Administrator@WIN-T3FPCJLTUH1",[[-1,2906,"s"]],[2907,2907],[2906,2906]]],[1585120196594,["Administrator@WIN-T3FPCJLTUH1",[[1,2907," "]],[2907,2907],[2908,2908]]],[1585123533779,["Administrator@WIN-T3FPCJLTUH1",[[1,2908,"[使用css3实现一个斑马线的效果](https://github.com/haizlin/fe-interview/issues/1986)"]],[2908,2908],[2979,2979]]],[1585123537477,["Administrator@WIN-T3FPCJLTUH1",[[-1,2925,"](https://github.com/haizlin/fe-interview/issues/1986)"]],[2925,2979],[2925,2925]]],[1585123538347,["Administrator@WIN-T3FPCJLTUH1",[[-1,2908,"["]],[2909,2909],[2908,2908]]],[1585123540374,["Administrator@WIN-T3FPCJLTUH1",[[1,2924,"."]],[2924,2924],[2925,2925]]],[1585123541491,["Administrator@WIN-T3FPCJLTUH1",[[-1,2924,"."]],[2925,2925],[2924,2924]]],[1585123541916,["Administrator@WIN-T3FPCJLTUH1",[[1,2924,"。"]],[2924,2924],[2925,2925]]],[1585123543721,["Administrator@WIN-T3FPCJLTUH1",[[1,2926,"* \n"]],[2925,2925],[2928,2928]]],[1585123545387,["Administrator@WIN-T3FPCJLTUH1",[[1,2928,"【】"]],[2928,2928],[2930,2930]]],[1585123545832,["Administrator@WIN-T3FPCJLTUH1",[[-1,2929,"】"]],[2930,2930],[2929,2929]]],[1585123545993,["Administrator@WIN-T3FPCJLTUH1",[[-1,2928,"【"]],[2929,2929],[2928,2928]]],[1585123546745,["Administrator@WIN-T3FPCJLTUH1",[[1,2928,"[]"]],[2928,2928],[2930,2930]]],[1585123547865,["Administrator@WIN-T3FPCJLTUH1",[[1,2929,"js"]],[2929,2929],[2931,2931]]],[1585123589172,["Administrator@WIN-T3FPCJLTUH1",[[1,2932," nizh"]],[2932,2932],[2937,2937]]],[1585123589820,["Administrator@WIN-T3FPCJLTUH1",[[-1,2933,"nizh"]],[2937,2937],[2933,2933]]],[1585123596889,["Administrator@WIN-T3FPCJLTUH1",[[1,2933,"call\\"]],[2933,2933],[2938,2938]]],[1585123597622,["Administrator@WIN-T3FPCJLTUH1",[[-1,2937,"\\"]],[2938,2938],[2937,2937]]],[1585123604279,["Administrator@WIN-T3FPCJLTUH1",[[1,2937,"、apply、bind的"]],[2937,2937],[2949,2949]]],[1585123606233,["Administrator@WIN-T3FPCJLTUH1",[[1,2949,"用法？"]],[2949,2949],[2952,2952]]],[1585125035696,["Administrator@WIN-T3FPCJLTUH1",[[1,1181,"\n"]],[1180,1180],[1181,1181]]],[1585125041899,["Administrator@WIN-T3FPCJLTUH1",[[1,1181,"// html"]],[1181,1181],[1188,1188]]],[1585125044554,["Administrator@WIN-T3FPCJLTUH1",[[1,1215,"\n"]],[1214,1214],[1215,1215]]],[1585125045261,["Administrator@WIN-T3FPCJLTUH1",[[1,1215,"///"]],[1215,1215],[1218,1218]]],[1585125045949,["Administrator@WIN-T3FPCJLTUH1",[[-1,1217,"/"]],[1218,1218],[1217,1217]]],[1585125046354,["Administrator@WIN-T3FPCJLTUH1",[[1,1217,"css"]],[1217,1217],[1220,1220]]],[1585125052392,["Administrator@WIN-T3FPCJLTUH1",[[1,1217," "]],[1217,1217],[1218,1218]]],[1585125053740,["Administrator@WIN-T3FPCJLTUH1",[[1,1215,"\n"]],[1214,1214],[1215,1215]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["8653905e-08d0-4fdc-ae8f-f1f2e08c46a6",1585211809002,"# 每日三连\n\n## 2020.03.23\n\n* [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n\n* [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n* [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n* [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n* [css] 纯css画一个爱心。\n```html\n// html\n<div class=\"heart\"></div>\n\n// css\n<style>\n  .heart {\n    width: 66px;\n    height: 66px;\n    background-color: red;\n    transform: rotateZ(45deg) translateX(100%);\n  }\n  .heart::before {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    background-color: red;\n    border-radius: 50%;\n    transform: translateX(-50%);\n  }\n  .heart::after {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    background-color: red;\n    border-radius: 50%;\n    transform: rotateZ(-90deg) translateX(150%);\n  }\n</style>\n```\n\n* [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n* [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n* [css] 使用css3实现一个斑马线的效果。\n* [js] call、apply、bind的用法？\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1585211782598,["Administrator@WIN-T3FPCJLTUH1",[[1,2918,"\n* "]],[2915,2915],[2918,2918]]],[1585211784697,["Administrator@WIN-T3FPCJLTUH1",[[-1,2916,"* "]],[2918,2918],[2916,2916]]],[1585211786253,["Administrator@WIN-T3FPCJLTUH1",[[-1,2916,"\n"]],[2916,2916],[2915,2915]]],[1585211786525,["Administrator@WIN-T3FPCJLTUH1",[[1,2918,"\n* "]],[2915,2915],[2918,2918]]],[1585211786878,["Administrator@WIN-T3FPCJLTUH1",[[-1,2916,"* "]],[2918,2918],[2917,2917]]],[1585211789498,["Administrator@WIN-T3FPCJLTUH1",[[1,2916,"   "]],[2916,2916],[2919,2919]]],[1585211846832,["Administrator@WIN-T3FPCJLTUH1",[[1,2919,"_blank在浏览器新窗口中打开被链接文档_self默认。在相反的框架中翻开被链接文档。阅读器从头载入彀页_parent在父框架斥逐打开被链接文档_top在整个窗口中掀开被链接文档framename 自定义在自界说定名与框架name沟通框架中掀开被链接文档"]],[2919,2919],[3047,3047]]],[1585211849125,["Administrator@WIN-T3FPCJLTUH1",[[-1,2916,"   _blank在浏览器新窗口中打开被链接文档_self默认。在相反的框架中翻开被链接文档。阅读器从头载入彀页_parent在父框架斥逐打开被链接文档_top在整个窗口中掀开被链接文档framename 自定义在自界说定名与框架name沟通框架中掀开被链接文档"]],[3047,3047],[2916,2916]]],[1585211853246,["Administrator@WIN-T3FPCJLTUH1",[[1,2916,"  "]],[2916,2916],[2918,2918]]],[1585211872886,["Administrator@WIN-T3FPCJLTUH1",[[1,2919,"\n| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n\n"]],[2918,2918],[3161,3161]]],[1585211880802,["Administrator@WIN-T3FPCJLTUH1",[[-1,2919,"\n"]],[2919,2919],[2918,2918]]],[1585211881653,["Administrator@WIN-T3FPCJLTUH1",[[-1,2916,"  "]],[2918,2918],[2916,2916]]],[1585211882238,["Administrator@WIN-T3FPCJLTUH1",[[-1,2916,"\n"]],[2916,2916],[2915,2915]]],[1585211889746,["Administrator@WIN-T3FPCJLTUH1",[[-1,3140,"   $350 |   2 |\n"]],[3140,3156],[3140,3140]]],[1585211891239,["Administrator@WIN-T3FPCJLTUH1",[[-1,3100,"   $400 |   3 |"]],[3100,3115],[3100,3100]]],[1585211892838,["Administrator@WIN-T3FPCJLTUH1",[[-1,3060,"   $800 |   2 |"]],[3060,3075],[3060,3060]]],[1585211894239,["Administrator@WIN-T3FPCJLTUH1",[[-1,3020," $1,300 |   1 |"]],[3020,3035],[3020,3020]]],[1585211896253,["Administrator@WIN-T3FPCJLTUH1",[[-1,2980," -----: | --: |"]],[2980,2995],[2980,2980]]],[1585211901715,["Administrator@WIN-T3FPCJLTUH1",[[-1,2939,"|  Price | Qty |"]],[2940,2955],[2939,2939]]],[1585211903234,["Administrator@WIN-T3FPCJLTUH1",[[-1,2988,"|"]],[2989,2989],[2988,2988]]],[1585211903566,["Administrator@WIN-T3FPCJLTUH1",[[-1,3012,"|"]],[3013,3013],[3012,3012]]],[1585211903979,["Administrator@WIN-T3FPCJLTUH1",[[-1,3036,"|"]],[3037,3037],[3036,3036]]],[1585211904322,["Administrator@WIN-T3FPCJLTUH1",[[-1,3060,"|"]],[3061,3061],[3060,3060]]],[1585211904705,["Administrator@WIN-T3FPCJLTUH1",[[-1,2938," "]],[2939,2939],[2938,2938]]],[1585211905218,["Administrator@WIN-T3FPCJLTUH1",[[-1,2962,"|"]],[2963,2963],[2962,2962]]],[1585211906889,["Administrator@WIN-T3FPCJLTUH1",[[1,2962,"|"]],[2962,2962],[2963,2963]]],[1585211907195,["Administrator@WIN-T3FPCJLTUH1",[[1,2938," "]],[2938,2938],[2939,2939]]],[1585211907536,["Administrator@WIN-T3FPCJLTUH1",[[1,3060,"|"]],[3060,3060],[3061,3061]]],[1585211907885,["Administrator@WIN-T3FPCJLTUH1",[[1,3036,"|"]],[3036,3036],[3037,3037]]],[1585211908152,["Administrator@WIN-T3FPCJLTUH1",[[1,3012,"|"]],[3012,3012],[3013,3013]]],[1585211908353,["Administrator@WIN-T3FPCJLTUH1",[[1,2988,"|"]],[2988,2988],[2989,2989]]],[1585211908636,["Administrator@WIN-T3FPCJLTUH1",[[1,2939,"|  Price | Qty |"]],[2939,2939],[2940,2955]]],[1585211909820,["Administrator@WIN-T3FPCJLTUH1",[[1,2980," -----: | --: |"]],[2980,2980],[2980,2995]]],[1585211910057,["Administrator@WIN-T3FPCJLTUH1",[[1,3020," $1,300 |   1 |"]],[3020,3020],[3020,3035]]],[1585211910335,["Administrator@WIN-T3FPCJLTUH1",[[1,3060,"   $800 |   2 |"]],[3060,3060],[3060,3075]]],[1585211910728,["Administrator@WIN-T3FPCJLTUH1",[[1,3100,"   $400 |   3 |"]],[3100,3100],[3100,3115]]],[1585211911131,["Administrator@WIN-T3FPCJLTUH1",[[1,3140,"   $350 |   2 |\n"]],[3140,3140],[3140,3156]]],[1585211912654,["Administrator@WIN-T3FPCJLTUH1",[[1,2916,"\n"]],[2915,2915],[2916,2916]]],[1585211919453,["Administrator@WIN-T3FPCJLTUH1",[[-1,2941,"  Price | Qty |"]],[2942,2956],[2941,2941]]],[1585211920747,["Administrator@WIN-T3FPCJLTUH1",[[-1,2966," -----: | --: |"]],[2966,2981],[2966,2966]]],[1585211922228,["Administrator@WIN-T3FPCJLTUH1",[[-1,2991," $1,300 |   1 |"]],[2991,3006],[2991,2991]]],[1585211923587,["Administrator@WIN-T3FPCJLTUH1",[[-1,3016,"   $800 |   2 |"]],[3016,3031],[3016,3016]]],[1585211925778,["Administrator@WIN-T3FPCJLTUH1",[[-1,3041,"   $400 |   3 |"]],[3041,3056],[3041,3041]]],[1585211927536,["Administrator@WIN-T3FPCJLTUH1",[[-1,3066,"   $350 |   2 |"]],[3066,3081],[3066,3066]]],[1585211935556,["Administrator@WIN-T3FPCJLTUH1",[[-1,2919,"i"],[-1,2921,"em"]],[2919,2923],[2920,2920]]],[1585211939958,["Administrator@WIN-T3FPCJLTUH1",[[1,2920,"arget属性值"]],[2920,2920],[2928,2928]]],[1585211948202,["Administrator@WIN-T3FPCJLTUH1",[[-1,2936,"Model"],[1,2941,"说明"]],[2936,2936],[2938,2938]]],[1585211952203,["Administrator@WIN-T3FPCJLTUH1",[[-1,2929,"     "]],[2934,2934],[2929,2929]]],[1585211954409,["Administrator@WIN-T3FPCJLTUH1",[[-1,2935,"  "]],[2934,2936],[2934,2934]]],[1585211955251,["Administrator@WIN-T3FPCJLTUH1",[[-1,2934," "]],[2935,2935],[2934,2934]]],[1585211959780,["Administrator@WIN-T3FPCJLTUH1",[[-1,2963,"Laptop   "],[1,2972,"——"]],[2963,2963],[2965,2965]]],[1585211960679,["Administrator@WIN-T3FPCJLTUH1",[[-1,2963,"——"]],[2965,2965],[2963,2963]]],[1585211961175,["Administrator@WIN-T3FPCJLTUH1",[[1,2963,"__"]],[2963,2963],[2964,2964]]],[1585211962992,["Administrator@WIN-T3FPCJLTUH1",[[1,2964,"blank"]],[2964,2964],[2969,2969]]],[1585211964687,["Administrator@WIN-T3FPCJLTUH1",[[-1,2969,"_"]],[2970,2970],[2969,2969]]],[1585211972540,["Administrator@WIN-T3FPCJLTUH1",[[1,2985,"_"],[1,2995,"_"]],[2985,2995],[2985,2997]]],[1585211973510,["Administrator@WIN-T3FPCJLTUH1",[[-1,2985,"_Phone     _"]],[2985,2997],[2985,2985]]],[1585211976665,["Administrator@WIN-T3FPCJLTUH1",[[1,2985,"selg"]],[2985,2985],[2989,2989]]],[1585211977630,["Administrator@WIN-T3FPCJLTUH1",[[-1,2988,"g"]],[2989,2989],[2988,2988]]],[1585211977753,["Administrator@WIN-T3FPCJLTUH1",[[1,2988,"f"]],[2988,2988],[2989,2989]]],[1585211979347,["Administrator@WIN-T3FPCJLTUH1",[[1,2985,"__"]],[2985,2985],[2986,2986]]],[1585211980899,["Administrator@WIN-T3FPCJLTUH1",[[-1,2986,"_"]],[2986,2986],[2985,2985]]],[1585211985056,["Administrator@WIN-T3FPCJLTUH1",[[1,2990," "]],[2990,2990],[2991,2991]]],[1585211989521,["Administrator@WIN-T3FPCJLTUH1",[[-1,3006,"Watch    "]],[3006,3015],[3006,3006]]],[1585211990305,["Administrator@WIN-T3FPCJLTUH1",[[1,3006,"__"]],[3006,3006],[3007,3007]]],[1585211991052,["Administrator@WIN-T3FPCJLTUH1",[[-1,3007,"_"]],[3007,3007],[3006,3006]]],[1585211995405,["Administrator@WIN-T3FPCJLTUH1",[[1,3007,"parent"]],[3007,3007],[3013,3013]]],[1585212002977,["Administrator@WIN-T3FPCJLTUH1",[[1,3029,"_"],[1,3038,"_"]],[3029,3038],[3029,3040]]],[1585212007984,["Administrator@WIN-T3FPCJLTUH1",[[-1,3029,"_Headphone_"]],[3040,3040],[3029,3029]]],[1585212008988,["Administrator@WIN-T3FPCJLTUH1",[[1,3029,"__"]],[3029,3029],[3030,3030]]],[1585212009525,["Administrator@WIN-T3FPCJLTUH1",[[-1,3030,"_"]],[3030,3030],[3029,3029]]],[1585212010931,["Administrator@WIN-T3FPCJLTUH1",[[1,3030,"top"]],[3030,3030],[3033,3033]]],[1585212018656,["Administrator@WIN-T3FPCJLTUH1",[[1,2948,"   "]],[2948,2948],[2951,2951]]],[1585212019737,["Administrator@WIN-T3FPCJLTUH1",[[-1,2950," "]],[2951,2951],[2950,2950]]],[1585212022389,["Administrator@WIN-T3FPCJLTUH1",[[1,2934,"    "]],[2934,2934],[2938,2938]]],[1585212024650,["Administrator@WIN-T3FPCJLTUH1",[[1,2976,"     "]],[2976,2976],[2981,2981]]],[1585212027132,["Administrator@WIN-T3FPCJLTUH1",[[1,3002,"      "]],[3002,3002],[3008,3008]]],[1585212029045,["Administrator@WIN-T3FPCJLTUH1",[[1,3031,"    "]],[3031,3031],[3035,3035]]],[1585212031781,["Administrator@WIN-T3FPCJLTUH1",[[1,3055,"       "]],[3055,3055],[3062,3062]]],[1585212042357,["Administrator@WIN-T3FPCJLTUH1",[[-1,2983,"13\" Pro"],[1,2990,"在"]],[2983,2983],[2984,2984]]],[1585212043367,["Administrator@WIN-T3FPCJLTUH1",[[-1,2983,"在"]],[2984,2984],[2983,2983]]],[1585212047697,["Administrator@WIN-T3FPCJLTUH1",[[1,2983,"新建窗口"]],[2983,2983],[2987,2987]]],[1585212050284,["Administrator@WIN-T3FPCJLTUH1",[[1,2987,"打开"]],[2987,2987],[2989,2989]]],[1585212052323,["Administrator@WIN-T3FPCJLTUH1",[[1,2991," "]],[2989,2989],[2990,2990]]],[1585212052826,["Administrator@WIN-T3FPCJLTUH1",[[1,2990,"|"]],[2990,2990],[2991,2991]]],[1585212054946,["Administrator@WIN-T3FPCJLTUH1",[[-1,2991," |"]],[2991,2991],[2989,2989]]],[1585212055655,["Administrator@WIN-T3FPCJLTUH1",[[-1,2990," "]],[2990,2990],[2989,2989]]],[1585212061915,["Administrator@WIN-T3FPCJLTUH1",[[-1,3008,"Plus    "]],[3016,3016],[3008,3008]]],[1585212070650,["Administrator@WIN-T3FPCJLTUH1",[[1,3008,"当前窗口打开"]],[3008,3008],[3014,3014]]],[1585212073438,["Administrator@WIN-T3FPCJLTUH1",[[-1,3033,"Series3 "]],[3041,3041],[3033,3033]]],[1585212103177,["Administrator@WIN-T3FPCJLTUH1",[[1,3033,"在父框架集中打开"]],[3033,3033],[3041,3041]]],[1585212108411,["Administrator@WIN-T3FPCJLTUH1",[[-1,3060,"HD650"]],[3065,3065],[3060,3060]]],[1585212131354,["Administrator@WIN-T3FPCJLTUH1",[[1,3060,"在整个窗口中打开"]],[3060,3060],[3068,3068]]],[1585212132842,["Administrator@WIN-T3FPCJLTUH1",[[1,3072," "]],[3068,3068],[3069,3069]]],[1585212133920,["Administrator@WIN-T3FPCJLTUH1",[[1,3069,"00"]],[3069,3069],[3071,3071]]],[1585212136915,["Administrator@WIN-T3FPCJLTUH1",[[-1,3069,"00    "]],[3074,3074],[3068,3068]]],[1585212682977,["Administrator@WIN-T3FPCJLTUH1",[[1,3071,"|             |          |\n"]],[3070,3070],[3072,3085]]],[1585212687774,["Administrator@WIN-T3FPCJLTUH1",[[-1,3073,"            "]],[3072,3085],[3073,3073]]],[1585212697900,["Administrator@WIN-T3FPCJLTUH1",[[1,3073,"自定义值     "]],[3073,3073],[3082,3082]]],[1585212713153,["Administrator@WIN-T3FPCJLTUH1",[[1,3084,"首次新建窗口，"]],[3084,3084],[3091,3091]]],[1585212717593,["Administrator@WIN-T3FPCJLTUH1",[[-1,3082,"| 首次新建窗口，"]],[3091,3091],[3082,3082]]],[1585212721158,["Administrator@WIN-T3FPCJLTUH1",[[-1,3071,"| 自定义值              |"]],[3071,3092],[3071,3071]]],[1585212743416,["Administrator@WIN-T3FPCJLTUH1",[[-1,3072,"\n"]],[3072,3072],[3071,3071]]],[1585212765739,["Administrator@WIN-T3FPCJLTUH1",[[-1,1173,"```html\n// html\n<div class=\"heart\"></div>\n\n// css\n<style>\n  .heart {\n    width: 66px;\n    height: 66px;\n    background-color: red;\n    transform: rotateZ(45deg) translateX(100%);\n  }\n  .heart::before {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    background-color: red;\n    border-radius: 50%;\n    transform: translateX(-50%);\n  }\n  .heart::after {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    background-color: red;\n    border-radius: 50%;\n    transform: rotateZ(-90deg) translateX(150%);\n  }\n</style>\n```"]],[1173,1741],[1173,1173]]],[1585212767325,["Administrator@WIN-T3FPCJLTUH1",[[-1,1174,"\n"]],[1174,1174],[1173,1173]]],[1585212770573,["Administrator@WIN-T3FPCJLTUH1",[[-1,1173,"\n"]],[1173,1173],[1172,1172]]],[1585212775315,["Administrator@WIN-T3FPCJLTUH1",[[1,1162,"["]],[1162,1162],[1163,1163]]],[1585212779338,["Administrator@WIN-T3FPCJLTUH1",[[1,1173,"]("]],[1173,1173],[1175,1175]]],[1585212779370,["Administrator@WIN-T3FPCJLTUH1",[[1,1175,"https://)"]],[1175,1175],[1175,1183]]],[1585212810932,["Administrator@WIN-T3FPCJLTUH1",[[1,1175,"["],[1,1183,"codepen.io/klain97710/pen/VwLVpyq](https://codepen.io/klain97710/pen/VwLVpyq)"]],[1175,1183],[1261,1261]]],[1585213506317,["Administrator@WIN-T3FPCJLTUH1",[[1,2617,"]"]],[2617,2617],[2618,2618]]],[1585213507889,["Administrator@WIN-T3FPCJLTUH1",[[1,2600,"["]],[2600,2600],[2601,2601]]],[1585213509757,["Administrator@WIN-T3FPCJLTUH1",[[1,2619,"("]],[2619,2619],[2620,2620]]],[1585213509789,["Administrator@WIN-T3FPCJLTUH1",[[1,2620,"https://)"]],[2620,2620],[2620,2628]]],[1585213510938,["Administrator@WIN-T3FPCJLTUH1",[[1,2620,"["],[1,2628,"codepen.io/xiangshuo1992/pen/qLdWdY](https://codepen.io/xiangshuo1992/pen/qLdWdY)"]],[2620,2628],[2710,2710]]],[1585213578756,["Administrator@WIN-T3FPCJLTUH1",[[1,2621,"["],[-1,2640,"xiangshuo1992"],[1,2653,"klain97710/pen/MWwzvRO](https://codepen.io/klain97710"],[-1,2658,"qLdWdY"],[1,2664,"MWwzvRO)"]],[2621,2664],[2707,2707]]],[1585213592456,["Administrator@WIN-T3FPCJLTUH1",[[-1,2619,"([[https://codepen.io/klain97710/pen/MWwzvRO](https://codepen.io/klain97710/pen/MWwzvRO)](https://codepen.io/xiangshuo1992/pen/qLdWdY))"]],[2620,2753],[2619,2619]]],[1585213593198,["Administrator@WIN-T3FPCJLTUH1",[[1,2619,"("]],[2619,2619],[2620,2620]]],[1585213593230,["Administrator@WIN-T3FPCJLTUH1",[[1,2620,"https://)"]],[2620,2620],[2620,2628]]],[1585213594189,["Administrator@WIN-T3FPCJLTUH1",[[1,2620,"["],[1,2628,"codepen.io/klain97710/pen/MWwzvRO](https://codepen.io/klain97710/pen/MWwzvRO)"]],[2620,2628],[2706,2706]]],[1585213618057,["Administrator@WIN-T3FPCJLTUH1",[[-1,2600,"[使用css3实现一个斑马线的效果。]([https://codepen.io/klain97710/pen/MWwzvRO](https://codepen.io/klain97710/pen/MWwzvRO))"]],[2600,2707],[2600,2600]]],[1585213630082,["Administrator@WIN-T3FPCJLTUH1",[[1,2600,"[使用css3实现一个斑马线的效果](https://codepen.io/klain97710/pen/MWwzvRO)"]],[2600,2600],[2661,2661]]],[1585213682504,["Administrator@WIN-T3FPCJLTUH1",[[-1,1261,")"]],[1262,1262],[1261,1261]]],[1585213684417,["Administrator@WIN-T3FPCJLTUH1",[[-1,1217,"](https://codepen.io/klain97710/pen/VwLVpyq"]],[1217,1260],[1217,1217]]],[1585213712722,["Administrator@WIN-T3FPCJLTUH1",[[-1,1173,"]([https://codepen.io/klain97710/pen/VwLVpyq)"]],[1173,1218],[1173,1173]]],[1585213715553,["Administrator@WIN-T3FPCJLTUH1",[[-1,1162,"["]],[1163,1163],[1162,1162]]],[1585213716556,["Administrator@WIN-T3FPCJLTUH1",[[-1,1171,"。"]],[1172,1172],[1171,1171]]],[1585213719232,["Administrator@WIN-T3FPCJLTUH1",[[1,1171,"."]],[1171,1171],[1172,1172]]],[1585213720614,["Administrator@WIN-T3FPCJLTUH1",[[-1,1171,"."]],[1172,1172],[1171,1171]]],[1585213722358,["Administrator@WIN-T3FPCJLTUH1",[[1,1171,"。"]],[1171,1171],[1172,1172]]],[1585213725258,["Administrator@WIN-T3FPCJLTUH1",[[-1,1162,"纯css画一个爱心。"]],[1162,1172],[1162,1162]]],[1585213733785,["Administrator@WIN-T3FPCJLTUH1",[[1,1162,"[纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)"]],[1162,1162],[1217,1217]]],[1585213739803,["Administrator@WIN-T3FPCJLTUH1",[[1,2572,"。"]],[2572,2572],[2573,2573]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["d41090de-33f3-4ccd-bb8c-2dafae1c9be2",1585276264682,"# 每日三连\n\n## 2020.03.23\n\n* [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n\n* [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n* [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n* [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n* [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n* [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n* [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n* [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n* [js] call、apply、bind的用法？\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1585276259744,["Administrator@WIN-T3FPCJLTUH1",[[-1,23,"*"],[1,24,"#"]],[23,23],[24,24]]],[1585276260064,["Administrator@WIN-T3FPCJLTUH1",[[1,24,"##"]],[24,24],[26,26]]],[1585276267879,["Administrator@WIN-T3FPCJLTUH1",[[-1,221,"*"],[1,222,"#"]],[221,221],[222,222]]],[1585276268215,["Administrator@WIN-T3FPCJLTUH1",[[1,222,"##"]],[222,222],[224,224]]],[1585276275086,["Administrator@WIN-T3FPCJLTUH1",[[-1,408,"*"],[1,409,"#"]],[408,408],[409,409]]],[1585276275432,["Administrator@WIN-T3FPCJLTUH1",[[1,409,"##"]],[409,409],[411,411]]],[1585276278506,["Administrator@WIN-T3FPCJLTUH1",[[-1,903,"*"],[1,904,"#"]],[903,903],[904,904]]],[1585276279030,["Administrator@WIN-T3FPCJLTUH1",[[1,904,"###"]],[904,904],[907,907]]],[1585276284147,["Administrator@WIN-T3FPCJLTUH1",[[-1,906,"#"]],[907,907],[906,906]]],[1585276291601,["Administrator@WIN-T3FPCJLTUH1",[[-1,1162,"*"],[1,1163,"#"]],[1162,1163],[1163,1163]]],[1585276292200,["Administrator@WIN-T3FPCJLTUH1",[[1,1163,"##"]],[1163,1163],[1165,1165]]],[1585276294852,["Administrator@WIN-T3FPCJLTUH1",[[-1,1228,"*"],[1,1229,"#"]],[1228,1229],[1229,1229]]],[1585276295325,["Administrator@WIN-T3FPCJLTUH1",[[1,1229,"##"]],[1229,1229],[1231,1231]]],[1585276304130,["Administrator@WIN-T3FPCJLTUH1",[[-1,2361,"*"],[1,2362,"#"]],[2361,2362],[2362,2362]]],[1585276304654,["Administrator@WIN-T3FPCJLTUH1",[[1,2362,"##"]],[2362,2362],[2364,2364]]],[1585276306511,["Administrator@WIN-T3FPCJLTUH1",[[-1,2561,"*"],[1,2562,"#"]],[2561,2562],[2562,2562]]],[1585276307048,["Administrator@WIN-T3FPCJLTUH1",[[1,2562,"##"]],[2562,2562],[2564,2564]]],[1585276308945,["Administrator@WIN-T3FPCJLTUH1",[[-1,2634,"*"],[1,2635,"#"]],[2634,2635],[2635,2635]]],[1585276309338,["Administrator@WIN-T3FPCJLTUH1",[[1,2635,"##"]],[2635,2635],[2637,2637]]],[1585276320437,["Administrator@WIN-T3FPCJLTUH1",[[1,2643,"["]],[2643,2643],[2644,2644]]],[1585276324881,["Administrator@WIN-T3FPCJLTUH1",[[1,2663,"]("]],[2663,2663],[2665,2665]]],[1585276324914,["Administrator@WIN-T3FPCJLTUH1",[[1,2665,"https://)"]],[2665,2665],[2665,2673]]],[1585276327301,["Administrator@WIN-T3FPCJLTUH1",[[1,2665,"["],[1,2673,"www.cnblogs.com/moqiutao/p/7371988.html](https://www.cnblogs.com/moqiutao/p/7371988.html)"]],[2665,2673],[2763,2763]]],[1585276337635,["Administrator@WIN-T3FPCJLTUH1",[[-1,2665,"[https://www.cnblogs.com/moqiutao/p/7371988.html]("]],[2664,2714],[2664,2664]]],[1585276338480,["Administrator@WIN-T3FPCJLTUH1",[[-1,2713,")"]],[2714,2714],[2713,2713]]],[1585276352248,["Administrator@WIN-T3FPCJLTUH1",[[1,2734,"\n"]],[2713,2713],[2714,2714]]],[1585276354788,["Administrator@WIN-T3FPCJLTUH1",[[1,2735,"\n"]],[2714,2714],[2715,2715]]],[1585276364826,["Administrator@WIN-T3FPCJLTUH1",[[-1,2735,"\n"]],[2715,2715],[2714,2714]]],[1585276371745,["Administrator@WIN-T3FPCJLTUH1",[[1,2714,"call"]],[2714,2714],[2718,2718]]],[1585276383859,["Administrator@WIN-T3FPCJLTUH1",[[1,2714,"`"]],[2714,2714],[2715,2715]]],[1585276384626,["Administrator@WIN-T3FPCJLTUH1",[[1,2718,"`"]],[2718,2718],[2719,2719]]],[1585276385374,["Administrator@WIN-T3FPCJLTUH1",[[-1,2718,"`"]],[2719,2719],[2718,2718]]],[1585276387497,["Administrator@WIN-T3FPCJLTUH1",[[1,2719,"`和"]],[2719,2719],[2721,2721]]],[1585276391303,["Administrator@WIN-T3FPCJLTUH1",[[-1,2714,"`call`和"]],[2721,2721],[2714,2714]]],[1585276474319,["Administrator@WIN-T3FPCJLTUH1",[[1,2714,"替换函数运行时的上下文，即``"]],[2714,2714],[2729,2729]]],[1585276476474,["Administrator@WIN-T3FPCJLTUH1",[[1,2728,"this"]],[2728,2728],[2732,2732]]],[1585276486521,["Administrator@WIN-T3FPCJLTUH1",[[1,2733,"指向。"]],[2733,2733],[2736,2736]]],[1585276489029,["Administrator@WIN-T3FPCJLTUH1",[[1,2757,"\n"]],[2736,2736],[2737,2737]]],[1585276491840,["Administrator@WIN-T3FPCJLTUH1",[[1,2737,"``"]],[2737,2737],[2739,2739]]],[1585276493730,["Administrator@WIN-T3FPCJLTUH1",[[1,2738,"call"]],[2738,2738],[2742,2742]]],[1585276496926,["Administrator@WIN-T3FPCJLTUH1",[[1,2743,"和``"]],[2743,2743],[2746,2746]]],[1585276498924,["Administrator@WIN-T3FPCJLTUH1",[[1,2745,"apply"]],[2745,2745],[2750,2750]]],[1585276507847,["Administrator@WIN-T3FPCJLTUH1",[[1,2751,"都是临时替换一次"]],[2751,2751],[2759,2759]]],[1585276514348,["Administrator@WIN-T3FPCJLTUH1",[[1,2753,"在当前调用时"]],[2753,2753],[2759,2759]]],[1585276516346,["Administrator@WIN-T3FPCJLTUH1",[[1,2765,"；"]],[2765,2765],[2766,2766]]],[1585276516822,["Administrator@WIN-T3FPCJLTUH1",[[1,2787,"\n"]],[2766,2766],[2767,2767]]],[1585276518213,["Administrator@WIN-T3FPCJLTUH1",[[1,2767,"``"]],[2767,2767],[2769,2769]]],[1585276521152,["Administrator@WIN-T3FPCJLTUH1",[[1,2768,"bind"]],[2768,2768],[2772,2772]]],[1585276662301,["Administrator@WIN-T3FPCJLTUH1",[[1,2773,"则是"]],[2773,2773],[2775,2775]]],[1585276663917,["Administrator@WIN-T3FPCJLTUH1",[[-1,2774,"是"]],[2775,2775],[2774,2774]]],[1585276669353,["Administrator@WIN-T3FPCJLTUH1",[[1,2774,"会返回一个新函数，"]],[2774,2774],[2783,2783]]],[1585276673527,["Administrator@WIN-T3FPCJLTUH1",[[1,2779,"内部this"]],[2779,2779],[2785,2785]]],[1585276674988,["Administrator@WIN-T3FPCJLTUH1",[[1,2781,"`"]],[2781,2781],[2782,2782]]],[1585276676221,["Administrator@WIN-T3FPCJLTUH1",[[1,2785,"`"]],[2785,2785],[2786,2786]]],[1585276677024,["Administrator@WIN-T3FPCJLTUH1",[[-1,2785,"`"]],[2786,2786],[2785,2785]]],[1585276683442,["Administrator@WIN-T3FPCJLTUH1",[[1,2786,"`被替换为"]],[2786,2786],[2791,2791]]],[1585276690348,["Administrator@WIN-T3FPCJLTUH1",[[1,2791,"指定对象象"]],[2791,2791],[2796,2796]]],[1585276690764,["Administrator@WIN-T3FPCJLTUH1",[[-1,2795,"象"]],[2796,2796],[2795,2795]]],[1585276691717,["Administrator@WIN-T3FPCJLTUH1",[[1,2795,"的"]],[2795,2795],[2796,2796]]],[1585276693320,["Administrator@WIN-T3FPCJLTUH1",[[-1,2799,"，"]],[2800,2800],[2799,2799]]],[1585276693835,["Administrator@WIN-T3FPCJLTUH1",[[1,2799,"。"]],[2799,2799],[2800,2800]]],[1585276757610,["Administrator@WIN-T3FPCJLTUH1",[[1,2765,"，并立即执行函数"]],[2765,2765],[2773,2773]]],[1585276763040,["Administrator@WIN-T3FPCJLTUH1",[[1,2807,"，等待"]],[2807,2807],[2810,2810]]],[1585276766030,["Administrator@WIN-T3FPCJLTUH1",[[-1,2807,"，等待"]],[2810,2810],[2807,2807]]],[1585276767042,["Administrator@WIN-T3FPCJLTUH1",[[1,2829,"\n"]],[2808,2808],[2809,2809]]],[1585276768587,["Administrator@WIN-T3FPCJLTUH1",[[1,2809,"``"]],[2809,2809],[2811,2811]]],[1585276769726,["Administrator@WIN-T3FPCJLTUH1",[[1,2810,"call"]],[2810,2810],[2814,2814]]],[1585276772654,["Administrator@WIN-T3FPCJLTUH1",[[1,2815,"和;"]],[2815,2815],[2817,2817]]],[1585276773056,["Administrator@WIN-T3FPCJLTUH1",[[-1,2816,";"]],[2817,2817],[2816,2816]]],[1585276773491,["Administrator@WIN-T3FPCJLTUH1",[[1,2816,"'"]],[2816,2816],[2817,2817]]],[1585276773524,["Administrator@WIN-T3FPCJLTUH1",[[-1,2816,"'"],[1,2817,"‘"]],[2817,2817],[2817,2817]]],[1585276773640,["Administrator@WIN-T3FPCJLTUH1",[[1,2817,"'"]],[2817,2817],[2818,2818]]],[1585276773672,["Administrator@WIN-T3FPCJLTUH1",[[-1,2817,"'"],[1,2818,"’"]],[2818,2818],[2818,2818]]],[1585276774730,["Administrator@WIN-T3FPCJLTUH1",[[-1,2816,"‘’"]],[2818,2818],[2816,2816]]],[1585276775296,["Administrator@WIN-T3FPCJLTUH1",[[1,2816,"``"]],[2816,2816],[2818,2818]]],[1585276779256,["Administrator@WIN-T3FPCJLTUH1",[[1,2817,"apply"]],[2817,2817],[2822,2822]]],[1585276781283,["Administrator@WIN-T3FPCJLTUH1",[[1,2823,"de"]],[2823,2823],[2825,2825]]],[1585276782077,["Administrator@WIN-T3FPCJLTUH1",[[-1,2823,"de"]],[2825,2825],[2823,2823]]],[1585276787850,["Administrator@WIN-T3FPCJLTUH1",[[1,2823,"的区别在于，"]],[2823,2823],[2829,2829]]],[1585276796602,["Administrator@WIN-T3FPCJLTUH1",[[-1,2828,"，"]],[2829,2829],[2828,2828]]],[1585276802315,["Administrator@WIN-T3FPCJLTUH1",[[1,2828,"传入的第二个参数"]],[2828,2828],[2836,2836]]],[1585276808740,["Administrator@WIN-T3FPCJLTUH1",[[1,2836,"的不同。``"]],[2836,2836],[2842,2842]]],[1585276810471,["Administrator@WIN-T3FPCJLTUH1",[[1,2841,"call"]],[2841,2841],[2845,2845]]],[1585276812488,["Administrator@WIN-T3FPCJLTUH1",[[1,2846,"di"]],[2846,2846],[2848,2848]]],[1585276813462,["Administrator@WIN-T3FPCJLTUH1",[[-1,2846,"di"]],[2848,2848],[2846,2846]]],[1585276814027,["Administrator@WIN-T3FPCJLTUH1",[[1,2846,"shi"]],[2846,2846],[2849,2849]]],[1585276814785,["Administrator@WIN-T3FPCJLTUH1",[[-1,2846,"shi"]],[2849,2849],[2846,2846]]],[1585276815809,["Administrator@WIN-T3FPCJLTUH1",[[1,2846,"是"]],[2846,2846],[2847,2847]]],[1585276825874,["Administrator@WIN-T3FPCJLTUH1",[[-1,2828,"传入的第二个参数的不同。`call`是"]],[2847,2847],[2828,2828]]],[1585276830728,["Administrator@WIN-T3FPCJLTUH1",[[1,2828,"``"]],[2828,2828],[2830,2830]]],[1585276832851,["Administrator@WIN-T3FPCJLTUH1",[[1,2829,"call"]],[2829,2829],[2833,2833]]],[1585276834833,["Administrator@WIN-T3FPCJLTUH1",[[1,2834,"xuyao "]],[2834,2834],[2840,2840]]],[1585276835872,["Administrator@WIN-T3FPCJLTUH1",[[-1,2834,"xuyao "]],[2840,2840],[2834,2834]]],[1585276859922,["Administrator@WIN-T3FPCJLTUH1",[[1,2834,"需要按顺序传形参，``"]],[2834,2834],[2845,2845]]],[1585276863596,["Administrator@WIN-T3FPCJLTUH1",[[1,2844,"bind"]],[2844,2844],[2848,2848]]],[1585276866179,["Administrator@WIN-T3FPCJLTUH1",[[-1,2844,"bind"]],[2848,2848],[2844,2844]]],[1585276867756,["Administrator@WIN-T3FPCJLTUH1",[[1,2844,"apply"]],[2844,2844],[2849,2849]]],[1585276874775,["Administrator@WIN-T3FPCJLTUH1",[[1,2843,"，"]],[2842,2842],[2843,2843]]],[1585276890050,["Administrator@WIN-T3FPCJLTUH1",[[1,2843,"如Arrray"]],[2843,2843],[2850,2850]]],[1585276892856,["Administrator@WIN-T3FPCJLTUH1",[[1,2844,"`"]],[2844,2844],[2845,2845]]],[1585276894561,["Administrator@WIN-T3FPCJLTUH1",[[1,2851,"`"]],[2851,2851],[2852,2852]]],[1585276904619,["Administrator@WIN-T3FPCJLTUH1",[[1,2851,".prototype.slice.call()"]],[2851,2851],[2874,2874]]],[1585276917061,["Administrator@WIN-T3FPCJLTUH1",[[1,2873,"this, 1, 2[]"]],[2873,2873],[2885,2885]]],[1585276919763,["Administrator@WIN-T3FPCJLTUH1",[[1,2884,",..."]],[2884,2884],[2888,2888]]],[1585276936550,["Administrator@WIN-T3FPCJLTUH1",[[1,2899,"支持后面"]],[2899,2899],[2903,2903]]],[1585276940541,["Administrator@WIN-T3FPCJLTUH1",[[-1,2899,"支持后面"]],[2903,2903],[2899,2899]]],[1585276944489,["Administrator@WIN-T3FPCJLTUH1",[[1,2899,"支持除了this"]],[2899,2899],[2907,2907]]],[1585276946602,["Administrator@WIN-T3FPCJLTUH1",[[1,2903,"`"]],[2903,2903],[2904,2904]]],[1585276963236,["Administrator@WIN-T3FPCJLTUH1",[[1,2908,"`外，剩余参数是一个数组，如`Arrray.prototype.slice.call(this, 1, 2[,...])`"]],[2908,2908],[2969,2969]]],[1585276967328,["Administrator@WIN-T3FPCJLTUH1",[[-1,2957,"1, 2[,...]"],[1,2967,"【"]],[2957,2957],[2958,2958]]],[1585276967434,["Administrator@WIN-T3FPCJLTUH1",[[1,2958,"】"]],[2958,2958],[2959,2959]]],[1585276968297,["Administrator@WIN-T3FPCJLTUH1",[[-1,2957,"【】"]],[2959,2959],[2957,2957]]],[1585276968853,["Administrator@WIN-T3FPCJLTUH1",[[1,2957,"[]"]],[2957,2957],[2959,2959]]],[1585276969197,["Administrator@WIN-T3FPCJLTUH1",[[-1,2958,"]"]],[2959,2959],[2958,2958]]],[1585276970336,["Administrator@WIN-T3FPCJLTUH1",[[1,2958,"]"]],[2958,2958],[2959,2959]]],[1585276972263,["Administrator@WIN-T3FPCJLTUH1",[[1,2958,"1, 2"]],[2958,2958],[2962,2962]]],[1585276976236,["Administrator@WIN-T3FPCJLTUH1",[[-1,2883,"[,...]"]],[2883,2889],[2883,2883]]],[1585276987720,["Administrator@WIN-T3FPCJLTUH1",[[-1,2940,"c"],[-1,2942,"ll"]],[2940,2944],[2941,2941]]],[1585276988399,["Administrator@WIN-T3FPCJLTUH1",[[1,2941,"ppk"]],[2941,2941],[2944,2944]]],[1585276988749,["Administrator@WIN-T3FPCJLTUH1",[[-1,2943,"k"]],[2944,2944],[2943,2943]]],[1585276989072,["Administrator@WIN-T3FPCJLTUH1",[[1,2943,"ly"]],[2943,2943],[2945,2945]]],[1585276993989,["Administrator@WIN-T3FPCJLTUH1",[[1,2960,"。"]],[2960,2960],[2961,2961]]],[1585286514322,["Administrator@WIN-T3FPCJLTUH1",[[1,2963,"## 2020.03.27"]],[2963,2963],[2976,2976]]],[1585286515281,["Administrator@WIN-T3FPCJLTUH1",[[1,2995,"\n"]],[2976,2976],[2977,2977]]],[1585286520023,["Administrator@WIN-T3FPCJLTUH1",[[1,2996,"\n"]],[2977,2977],[2978,2978]]],[1585286522541,["Administrator@WIN-T3FPCJLTUH1",[[1,2978,"### []"]],[2978,2978],[2984,2984]]],[1585286524294,["Administrator@WIN-T3FPCJLTUH1",[[1,2983,"html"]],[2983,2983],[2987,2987]]],[1585286525652,["Administrator@WIN-T3FPCJLTUH1",[[1,2988," "]],[2988,2988],[2989,2989]]],[1585286526913,["Administrator@WIN-T3FPCJLTUH1",[[1,3008,"\n"]],[2989,2989],[2990,2990]]],[1585286527129,["Administrator@WIN-T3FPCJLTUH1",[[1,3009,"\n"]],[2990,2990],[2991,2991]]],[1585286529065,["Administrator@WIN-T3FPCJLTUH1",[[1,2991,"### []"]],[2991,2991],[2997,2997]]],[1585286532481,["Administrator@WIN-T3FPCJLTUH1",[[1,2996,"csss"]],[2996,2996],[3000,3000]]],[1585286533317,["Administrator@WIN-T3FPCJLTUH1",[[-1,2999,"s"]],[3000,3000],[2999,2999]]],[1585286534096,["Administrator@WIN-T3FPCJLTUH1",[[1,3019,"\n"]],[3000,3000],[3001,3001]]],[1585286534307,["Administrator@WIN-T3FPCJLTUH1",[[1,3020,"\n"]],[3001,3001],[3002,3002]]],[1585286536228,["Administrator@WIN-T3FPCJLTUH1",[[1,3002,"### []"]],[3002,3002],[3008,3008]]],[1585286537266,["Administrator@WIN-T3FPCJLTUH1",[[1,3007,"js"]],[3007,3007],[3009,3009]]],[1585286555881,["Administrator@WIN-T3FPCJLTUH1",[[1,3010,"# 在axios中怎样添加授权验证？"]],[3010,3010],[3028,3028]]],[1585286557886,["Administrator@WIN-T3FPCJLTUH1",[[-1,3010,"#"]],[3010,3012],[3011,3011]]],[1585286857868,["Administrator@WIN-T3FPCJLTUH1",[[1,3046,"\n"]],[3027,3027],[3028,3028]]],[1585286858336,["Administrator@WIN-T3FPCJLTUH1",[[1,3047,"\n"]],[3028,3028],[3029,3029]]],[1585286860667,["Administrator@WIN-T3FPCJLTUH1",[[1,3029,"cankao"]],[3029,3029],[3035,3035]]],[1585286862061,["Administrator@WIN-T3FPCJLTUH1",[[-1,3029,"cankao"]],[3035,3035],[3029,3029]]],[1585286864281,["Administrator@WIN-T3FPCJLTUH1",[[1,3029,"参考"]],[3029,3029],[3031,3031]]],[1585286866349,["Administrator@WIN-T3FPCJLTUH1",[[1,3029,"["]],[3029,3029],[3030,3030]]],[1585286869445,["Administrator@WIN-T3FPCJLTUH1",[[1,3032,"]("]],[3032,3032],[3034,3034]]],[1585286869478,["Administrator@WIN-T3FPCJLTUH1",[[1,3034,"https://)"]],[3034,3034],[3034,3042]]],[1585286870635,["Administrator@WIN-T3FPCJLTUH1",[[1,3034,"["],[1,3042,"blog.csdn.net/weixin_34342905/article/details/87964261](https://blog.csdn.net/weixin_34342905/article/details/87964261)"]],[3034,3042],[3162,3162]]],[1585286877092,["Administrator@WIN-T3FPCJLTUH1",[[-1,3097,"](https://blog.csdn.net/weixin_34342905/article/details/87964261)"]],[3097,3162],[3097,3097]]],[1585286884828,["Administrator@WIN-T3FPCJLTUH1",[[1,3029,"\n"]],[3027,3027],[3028,3028]]],[1585286886242,["Administrator@WIN-T3FPCJLTUH1",[[1,3030,"\n"]],[3028,3028],[3029,3029]]],[1585286890676,["Administrator@WIN-T3FPCJLTUH1",[[-1,3030,"\n"]],[3029,3029],[3028,3028]]],[1585286892443,["Administrator@WIN-T3FPCJLTUH1",[[1,3030,"\n"]],[3028,3028],[3029,3029]]],[1585286894357,["Administrator@WIN-T3FPCJLTUH1",[[1,3029,"```"]],[3029,3029],[3032,3032]]],[1585286894391,["Administrator@WIN-T3FPCJLTUH1",[[1,3032,"language\n```\n"]],[3032,3032],[3032,3040]]],[1585286895187,["Administrator@WIN-T3FPCJLTUH1",[[-1,3032,"language"],[1,3040,"j"]],[3032,3040],[3033,3033]]],[1585286895756,["Administrator@WIN-T3FPCJLTUH1",[[1,3033,"avs"]],[3033,3033],[3036,3036]]],[1585286896202,["Administrator@WIN-T3FPCJLTUH1",[[-1,3035,"s"]],[3036,3036],[3035,3035]]],[1585286897784,["Administrator@WIN-T3FPCJLTUH1",[[1,3035,"ascript"]],[3035,3035],[3042,3042]]],[1585286897996,["Administrator@WIN-T3FPCJLTUH1",[[1,3043,"\n"]],[3042,3042],[3043,3043]]],[1585286908096,["Administrator@WIN-T3FPCJLTUH1",[[1,3043,"// axios"]],[3043,3043],[3051,3051]]],[1585286917404,["Administrator@WIN-T3FPCJLTUH1",[[-1,3043,"// axios"]],[3051,3051],[3043,3043]]],[1585288845743,["Administrator@WIN-T3FPCJLTUH1",[[1,3043,"1.  import axios from 'axios';\n\n2.  import router from './router';\n\n4.  // axios 配置\n\n5.  axios.defaults.timeout = 8000;\n\n6.  axios.defaults.baseURL = 'https://api.github.com';\n\n8.  // http request 拦截器\n\n9.  axios.interceptors.request.use(\n\n10.  config => {\n\n11.  if (localStorage.token) { //判断token是否存在\n\n12.  config.headers.Authorization = localStorage.token; //将token设置成请求头\n\n13.  }\n\n14.  return config;\n\n15.  },\n\n16.  err => {\n\n17.  return Promise.reject(err);\n\n18.  }\n\n19.  );\n\n21.  // http response 拦截器\n\n22.  axios.interceptors.response.use(\n\n23.  response => {\n\n24.  if (response.data.errno === 999) {\n\n25.  router.replace('/');\n\n26.  console.log(\"token过期\");\n\n27.  }\n\n28.  return response;\n\n29.  },\n\n30.  error => {\n\n31.  return Promise.reject(error);\n\n32.  }\n\n33.  );\n\n34.  export default axios;"]],[3043,3043],[3842,3842]]],[1585288856688,["Administrator@WIN-T3FPCJLTUH1",[[-1,3816,"34.  "]],[3816,3821],[3816,3816]]],[1585288858193,["Administrator@WIN-T3FPCJLTUH1",[[-1,3807,"33.  "]],[3807,3812],[3807,3807]]],[1585288859406,["Administrator@WIN-T3FPCJLTUH1",[[-1,3799,"32.  "]],[3799,3804],[3799,3799]]],[1585288860203,["Administrator@WIN-T3FPCJLTUH1",[[-1,3805,"\n"]],[3805,3805],[3804,3804]]],[1585288860735,["Administrator@WIN-T3FPCJLTUH1",[[-1,3801,"\n"]],[3801,3801],[3800,3800]]],[1585288861411,["Administrator@WIN-T3FPCJLTUH1",[[-1,3798,"\n"]],[3798,3798],[3797,3797]]],[1585288862769,["Administrator@WIN-T3FPCJLTUH1",[[-1,3763,"31.  "]],[3763,3768],[3763,3763]]],[1585288863653,["Administrator@WIN-T3FPCJLTUH1",[[-1,3762,"\n"]],[3762,3762],[3761,3761]]],[1585288864691,["Administrator@WIN-T3FPCJLTUH1",[[-1,3746,"30.  "]],[3746,3751],[3746,3746]]],[1585288865723,["Administrator@WIN-T3FPCJLTUH1",[[-1,3745,"\n"]],[3746,3746],[3745,3745]]],[1585288867756,["Administrator@WIN-T3FPCJLTUH1",[[-1,3737,"29.  "]],[3737,3742],[3737,3737]]],[1585288868048,["Administrator@WIN-T3FPCJLTUH1",[[-1,3736,"\n"]],[3737,3737],[3736,3736]]],[1585288870102,["Administrator@WIN-T3FPCJLTUH1",[[-1,3714,"28.  "]],[3714,3719],[3714,3714]]],[1585288870358,["Administrator@WIN-T3FPCJLTUH1",[[-1,3713,"\n"]],[3714,3714],[3713,3713]]],[1585288871679,["Administrator@WIN-T3FPCJLTUH1",[[-1,3706,"27.  "]],[3706,3711],[3706,3706]]],[1585288871899,["Administrator@WIN-T3FPCJLTUH1",[[-1,3705,"\n"]],[3706,3706],[3705,3705]]],[1585288873855,["Administrator@WIN-T3FPCJLTUH1",[[-1,3676,"26.  "]],[3676,3681],[3676,3676]]],[1585288874102,["Administrator@WIN-T3FPCJLTUH1",[[-1,3675,"\n"]],[3676,3676],[3675,3675]]],[1585288876780,["Administrator@WIN-T3FPCJLTUH1",[[-1,3649,"25.  "]],[3649,3654],[3649,3649]]],[1585288877013,["Administrator@WIN-T3FPCJLTUH1",[[-1,3648,"\n"]],[3649,3649],[3648,3648]]],[1585288878185,["Administrator@WIN-T3FPCJLTUH1",[[-1,3608,"24.  "]],[3608,3613],[3608,3608]]],[1585288878440,["Administrator@WIN-T3FPCJLTUH1",[[-1,3607,"\n"]],[3608,3608],[3607,3607]]],[1585288879599,["Administrator@WIN-T3FPCJLTUH1",[[-1,3588,"23.  "]],[3588,3593],[3588,3588]]],[1585288879850,["Administrator@WIN-T3FPCJLTUH1",[[-1,3587,"\n"]],[3588,3588],[3587,3587]]],[1585288881229,["Administrator@WIN-T3FPCJLTUH1",[[-1,3549,"22.  "]],[3549,3554],[3549,3549]]],[1585288881451,["Administrator@WIN-T3FPCJLTUH1",[[-1,3548,"\n"]],[3549,3549],[3548,3548]]],[1585288883524,["Administrator@WIN-T3FPCJLTUH1",[[-1,3522,"21.  "]],[3522,3527],[3522,3522]]],[1585288883742,["Administrator@WIN-T3FPCJLTUH1",[[-1,3521,"\n"]],[3522,3522],[3521,3521]]],[1585288885200,["Administrator@WIN-T3FPCJLTUH1",[[-1,3513,"19.  "]],[3514,3518],[3513,3513]]],[1585288885538,["Administrator@WIN-T3FPCJLTUH1",[[-1,3512,"\n"]],[3513,3513],[3512,3512]]],[1585288886670,["Administrator@WIN-T3FPCJLTUH1",[[-1,3505,"18.  "]],[3505,3510],[3505,3505]]],[1585288886922,["Administrator@WIN-T3FPCJLTUH1",[[-1,3504,"\n"]],[3505,3505],[3504,3504]]],[1585288888130,["Administrator@WIN-T3FPCJLTUH1",[[-1,3471,"17.  "]],[3471,3476],[3471,3471]]],[1585288888371,["Administrator@WIN-T3FPCJLTUH1",[[-1,3470,"\n"]],[3471,3471],[3470,3470]]],[1585288889655,["Administrator@WIN-T3FPCJLTUH1",[[-1,3456,"16.  "]],[3456,3461],[3456,3456]]],[1585288889931,["Administrator@WIN-T3FPCJLTUH1",[[-1,3455,"\n"]],[3456,3456],[3455,3455]]],[1585288892025,["Administrator@WIN-T3FPCJLTUH1",[[-1,3447,"15.  "]],[3447,3452],[3447,3447]]],[1585288892262,["Administrator@WIN-T3FPCJLTUH1",[[-1,3446,"\n"]],[3447,3447],[3446,3446]]],[1585288893727,["Administrator@WIN-T3FPCJLTUH1",[[-1,3426,"14.  "]],[3426,3431],[3426,3426]]],[1585288893989,["Administrator@WIN-T3FPCJLTUH1",[[-1,3425,"\n"]],[3426,3426],[3425,3425]]],[1585288895629,["Administrator@WIN-T3FPCJLTUH1",[[-1,3418,"13.  "]],[3418,3423],[3418,3418]]],[1585288895831,["Administrator@WIN-T3FPCJLTUH1",[[-1,3417,"\n"]],[3418,3418],[3417,3417]]],[1585288898438,["Administrator@WIN-T3FPCJLTUH1",[[-1,3346,"12.  "]],[3346,3351],[3346,3346]]],[1585288898779,["Administrator@WIN-T3FPCJLTUH1",[[-1,3345,"\n"]],[3346,3346],[3345,3345]]],[1585288899730,["Administrator@WIN-T3FPCJLTUH1",[[-1,3300,"11.  "]],[3300,3305],[3300,3300]]],[1585288899957,["Administrator@WIN-T3FPCJLTUH1",[[-1,3299,"\n"]],[3300,3300],[3299,3299]]],[1585288901172,["Administrator@WIN-T3FPCJLTUH1",[[-1,3282,"10.  "]],[3282,3287],[3282,3282]]],[1585288901397,["Administrator@WIN-T3FPCJLTUH1",[[-1,3281,"\n"]],[3282,3282],[3281,3281]]],[1585288903390,["Administrator@WIN-T3FPCJLTUH1",[[-1,3245,"9.  "]],[3245,3249],[3245,3245]]],[1585288903626,["Administrator@WIN-T3FPCJLTUH1",[[-1,3244,"\n"]],[3245,3245],[3244,3244]]],[1585288905004,["Administrator@WIN-T3FPCJLTUH1",[[-1,3220,"8.  "]],[3220,3224],[3220,3220]]],[1585288905251,["Administrator@WIN-T3FPCJLTUH1",[[-1,3219,"\n"]],[3220,3220],[3219,3219]]],[1585288906305,["Administrator@WIN-T3FPCJLTUH1",[[-1,3164,"6.  "]],[3164,3168],[3164,3164]]],[1585288906520,["Administrator@WIN-T3FPCJLTUH1",[[-1,3163,"\n"]],[3164,3164],[3163,3163]]],[1585288907934,["Administrator@WIN-T3FPCJLTUH1",[[-1,3128,"5.  "]],[3128,3132],[3128,3128]]],[1585288908151,["Administrator@WIN-T3FPCJLTUH1",[[-1,3127,"\n"]],[3128,3128],[3127,3127]]],[1585288909142,["Administrator@WIN-T3FPCJLTUH1",[[-1,3111,"4.  "]],[3111,3115],[3111,3111]]],[1585288909399,["Administrator@WIN-T3FPCJLTUH1",[[-1,3110,"\n"]],[3111,3111],[3110,3110]]],[1585288910637,["Administrator@WIN-T3FPCJLTUH1",[[-1,3075,"2.  "]],[3075,3079],[3075,3075]]],[1585288910884,["Administrator@WIN-T3FPCJLTUH1",[[-1,3074,"\n"]],[3075,3075],[3074,3074]]],[1585288912856,["Administrator@WIN-T3FPCJLTUH1",[[-1,3043,"1.  "]],[3043,3047],[3043,3043]]],[1585288929823,["Administrator@WIN-T3FPCJLTUH1",[[1,3247,"  "],[1,3259,"  "],[1,3299,"  "],[1,3365,"  "],[1,3367,"  "],[1,3382,"  "],[1,3385,"  "],[1,3394,"  "],[1,3422,"  "]],[3247,3423],[3247,3441]]],[1585288937783,["Administrator@WIN-T3FPCJLTUH1",[[1,3263,"  "],[1,3303,"  "],[1,3373,"  "],[1,3375,"  "]],[3263,3391],[3265,3399]]],[1585288939228,["Administrator@WIN-T3FPCJLTUH1",[[1,3309,"  "]],[3309,3309],[3311,3311]]],[1585288941744,["Administrator@WIN-T3FPCJLTUH1",[[1,3420,"  "]],[3420,3420],[3422,3422]]],[1585288948599,["Administrator@WIN-T3FPCJLTUH1",[[1,3511,"  "],[1,3525,"  "],[1,3560,"  "],[1,3581,"  "],[1,3605,"  "],[1,3607,"  "],[1,3624,"  "],[1,3627,"  "],[1,3638,"  "],[1,3668,"  "]],[3511,3669],[3511,3689]]],[1585288952634,["Administrator@WIN-T3FPCJLTUH1",[[1,3529,"  "],[1,3566,"  "],[1,3587," "],[1,3589," "],[1,3615,"  "],[1,3617,"  "]],[3529,3635],[3531,3645]]],[1585288954703,["Administrator@WIN-T3FPCJLTUH1",[[1,3570,"  "],[1,3591,"  "]],[3570,3618],[3572,3622]]],[1585288957421,["Administrator@WIN-T3FPCJLTUH1",[[1,3670,"  "]],[3670,3670],[3672,3672]]],[1585289822899,["Administrator@WIN-T3FPCJLTUH1",[[-1,3736,"\n"]],[3736,3736],[3735,3735]]],[1585289828148,["Administrator@WIN-T3FPCJLTUH1",[[-1,3736,"[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n"]],[3736,3806],[3736,3736]]],[1585289830165,["Administrator@WIN-T3FPCJLTUH1",[[1,3029,"\n"]],[3027,3027],[3028,3028]]],[1585289831166,["Administrator@WIN-T3FPCJLTUH1",[[1,3030,"\n"]],[3028,3028],[3029,3029]]],[1585289831342,["Administrator@WIN-T3FPCJLTUH1",[[1,3029,"[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n"]],[3029,3029],[3099,3099]]],[1585289833123,["Administrator@WIN-T3FPCJLTUH1",[[-1,3100,"\n"]],[3099,3099],[3098,3098]]],[1585289855343,["Administrator@WIN-T3FPCJLTUH1",[[1,3807,"## 2020.03.28"]],[3807,3807],[3820,3820]]],[1585289856680,["Administrator@WIN-T3FPCJLTUH1",[[1,3838,"\n"]],[3820,3820],[3821,3821]]],[1585289859005,["Administrator@WIN-T3FPCJLTUH1",[[1,3839,"\n"]],[3821,3821],[3822,3822]]],[1585289861154,["Administrator@WIN-T3FPCJLTUH1",[[1,3822,"### []"]],[3822,3822],[3828,3828]]],[1585289862801,["Administrator@WIN-T3FPCJLTUH1",[[1,3827,"html"]],[3827,3827],[3831,3831]]],[1585289863821,["Administrator@WIN-T3FPCJLTUH1",[[1,3850,"\n"]],[3832,3832],[3833,3833]]],[1585289864137,["Administrator@WIN-T3FPCJLTUH1",[[1,3851,"\n"]],[3833,3833],[3834,3834]]],[1585289865589,["Administrator@WIN-T3FPCJLTUH1",[[1,3834,"### []"]],[3834,3834],[3840,3840]]],[1585289866591,["Administrator@WIN-T3FPCJLTUH1",[[1,3839,"css"]],[3839,3839],[3842,3842]]],[1585289868048,["Administrator@WIN-T3FPCJLTUH1",[[1,3861,"\n"]],[3844,3844],[3845,3845]]],[1585289869751,["Administrator@WIN-T3FPCJLTUH1",[[1,3845,"### []"]],[3845,3845],[3851,3851]]],[1585289870522,["Administrator@WIN-T3FPCJLTUH1",[[1,3850,"js"]],[3850,3850],[3852,3852]]],[1585289871352,["Administrator@WIN-T3FPCJLTUH1",[[1,3854," "]],[3854,3854],[3855,3855]]],[1585289872024,["Administrator@WIN-T3FPCJLTUH1",[[-1,3854," "]],[3855,3855],[3854,3854]]],[1585289872316,["Administrator@WIN-T3FPCJLTUH1",[[-1,3869,"\n"]],[3854,3854],[3853,3853]]],[1585289878222,["Administrator@WIN-T3FPCJLTUH1",[[1,3853," 设置"]],[3853,3853],[3856,3856]]],[1585289879040,["Administrator@WIN-T3FPCJLTUH1",[[-1,3854,"设置"]],[3856,3856],[3854,3854]]],[1585289887346,["Administrator@WIN-T3FPCJLTUH1",[[1,3854,"如何设置localStorage"]],[3854,3854],[3870,3870]]],[1585289894429,["Administrator@WIN-T3FPCJLTUH1",[[-1,3856,"设置"]],[3858,3858],[3856,3856]]],[1585289895752,["Administrator@WIN-T3FPCJLTUH1",[[1,3856,"给"]],[3856,3856],[3857,3857]]],[1585289901443,["Administrator@WIN-T3FPCJLTUH1",[[1,3869,"存储的数据设置"]],[3869,3869],[3876,3876]]],[1585289905100,["Administrator@WIN-T3FPCJLTUH1",[[1,3876,"过期时间？"]],[3876,3876],[3881,3881]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["dd1cc9d4-afaa-4412-8699-b2f413d22686",1585792982302,"# 每日三连\n\n## 2020.03.23\n\n### [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n\n### [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n### [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n### [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n### [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n### [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n### [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n### [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n### [js] [call、apply、bind的用法？](https://www.cnblogs.com/moqiutao/p/7371988.html)\n替换函数运行时的上下文，即`this`指向。\n`call`和`apply`都是在当前调用时临时替换一次，并立即执行函数；\n`bind`则会返回一个内部`this`被替换为指定对象的新函数。\n`call`和`apply`的区别在于`call`需要按顺序传形参，如`Arrray.prototype.slice.call(this, 1, 2)`，`apply`支持除了`this`外，剩余参数是一个数组，如`Arrray.prototype.slice.apply(this, [1, 2])`。\n\n## 2020.03.27\n\n### [html] \n\n### [css]\n\n### [js] 在axios中怎样添加授权验证？\n\n[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n\n```javascript\nimport axios from 'axios';\nimport router from './router';\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'https://api.github.com';\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = localStorage.token; //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;\n```\n\n## 2020.03.28\n\n### [html]\n\n### [css]\n\n### [js] 如何给localStorage存储的数据设置过期时间？\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1585792924059,["Administrator@WIN-T3FPCJLTUH1",[[1,3883,"###"]],[3883,3883],[3886,3886]]],[1585792925048,["Administrator@WIN-T3FPCJLTUH1",[[-1,3885,"#"]],[3886,3886],[3885,3885]]],[1585792931279,["Administrator@WIN-T3FPCJLTUH1",[[1,3885," 2020.04.02"]],[3885,3885],[3896,3896]]],[1585792932086,["Administrator@WIN-T3FPCJLTUH1",[[1,3910,"\n"]],[3896,3896],[3897,3897]]],[1585792933701,["Administrator@WIN-T3FPCJLTUH1",[[1,3911,"\n"]],[3897,3897],[3898,3898]]],[1585792937654,["Administrator@WIN-T3FPCJLTUH1",[[1,3898,"### 【】"]],[3898,3898],[3904,3904]]],[1585792938734,["Administrator@WIN-T3FPCJLTUH1",[[-1,3902,"【】"]],[3904,3904],[3902,3902]]],[1585792939114,["Administrator@WIN-T3FPCJLTUH1",[[1,3902,"{】"]],[3902,3902],[3904,3904]]],[1585792940592,["Administrator@WIN-T3FPCJLTUH1",[[-1,3902,"{】"]],[3904,3904],[3902,3902]]],[1585792941590,["Administrator@WIN-T3FPCJLTUH1",[[1,3902,"[]"]],[3902,3902],[3904,3904]]],[1585792943358,["Administrator@WIN-T3FPCJLTUH1",[[1,3903,"html"]],[3903,3903],[3907,3907]]],[1585792944543,["Administrator@WIN-T3FPCJLTUH1",[[1,3922,"\n"]],[3908,3908],[3909,3909]]],[1585792944961,["Administrator@WIN-T3FPCJLTUH1",[[1,3923,"\n"]],[3909,3909],[3910,3910]]],[1585792946918,["Administrator@WIN-T3FPCJLTUH1",[[1,3883,"\n"]],[3881,3881],[3882,3882]]],[1585792952226,["Administrator@WIN-T3FPCJLTUH1",[[1,3911,"####"]],[3911,3911],[3915,3915]]],[1585792952995,["Administrator@WIN-T3FPCJLTUH1",[[-1,3914,"#"]],[3915,3915],[3914,3914]]],[1585792953534,["Administrator@WIN-T3FPCJLTUH1",[[1,3914," []"]],[3914,3914],[3917,3917]]],[1585792955060,["Administrator@WIN-T3FPCJLTUH1",[[1,3916,"csss"]],[3916,3916],[3920,3920]]],[1585792956840,["Administrator@WIN-T3FPCJLTUH1",[[-1,3919,"s"]],[3920,3920],[3919,3919]]],[1585792957977,["Administrator@WIN-T3FPCJLTUH1",[[1,3934,"\n"]],[3920,3920],[3921,3921]]],[1585792958184,["Administrator@WIN-T3FPCJLTUH1",[[1,3935,"\n"]],[3921,3921],[3922,3922]]],[1585792960178,["Administrator@WIN-T3FPCJLTUH1",[[1,3922,"### []"]],[3922,3922],[3928,3928]]],[1585792961145,["Administrator@WIN-T3FPCJLTUH1",[[1,3927,"js"]],[3927,3927],[3929,3929]]],[1585792966462,["Administrator@WIN-T3FPCJLTUH1",[[1,3930," 使用"]],[3930,3930],[3933,3933]]],[1585792967517,["Administrator@WIN-T3FPCJLTUH1",[[-1,3931,"使用"]],[3933,3933],[3931,3931]]],[1585792973069,["Administrator@WIN-T3FPCJLTUH1",[[1,3931,"生成10"]],[3931,3931],[3935,3935]]],[1585792973786,["Administrator@WIN-T3FPCJLTUH1",[[-1,3934,"0"]],[3935,3935],[3934,3934]]],[1585792978871,["Administrator@WIN-T3FPCJLTUH1",[[1,3934,"-10000的数组？"]],[3934,3934],[3944,3944]]],[1585792979088,["Administrator@WIN-T3FPCJLTUH1",[[1,3958,"\n"]],[3944,3944],[3945,3945]]],[1585792985762,["Administrator@WIN-T3FPCJLTUH1",[[1,3945,"```"]],[3945,3945],[3948,3948]]],[1585792985797,["Administrator@WIN-T3FPCJLTUH1",[[1,3948,"language\n```\n"]],[3948,3948],[3948,3956]]],[1585792986552,["Administrator@WIN-T3FPCJLTUH1",[[-1,3948,"language"],[1,3956,"j"]],[3948,3956],[3949,3949]]],[1585792988389,["Administrator@WIN-T3FPCJLTUH1",[[1,3949,"avascript"]],[3949,3949],[3958,3958]]],[1585792989012,["Administrator@WIN-T3FPCJLTUH1",[[1,3959,"\n"]],[3958,3958],[3959,3959]]],[1585793009856,["Administrator@WIN-T3FPCJLTUH1",[[1,3959,"for()"]],[3959,3959],[3964,3964]]],[1585793021033,["Administrator@WIN-T3FPCJLTUH1",[[1,3963,"var i=0, arr=[],"]],[3963,3963],[3979,3979]]],[1585793021908,["Administrator@WIN-T3FPCJLTUH1",[[-1,3978,","]],[3979,3979],[3978,3978]]],[1585793029735,["Administrator@WIN-T3FPCJLTUH1",[[1,3978,";i<10000"]],[3978,3978],[3986,3986]]],[1585793031830,["Administrator@WIN-T3FPCJLTUH1",[[1,3980," "]],[3980,3980],[3981,3981]]],[1585793032244,["Administrator@WIN-T3FPCJLTUH1",[[1,3983," "]],[3983,3983],[3984,3984]]],[1585793033513,["Administrator@WIN-T3FPCJLTUH1",[[-1,3983," "]],[3984,3984],[3983,3983]]],[1585793033999,["Administrator@WIN-T3FPCJLTUH1",[[1,3982," "]],[3982,3982],[3983,3983]]],[1585793036853,["Administrator@WIN-T3FPCJLTUH1",[[1,3979," "]],[3979,3979],[3980,3980]]],[1585793039981,["Administrator@WIN-T3FPCJLTUH1",[[-1,3983," "]],[3984,3984],[3983,3983]]],[1585793040706,["Administrator@WIN-T3FPCJLTUH1",[[-1,3981," "]],[3982,3982],[3981,3981]]],[1585793044781,["Administrator@WIN-T3FPCJLTUH1",[[1,3987,"; i++"]],[3987,3987],[3992,3992]]],[1585793046231,["Administrator@WIN-T3FPCJLTUH1",[[1,3993," {}"]],[3993,3993],[3996,3996]]],[1585793046950,["Administrator@WIN-T3FPCJLTUH1",[[1,3995,"\n"]],[3995,3995],[3996,3996]]],[1585793048157,["Administrator@WIN-T3FPCJLTUH1",[[1,3996,"\n"]],[3996,3996],[3997,3997]]],[1585793051110,["Administrator@WIN-T3FPCJLTUH1",[[1,3996,"  arr[]"]],[3996,3996],[4003,4003]]],[1585793052071,["Administrator@WIN-T3FPCJLTUH1",[[1,4002,"i"]],[4002,4002],[4003,4003]]],[1585793060180,["Administrator@WIN-T3FPCJLTUH1",[[1,4004," = i+1;"]],[4004,4004],[4011,4011]]],[1585793062504,["Administrator@WIN-T3FPCJLTUH1",[[-1,3959,"for(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}"]],[3959,4013],[3959,3959]]],[1585793063623,["Administrator@WIN-T3FPCJLTUH1",[[1,3959,"for(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}"]],[3959,3959],[3959,4013]]],[1585793107847,["Administrator@WIN-T3FPCJLTUH1",[[1,3959,"\n"]],[3958,3958],[3959,3959]]],[1585793109827,["Administrator@WIN-T3FPCJLTUH1",[[1,3959,"console.lo"]],[3959,3959],[3969,3969]]],[1585793110562,["Administrator@WIN-T3FPCJLTUH1",[[-1,3967,"lo"]],[3969,3969],[3967,3967]]],[1585793112757,["Administrator@WIN-T3FPCJLTUH1",[[1,3967,"time();"]],[3967,3967],[3974,3974]]],[1585793114376,["Administrator@WIN-T3FPCJLTUH1",[[1,4030,"\n"]],[4029,4029],[4030,4030]]],[1585793116090,["Administrator@WIN-T3FPCJLTUH1",[[1,4030,"console.lo"]],[4030,4030],[4040,4040]]],[1585793116872,["Administrator@WIN-T3FPCJLTUH1",[[-1,4038,"lo"]],[4040,4040],[4038,4038]]],[1585793120659,["Administrator@WIN-T3FPCJLTUH1",[[1,4038,"timeout()"]],[4038,4038],[4047,4047]]],[1585793184692,["Administrator@WIN-T3FPCJLTUH1",[[1,3975,"\n"]],[3974,3974],[3975,3975]]],[1585793188183,["Administrator@WIN-T3FPCJLTUH1",[[1,3975,"// 1.xunhuan"]],[3975,3975],[3987,3987]]],[1585793189558,["Administrator@WIN-T3FPCJLTUH1",[[-1,3980,"xunhuan"]],[3987,3987],[3980,3980]]],[1585793192677,["Administrator@WIN-T3FPCJLTUH1",[[1,3980,"循环"]],[3980,3980],[3982,3982]]],[1585793193620,["Administrator@WIN-T3FPCJLTUH1",[[-1,3980,"循环"]],[3982,3982],[3980,3980]]],[1585793197153,["Administrator@WIN-T3FPCJLTUH1",[[1,3980,"for循环"]],[3980,3980],[3985,3985]]],[1585793211644,["Administrator@WIN-T3FPCJLTUH1",[[-1,4053,"out"],[1,4056,"end"]],[4049,4056],[4056,4056]]],[1585793219043,["Administrator@WIN-T3FPCJLTUH1",[[-1,4053,"e"]],[4054,4054],[4053,4053]]],[1585793219448,["Administrator@WIN-T3FPCJLTUH1",[[1,4053,"E"]],[4053,4053],[4054,4054]]],[1585793227248,["Administrator@WIN-T3FPCJLTUH1",[[1,4059,"\n"]],[4058,4058],[4059,4059]]],[1585793236934,["Administrator@WIN-T3FPCJLTUH1",[[1,4059,"// 2.shiyong"]],[4059,4059],[4071,4071]]],[1585793237913,["Administrator@WIN-T3FPCJLTUH1",[[-1,4064,"shiyong"]],[4071,4071],[4064,4064]]],[1585793244000,["Administrator@WIN-T3FPCJLTUH1",[[1,4064,"使用Array.from()l"]],[4064,4064],[4079,4079]]],[1585793244613,["Administrator@WIN-T3FPCJLTUH1",[[-1,4078,"l"]],[4079,4079],[4078,4078]]],[1585793244792,["Administrator@WIN-T3FPCJLTUH1",[[1,4078,";"]],[4078,4078],[4079,4079]]],[1585793246424,["Administrator@WIN-T3FPCJLTUH1",[[-1,4078,";"]],[4079,4079],[4078,4078]]],[1585793270310,["Administrator@WIN-T3FPCJLTUH1",[[1,4078,"把一个iterator数据转换成真正的数组"]],[4078,4078],[4099,4099]]],[1585793270629,["Administrator@WIN-T3FPCJLTUH1",[[1,4100,"\n"]],[4099,4099],[4100,4100]]],[1585793275231,["Administrator@WIN-T3FPCJLTUH1",[[1,4100,"Array.from();"]],[4100,4100],[4113,4113]]],[1585793281106,["Administrator@WIN-T3FPCJLTUH1",[[1,4111,"new Array"]],[4111,4111],[4120,4120]]],[1585793286823,["Administrator@WIN-T3FPCJLTUH1",[[1,4120,"("]],[4120,4120],[4121,4121]]],[1585793286938,["Administrator@WIN-T3FPCJLTUH1",[[1,4122,")"]],[4121,4121],[4122,4122]]],[1585793289334,["Administrator@WIN-T3FPCJLTUH1",[[1,4121,"10000"]],[4121,4121],[4126,4126]]],[1585793290703,["Administrator@WIN-T3FPCJLTUH1",[[1,4127,","]],[4127,4127],[4128,4128]]],[1585793301639,["Administrator@WIN-T3FPCJLTUH1",[[-1,4127,","]],[4128,4128],[4127,4127]]],[1585793303385,["Administrator@WIN-T3FPCJLTUH1",[[-1,4125,"0"]],[4126,4126],[4125,4125]]],[1585793303806,["Administrator@WIN-T3FPCJLTUH1",[[1,4125,"1"]],[4125,4125],[4126,4126]]],[1585793310944,["Administrator@WIN-T3FPCJLTUH1",[[1,4127,".keys("]],[4127,4127],[4133,4133]]],[1585793315510,["Administrator@WIN-T3FPCJLTUH1",[[1,4134,").slice()"]],[4133,4133],[4143,4143]]],[1585793317031,["Administrator@WIN-T3FPCJLTUH1",[[1,4142,"1"]],[4142,4142],[4143,4143]]],[1585793511307,["Administrator@WIN-T3FPCJLTUH1",[[1,4146,"\n"]],[4145,4145],[4146,4146]]],[1585793514469,["Administrator@WIN-T3FPCJLTUH1",[[1,4146,"// 3."]],[4146,4146],[4151,4151]]],[1585793696651,["Administrator@WIN-T3FPCJLTUH1",[[1,4146,"\n"]],[4145,4145],[4146,4146]]],[1585793700190,["Administrator@WIN-T3FPCJLTUH1",[[1,4146,"Array.fo"]],[4146,4146],[4154,4154]]],[1585793700525,["Administrator@WIN-T3FPCJLTUH1",[[-1,4153,"o"]],[4154,4154],[4153,4153]]],[1585793700961,["Administrator@WIN-T3FPCJLTUH1",[[1,4153,"rom"]],[4153,4153],[4156,4156]]],[1585793702647,["Administrator@WIN-T3FPCJLTUH1",[[1,4156,"()"]],[4156,4156],[4158,4158]]],[1585793709784,["Administrator@WIN-T3FPCJLTUH1",[[1,4157,"{}"]],[4157,4157],[4159,4159]]],[1585793714919,["Administrator@WIN-T3FPCJLTUH1",[[1,4158,"length: 10000"]],[4158,4158],[4171,4171]]],[1585793722266,["Administrator@WIN-T3FPCJLTUH1",[[1,4172,", ("]],[4172,4172],[4175,4175]]],[1585793723772,["Administrator@WIN-T3FPCJLTUH1",[[1,4176,")"]],[4175,4175],[4176,4176]]],[1585793727621,["Administrator@WIN-T3FPCJLTUH1",[[1,4175,"i"]],[4175,4175],[4176,4176]]],[1585793728857,["Administrator@WIN-T3FPCJLTUH1",[[-1,4175,"i"]],[4176,4176],[4175,4175]]],[1585793731769,["Administrator@WIN-T3FPCJLTUH1",[[1,4175,"_, i"]],[4175,4175],[4179,4179]]],[1585793737754,["Administrator@WIN-T3FPCJLTUH1",[[1,4180," => i=1"]],[4180,4180],[4187,4187]]],[1585793738602,["Administrator@WIN-T3FPCJLTUH1",[[-1,4185,"=1"]],[4187,4187],[4185,4185]]],[1585793739263,["Administrator@WIN-T3FPCJLTUH1",[[1,4185,"+1"]],[4185,4185],[4187,4187]]],[1585793740879,["Administrator@WIN-T3FPCJLTUH1",[[1,4188,";"]],[4188,4188],[4189,4189]]],[1585793761645,["Administrator@WIN-T3FPCJLTUH1",[[1,4158," "]],[4158,4158],[4159,4159]]],[1585793763199,["Administrator@WIN-T3FPCJLTUH1",[[1,4172," "]],[4172,4172],[4173,4173]]],[1585793950590,["Administrator@WIN-T3FPCJLTUH1",[[1,4091,"hu"]],[4091,4091],[4093,4093]]],[1585793951431,["Administrator@WIN-T3FPCJLTUH1",[[-1,4091,"hu"]],[4093,4093],[4091,4091]]],[1585793956503,["Administrator@WIN-T3FPCJLTUH1",[[1,4091,"或类数组对象"]],[4091,4091],[4097,4097]]],[1585793988508,["Administrator@WIN-T3FPCJLTUH1",[[1,4204,"\n"]],[4203,4203],[4204,4204]]],[1585793993463,["Administrator@WIN-T3FPCJLTUH1",[[1,4204,"new Array(10000).fill(0).map((o,i)=>i+1)；"]],[4204,4204],[4245,4245]]],[1585793994996,["Administrator@WIN-T3FPCJLTUH1",[[-1,4244,"；"]],[4245,4245],[4244,4244]]],[1585793995376,["Administrator@WIN-T3FPCJLTUH1",[[1,4244,";"]],[4244,4244],[4245,4245]]],[1585794113949,["Administrator@WIN-T3FPCJLTUH1",[[1,4203,"最快的方法"]],[4203,4203],[4208,4208]]],[1585794150823,["Administrator@WIN-T3FPCJLTUH1",[[1,4251,"\n"]],[4250,4250],[4251,4251]]],[1585794160794,["Administrator@WIN-T3FPCJLTUH1",[[1,4251,"// 4.使用Gnerator"]],[4251,4251],[4266,4266]]],[1585794164806,["Administrator@WIN-T3FPCJLTUH1",[[1,4259,"e"]],[4259,4259],[4260,4260]]],[1585794170655,["Administrator@WIN-T3FPCJLTUH1",[[1,4268,"\n"]],[4267,4267],[4268,4268]]],[1585794171379,["Administrator@WIN-T3FPCJLTUH1",[[1,4268,"[...function*(i = 1){\n  while(i <= 10000) yield i++;\n}()]"]],[4268,4268],[4325,4325]]],[1585794263458,["Administrator@WIN-T3FPCJLTUH1",[[1,4326,"\n"]],[4325,4325],[4326,4326]]],[1585794267572,["Administrator@WIN-T3FPCJLTUH1",[[1,4326,"// 5.budong"]],[4326,4326],[4337,4337]]],[1585794268762,["Administrator@WIN-T3FPCJLTUH1",[[-1,4331,"budong"]],[4337,4337],[4331,4331]]],[1585794270705,["Administrator@WIN-T3FPCJLTUH1",[[1,4331,"不懂"]],[4331,4331],[4333,4333]]],[1585794271461,["Administrator@WIN-T3FPCJLTUH1",[[1,4334,"\n"]],[4333,4333],[4334,4334]]],[1585794272081,["Administrator@WIN-T3FPCJLTUH1",[[1,4334,"Array.apply(null,{length:10000}).map((item,index)=>index+1)"]],[4334,4334],[4393,4393]]],[1585794611953,["Administrator@WIN-T3FPCJLTUH1",[[-1,4331,"不懂"]],[4333,4333],[4331,4331]]],[1585794938339,["Administrator@WIN-T3FPCJLTUH1",[[-1,3978,"1"],[1,3979,"2"]],[3978,3979],[3979,3979]]],[1585794939726,["Administrator@WIN-T3FPCJLTUH1",[[1,3975,"\n"]],[3974,3974],[3975,3975]]],[1585794945382,["Administrator@WIN-T3FPCJLTUH1",[[1,3975,"// 1.罪魁啊"]],[3975,3975],[3983,3983]]],[1585794946329,["Administrator@WIN-T3FPCJLTUH1",[[-1,3980,"罪魁啊"]],[3983,3983],[3980,3980]]],[1585794948009,["Administrator@WIN-T3FPCJLTUH1",[[1,3980,"最快"]],[3980,3980],[3982,3982]]],[1585794954384,["Administrator@WIN-T3FPCJLTUH1",[[-1,4206,"// 3.最快的方法\nnew Array(10000).fill(0).map((o,i)=>i+1);"]],[4206,4258],[4206,4206]]],[1585794955436,["Administrator@WIN-T3FPCJLTUH1",[[-1,4206,"\n"]],[4206,4206],[4205,4205]]],[1585794958673,["Administrator@WIN-T3FPCJLTUH1",[[-1,3978,"1"],[1,3979,"3"],[1,3982,"的方法\nnew Array(10000).fill(0).map((o,i)=>i+1);"]],[3975,3982],[4027,4027]]],[1585794960177,["Administrator@WIN-T3FPCJLTUH1",[[-1,3978,"3"]],[3979,3979],[3978,3978]]],[1585794960461,["Administrator@WIN-T3FPCJLTUH1",[[1,3978,"1"]],[3978,3978],[3979,3979]]],[1585794963977,["Administrator@WIN-T3FPCJLTUH1",[[-1,4115,"2"]],[4116,4116],[4115,4115]]],[1585794964322,["Administrator@WIN-T3FPCJLTUH1",[[1,4115,"3"]],[4115,4115],[4116,4116]]],[1585795017424,["Administrator@WIN-T3FPCJLTUH1",[[-1,4326,"// 5.\nArray.apply(null,{length:10000}).map((item,index)=>index+1)"]],[4326,4391],[4326,4326]]],[1585795020147,["Administrator@WIN-T3FPCJLTUH1",[[1,4028,"\n"]],[4027,4027],[4028,4028]]],[1585795021017,["Administrator@WIN-T3FPCJLTUH1",[[1,4028,"// 5.\nArray.apply(null,{length:10000}).map((item,index)=>index+1)"]],[4028,4028],[4093,4093]]],[1585795023239,["Administrator@WIN-T3FPCJLTUH1",[[-1,4031,"5"],[1,4032,"2"]],[4031,4032],[4032,4032]]],[1585795025182,["Administrator@WIN-T3FPCJLTUH1",[[-1,4097,"2"],[1,4098,"3"]],[4097,4098],[4098,4098]]],[1585795026764,["Administrator@WIN-T3FPCJLTUH1",[[-1,4181,"3"],[1,4182,"4"]],[4181,4182],[4182,4182]]],[1585795028539,["Administrator@WIN-T3FPCJLTUH1",[[-1,4320,"4"],[1,4321,"5"]],[4320,4321],[4321,4321]]],[1585795058116,["Administrator@WIN-T3FPCJLTUH1",[[1,4033,"使用Array.apply()初始化一个数组"]],[4033,4033],[4055,4055]]],[1585795065240,["Administrator@WIN-T3FPCJLTUH1",[[-1,4051,"一个数组"]],[4055,4055],[4051,4051]]],[1585795127361,["Administrator@WIN-T3FPCJLTUH1",[[1,4411,"\n"]],[4410,4410],[4411,4411]]],[1585795129733,["Administrator@WIN-T3FPCJLTUH1",[[1,4411,"//"]],[4411,4411],[4413,4413]]],[1585795140912,["Administrator@WIN-T3FPCJLTUH1",[[1,3985,"："]],[3985,3985],[3986,3986]]],[1585795149761,["Administrator@WIN-T3FPCJLTUH1",[[1,3986,"创建一个"]],[3986,3986],[3990,3990]]],[1585795153286,["Administrator@WIN-T3FPCJLTUH1",[[-1,3986,"创建一个"]],[3990,3990],[3986,3986]]],[1585795168240,["Administrator@WIN-T3FPCJLTUH1",[[1,3986,"创建数组填充内容修改内容"]],[3986,3986],[3998,3998]]],[1585795170661,["Administrator@WIN-T3FPCJLTUH1",[[1,3990,"，"]],[3990,3990],[3991,3991]]],[1585795171375,["Administrator@WIN-T3FPCJLTUH1",[[1,3995,"，"]],[3995,3995],[3996,3996]]],[1585795183542,["Administrator@WIN-T3FPCJLTUH1",[[1,4066,"，修改内容"]],[4066,4066],[4071,4071]]],[1585795192456,["Administrator@WIN-T3FPCJLTUH1",[[1,4262,"，修改内容"]],[4262,4262],[4267,4267]]],[1585795205897,["Administrator@WIN-T3FPCJLTUH1",[[1,4438,"new Array()"]],[4438,4438],[4449,4449]]],[1585795208338,["Administrator@WIN-T3FPCJLTUH1",[[1,4448,"10000"]],[4448,4448],[4453,4453]]],[1585795216584,["Administrator@WIN-T3FPCJLTUH1",[[1,4454,"与Array.apply();"]],[4454,4454],[4469,4469]]],[1585795217383,["Administrator@WIN-T3FPCJLTUH1",[[-1,4468,";"]],[4469,4469],[4468,4468]]],[1585795219237,["Administrator@WIN-T3FPCJLTUH1",[[1,4467,"{}"]],[4467,4467],[4469,4469]]],[1585795220520,["Administrator@WIN-T3FPCJLTUH1",[[1,4468,"leg"]],[4468,4468],[4471,4471]]],[1585795221043,["Administrator@WIN-T3FPCJLTUH1",[[-1,4470,"g"]],[4471,4471],[4470,4470]]],[1585795221634,["Administrator@WIN-T3FPCJLTUH1",[[1,4470,"ngt"]],[4470,4470],[4473,4473]]],[1585795225756,["Administrator@WIN-T3FPCJLTUH1",[[1,4467,"null, "]],[4467,4467],[4473,4473]]],[1585795230077,["Administrator@WIN-T3FPCJLTUH1",[[1,4479,"h:10000"]],[4479,4479],[4486,4486]]],[1585795231964,["Administrator@WIN-T3FPCJLTUH1",[[1,4488,"de"]],[4488,4488],[4490,4490]]],[1585795232838,["Administrator@WIN-T3FPCJLTUH1",[[-1,4488,"de"]],[4490,4490],[4488,4488]]],[1585795236354,["Administrator@WIN-T3FPCJLTUH1",[[1,4488,"的区别？"]],[4488,4488],[4492,4492]]],[1585795237213,["Administrator@WIN-T3FPCJLTUH1",[[1,4493,"\n"]],[4492,4492],[4493,4493]]],[1585795248478,["Administrator@WIN-T3FPCJLTUH1",[[-1,4436,"//new Array(10000)与Array.apply(null, {length:10000})的区别？\n"]],[4436,4493],[4436,4436]]],[1585795249187,["Administrator@WIN-T3FPCJLTUH1",[[-1,4436,"\n"]],[4436,4436],[4435,4435]]],[1585795249541,["Administrator@WIN-T3FPCJLTUH1",[[-1,4435,"\n"]],[4435,4435],[4434,4434]]],[1585795257675,["Administrator@WIN-T3FPCJLTUH1",[[1,4445,"//new Array(10000)与Array.apply(null, {length:10000})的区别？\n"]],[4445,4445],[4502,4502]]],[1585795262548,["Administrator@WIN-T3FPCJLTUH1",[[1,4441,"## 2020.04.02\n\n### [html]\n\n### [css]\n\n### [js] 生成1-10000的数组？"]],[4441,4441],[4501,4501]]],[1585795264491,["Administrator@WIN-T3FPCJLTUH1",[[-1,4453,"2"]],[4454,4454],[4453,4453]]],[1585795264856,["Administrator@WIN-T3FPCJLTUH1",[[1,4453,"3"]],[4453,4453],[4454,4454]]],[1585795276080,["Administrator@WIN-T3FPCJLTUH1",[[-1,4507,"new Array(10000)与Array.apply(null, {length:10000})的区别？"]],[4507,4561],[4507,4507]]],[1585795277767,["Administrator@WIN-T3FPCJLTUH1",[[-1,4488,"生成1-"],[1,4492,"new Array(10000)与Array.apply(null, {length:"],[-1,4497,"的数组"],[1,4500,"})的区别"]],[4488,4501],[4542,4542]]],[1585795280289,["Administrator@WIN-T3FPCJLTUH1",[[-1,4546,"//"]],[4548,4548],[4546,4546]]],[1585795280575,["Administrator@WIN-T3FPCJLTUH1",[[-1,4554,"\n"]],[4546,4546],[4545,4545]]],[1585795281115,["Administrator@WIN-T3FPCJLTUH1",[[-1,4553,"\n"]],[4545,4545],[4544,4544]]],[1585795285693,["Administrator@WIN-T3FPCJLTUH1",[[1,4488,"`"]],[4488,4488],[4489,4489]]],[1585795286518,["Administrator@WIN-T3FPCJLTUH1",[[1,4505,"`"]],[4505,4505],[4506,4506]]],[1585795289836,["Administrator@WIN-T3FPCJLTUH1",[[1,4507,"`"]],[4507,4507],[4508,4508]]],[1585795290510,["Administrator@WIN-T3FPCJLTUH1",[[1,4541,"`"]],[4541,4541],[4542,4542]]],[1585795292317,["Administrator@WIN-T3FPCJLTUH1",[[1,4557,"\n"]],[4546,4546],[4547,4547]]],[1585795295272,["Administrator@WIN-T3FPCJLTUH1",[[1,4547,"``"]],[4547,4547],[4549,4549]]],[1585795300991,["Administrator@WIN-T3FPCJLTUH1",[[1,4548,"new Array(0"]],[4548,4548],[4559,4559]]],[1585795302333,["Administrator@WIN-T3FPCJLTUH1",[[-1,4558,"0"]],[4559,4559],[4558,4558]]],[1585795302637,["Administrator@WIN-T3FPCJLTUH1",[[1,4558,")"]],[4558,4558],[4559,4559]]],[1585795304238,["Administrator@WIN-T3FPCJLTUH1",[[1,4558,"10000"]],[4558,4558],[4563,4563]]],[1585795320114,["Administrator@WIN-T3FPCJLTUH1",[[1,4565,"创建的是10000位的空数组，A"]],[4565,4565],[4581,4581]]],[1585795323925,["Administrator@WIN-T3FPCJLTUH1",[[1,4581,"rray.appl"]],[4581,4581],[4590,4590]]],[1585795324290,["Administrator@WIN-T3FPCJLTUH1",[[-1,4589,"l"]],[4590,4590],[4589,4589]]],[1585795326288,["Administrator@WIN-T3FPCJLTUH1",[[1,4589,"ly()"]],[4589,4589],[4593,4593]]],[1585795328997,["Administrator@WIN-T3FPCJLTUH1",[[1,4592,"null,{}"]],[4592,4592],[4599,4599]]],[1585795330892,["Administrator@WIN-T3FPCJLTUH1",[[1,4598,"lenngth"]],[4598,4598],[4605,4605]]],[1585795334703,["Administrator@WIN-T3FPCJLTUH1",[[-1,4601,"ng"]],[4603,4603],[4601,4601]]],[1585795335277,["Administrator@WIN-T3FPCJLTUH1",[[1,4601,"g"]],[4601,4601],[4602,4602]]],[1585795337462,["Administrator@WIN-T3FPCJLTUH1",[[1,4604,":10000"]],[4604,4604],[4610,4610]]],[1585795351026,["Administrator@WIN-T3FPCJLTUH1",[[1,4612,"创建的是10000位的undefined数组"]],[4612,4612],[4634,4634]]],[1585795354982,["Administrator@WIN-T3FPCJLTUH1",[[1,4580,"`"]],[4580,4580],[4581,4581]]],[1585795356034,["Administrator@WIN-T3FPCJLTUH1",[[1,4613,"`"]],[4613,4613],[4614,4614]]],[1585795357630,["Administrator@WIN-T3FPCJLTUH1",[[1,4625,"`"]],[4625,4625],[4626,4626]]],[1585795358792,["Administrator@WIN-T3FPCJLTUH1",[[1,4635,"`"]],[4635,4635],[4636,4636]]],[1585795364197,["Administrator@WIN-T3FPCJLTUH1",[[-1,4576,"空"]],[4577,4577],[4576,4576]]],[1585795364849,["Administrator@WIN-T3FPCJLTUH1",[[1,4576,"``"]],[4576,4576],[4578,4578]]],[1585795366887,["Administrator@WIN-T3FPCJLTUH1",[[1,4577,"empty"]],[4577,4577],[4582,4582]]],[1585795455822,["Administrator@WIN-T3FPCJLTUH1",[[1,4644,"."]],[4644,4644],[4645,4645]]],[1585795457108,["Administrator@WIN-T3FPCJLTUH1",[[-1,4644,"."]],[4645,4645],[4644,4644]]],[1585795457976,["Administrator@WIN-T3FPCJLTUH1",[[1,4644,"。"]],[4644,4644],[4645,4645]]],[1585795547968,["Administrator@WIN-T3FPCJLTUH1",[[-1,4479,"### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。"]],[4479,4645],[4479,4479]]],[1585795558262,["Administrator@WIN-T3FPCJLTUH1",[[1,4441,"\n"]],[4439,4439],[4440,4440]]],[1585795558559,["Administrator@WIN-T3FPCJLTUH1",[[1,4440,"### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。"]],[4440,4440],[4606,4606]]],[1585795581734,["Administrator@WIN-T3FPCJLTUH1",[[-1,3807,"## 2020.03.28\n\n### [html]\n\n### [css]\n\n### [js] 如何给localStorage存储的数据设置过期时间？"]],[3845,3881],[3807,3807]]],[1585795582524,["Administrator@WIN-T3FPCJLTUH1",[[-1,3809,"\n"]],[3809,3809],[3808,3808]]],[1585795582742,["Administrator@WIN-T3FPCJLTUH1",[[-1,3808,"\n"]],[3808,3808],[3807,3807]]],[1585795583410,["Administrator@WIN-T3FPCJLTUH1",[[-1,3807,"\n"]],[3807,3807],[3806,3806]]],[1585795591321,["Administrator@WIN-T3FPCJLTUH1",[[1,3807,"\n"]],[3806,3806],[3807,3807]]],[1585795592114,["Administrator@WIN-T3FPCJLTUH1",[[1,3808,"\n"]],[3806,3806],[3807,3807]]],[1585795592699,["Administrator@WIN-T3FPCJLTUH1",[[1,3807,"### [js] 如何给localStorage存储的数据设置过期时间？"]],[3807,3807],[3843,3843]]],[1585795602509,["Administrator@WIN-T3FPCJLTUH1",[[-1,2978,"### [html] \n\n### [css]\n"]],[2978,3001],[2978,2978]]],[1585795603060,["Administrator@WIN-T3FPCJLTUH1",[[-1,2978,"\n"]],[2978,2978],[2977,2977]]],[1585795610927,["Administrator@WIN-T3FPCJLTUH1",[[1,3821,"\n"]],[3819,3819],[3820,3820]]],[1585798030888,["Administrator@WIN-T3FPCJLTUH1",[[-1,3837,"### [html]\n\n### [css]"]],[3837,3858],[3837,3837]]],[1585798031537,["Administrator@WIN-T3FPCJLTUH1",[[-1,3838,"\n"]],[3837,3837],[3836,3836]]],[1585798032357,["Administrator@WIN-T3FPCJLTUH1",[[-1,3837,"\n### [js]"]],[3837,3846],[3837,3837]]],[1585798033828,["Administrator@WIN-T3FPCJLTUH1",[[1,3837,"\n### [js]"]],[3837,3837],[3837,3846]]],[1585798035010,["Administrator@WIN-T3FPCJLTUH1",[[-1,3837,"\n"]],[3836,3836],[3835,3835]]],[1585798043150,["Administrator@WIN-T3FPCJLTUH1",[[-1,2,"每日三连"]],[6,6],[2,2]]],[1585798054697,["Administrator@WIN-T3FPCJLTUH1",[[1,2,"积跬步"]],[2,2],[5,5]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["e37e7466-ff30-4c7f-8c11-48dde1a46fcc",1586222778726,"# 积跬步\n\n## 2020.03.23\n\n### [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n\n### [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n### [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n### [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n### [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n### [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n### [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n### [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n### [js] [call、apply、bind的用法？](https://www.cnblogs.com/moqiutao/p/7371988.html)\n替换函数运行时的上下文，即`this`指向。\n`call`和`apply`都是在当前调用时临时替换一次，并立即执行函数；\n`bind`则会返回一个内部`this`被替换为指定对象的新函数。\n`call`和`apply`的区别在于`call`需要按顺序传形参，如`Arrray.prototype.slice.call(this, 1, 2)`，`apply`支持除了`this`外，剩余参数是一个数组，如`Arrray.prototype.slice.apply(this, [1, 2])`。\n\n## 2020.03.27\n\n### [js] 在axios中怎样添加授权验证？\n\n[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n\n```javascript\nimport axios from 'axios';\nimport router from './router';\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'https://api.github.com';\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = localStorage.token; //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;\n```\n\n### [js] 如何给localStorage存储的数据设置过期时间？\n\n\n## 2020.04.02\n\n### [js] 生成1-10000的数组？\n```javascript\nconsole.time();\n// 1.最快的方法：创建数组，填充内容，修改内容\nnew Array(10000).fill(0).map((o,i)=>i+1);\n// 2.使用Array.apply()初始化，修改内容\nArray.apply(null,{length:10000}).map((item,index)=>index+1)\n// 3.for循环\nfor(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}\nconsole.timeEnd()\n// 4.使用Array.from()把一个iterator数据或类数组对象转换成真正的数组，修改内容\nArray.from(new Array(10001).keys()).slice(1);\nArray.from({ length: 10000 }, (_, i) => i+1);\n// 5.使用Generator\n[...function*(i = 1){\n  while(i <= 10000) yield i++;\n}()]\n```\n\n### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。\n\n## 2020.04.03\n\n### [html]\n\n### [css]\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1586222720828,["Administrator@WIN-T3FPCJLTUH1",[[-1,4534,"3"]],[4535,4535],[4534,4534]]],[1586222721206,["Administrator@WIN-T3FPCJLTUH1",[[1,4534,"7"]],[4534,4534],[4535,4535]]],[1586222918722,["Administrator@WIN-T3FPCJLTUH1",[[1,3821,"\n"]],[3818,3818],[3819,3819]]],[1586222919089,["Administrator@WIN-T3FPCJLTUH1",[[1,3822,"\n"]],[3819,3819],[3820,3820]]],[1586222921380,["Administrator@WIN-T3FPCJLTUH1",[[1,3820,"### 【】"]],[3820,3820],[3826,3826]]],[1586222922323,["Administrator@WIN-T3FPCJLTUH1",[[-1,3824,"【】"]],[3826,3826],[3824,3824]]],[1586222922703,["Administrator@WIN-T3FPCJLTUH1",[[1,3824,"[]"]],[3824,3824],[3826,3826]]],[1586222923439,["Administrator@WIN-T3FPCJLTUH1",[[1,3825,"js"]],[3825,3825],[3827,3827]]],[1586222930502,["Administrator@WIN-T3FPCJLTUH1",[[1,3828," 什么是UUID，"]],[3828,3828],[3837,3837]]],[1586222932196,["Administrator@WIN-T3FPCJLTUH1",[[-1,3836,"，"]],[3837,3837],[3836,3836]]],[1586222944150,["Administrator@WIN-T3FPCJLTUH1",[[1,3836,"？它有什么作用？用js系诶一个"]],[3836,3836],[3851,3851]]],[1586222945119,["Administrator@WIN-T3FPCJLTUH1",[[-1,3847,"系诶一个"]],[3851,3851],[3847,3847]]],[1586222954964,["Administrator@WIN-T3FPCJLTUH1",[[1,3847,"写一个生成UUID的方法？"]],[3847,3847],[3860,3860]]],[1586222955817,["Administrator@WIN-T3FPCJLTUH1",[[1,3863,"\n"]],[3860,3860],[3861,3861]]],[1586223403553,["Administrator@WIN-T3FPCJLTUH1",[[1,3861,"UUID（Universally Unique Identifier, 通用唯一识别码，也叫GUID（Globally Unique IDentifier，全局唯一识别码）。在互联网工程任务组发布的[RFC4122](https://tools.ietf.org/html/rfc4122)文档中介绍，UUID是一种不需要中央机构分配而产生唯一标识符的方式在时间和空间上保持其唯一性。UUID是由128位的二进制数据组成，通常使用32位的十六进制数据表示，并使用连字符连接。其表示格式为8-4-4-4-12。例如：\n\n```\n7e6eeeef-5271-545e-bcd5-eacf6a804e2b\nxxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n```\n\n  M中使用4位来表示UUID的版本，N中使用1-3位表示不同的变体。"]],[3861,3861],[4238,4238]]],[1586223416589,["Administrator@WIN-T3FPCJLTUH1",[[1,4239,"  \n"]],[4238,4238],[4241,4241]]],[1586223429546,["Administrator@WIN-T3FPCJLTUH1",[[-1,4203,"  "]],[4205,4205],[4203,4203]]],[1586223437132,["Administrator@WIN-T3FPCJLTUH1",[[1,4237,"项目中用到的"]],[4237,4237],[4243,4243]]],[1586223441043,["Administrator@WIN-T3FPCJLTUH1",[[1,4243,"写法："]],[4243,4243],[4246,4246]]],[1586223441995,["Administrator@WIN-T3FPCJLTUH1",[[1,4246,"\n"]],[4246,4246],[4247,4247]]],[1586223444408,["Administrator@WIN-T3FPCJLTUH1",[[1,4247,"```"]],[4247,4247],[4250,4250]]],[1586223444445,["Administrator@WIN-T3FPCJLTUH1",[[1,4250,"language\n```\n"]],[4250,4250],[4250,4258]]],[1586223445232,["Administrator@WIN-T3FPCJLTUH1",[[-1,4250,"language"],[1,4258,"h"]],[4250,4258],[4251,4251]]],[1586223445593,["Administrator@WIN-T3FPCJLTUH1",[[-1,4250,"h"]],[4251,4251],[4250,4250]]],[1586223447485,["Administrator@WIN-T3FPCJLTUH1",[[1,4250,"javascript"]],[4250,4250],[4260,4260]]],[1586223447844,["Administrator@WIN-T3FPCJLTUH1",[[1,4261,"\n"]],[4260,4260],[4261,4261]]],[1586223457728,["Administrator@WIN-T3FPCJLTUH1",[[1,4261,"exports.GET_UUID = () => {\n\n  var s = []\n\n  var hexDigits = '0123456789abcdef'\n\n  for (var i = 0; i < 36; i++) {\n\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n\n  }\n\n  s[14] = '4' // bits 12-15 of the time_hi_and_version field to 0010\n\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1) // bits 6-7 of the clock_seq_hi_and_reserved to 01\n\n  s[8] = s[13] = s[18] = s[23] = '-'\n\n  var uuid = s.join('')\n\n  return uuid\n\n}"]],[4261,4261],[4698,4698]]],[1586223460734,["Administrator@WIN-T3FPCJLTUH1",[[-1,4288,"\n"]],[4288,4288],[4287,4287]]],[1586223461409,["Administrator@WIN-T3FPCJLTUH1",[[-1,4301,"\n"]],[4301,4301],[4300,4300]]],[1586223461942,["Administrator@WIN-T3FPCJLTUH1",[[-1,4338,"\n"]],[4338,4338],[4337,4337]]],[1586223462712,["Administrator@WIN-T3FPCJLTUH1",[[-1,4371,"\n"]],[4371,4371],[4370,4370]]],[1586223463381,["Administrator@WIN-T3FPCJLTUH1",[[-1,4436,"\n"]],[4436,4436],[4435,4435]]],[1586223463965,["Administrator@WIN-T3FPCJLTUH1",[[-1,4440,"\n"]],[4440,4440],[4439,4439]]],[1586223464568,["Administrator@WIN-T3FPCJLTUH1",[[-1,4509,"\n"]],[4509,4509],[4508,4508]]],[1586223465242,["Administrator@WIN-T3FPCJLTUH1",[[-1,4611,"\n"]],[4611,4611],[4610,4610]]],[1586223465766,["Administrator@WIN-T3FPCJLTUH1",[[-1,4648,"\n"]],[4648,4648],[4647,4647]]],[1586223466315,["Administrator@WIN-T3FPCJLTUH1",[[-1,4672,"\n"]],[4672,4672],[4671,4671]]],[1586223467482,["Administrator@WIN-T3FPCJLTUH1",[[-1,4686,"\n"]],[4686,4686],[4685,4685]]],[1586223470998,["Administrator@WIN-T3FPCJLTUH1",[[-1,4261,"exports."],[1,4269,"f"],[-1,4277," = () => {\n  var s = []\n  var "],[1,4307," = () => {\n  var s = []\n  var "],[-1,4316," = "],[1,4319," = "],[-1,4338,"  for "],[1,4344,"  for "],[-1,4348," i = 0; i < 36; "],[1,4364," i = 0; i < 36; "],[-1,4368," {\n    "],[1,4375," {\n    "],[-1,4379," = "],[1,4382," = "],[-1,4423," * "],[1,4426," * "],[-1,4432," 1)\n  }\n  "],[1,4442," 1)\n  }\n  "],[-1,4447," = '4' // "],[1,4457," = '4' // "],[-1,4461," "],[1,4462," "],[-1,4467," of the "],[1,4475," of the "],[-1,4494," "],[1,4495," "],[-1,4500," to "],[1,4504," to "],[-1,4509,"  "],[1,4511,"  "],[-1,4516," = "],[1,4519," = "],[-1,4542," & "],[1,4545," & "],[-1,4549," | "],[1,4552," | "],[-1,4556," 1) // "],[1,4563," 1) // "],[-1,4567," 6-7 of the "],[1,4579," 6-7 of the "],[-1,4604," to 01\n  "],[1,4613," to 01\n  "],[-1,4617," = "],[1,4620," = "],[-1,4625," = "],[1,4628," = "],[-1,4633," = "],[1,4636," = "],[-1,4641," = "],[1,4644," = "],[-1,4648,"  var "],[1,4654,"  var "],[-1,4658," = "],[1,4661," = "],[-1,4672,"  "],[1,4674,"  "],[-1,4680," "],[1,4681," "]],[4261,4269],[4262,4262]]],[1586223472552,["Administrator@WIN-T3FPCJLTUH1",[[1,4262,"unction "]],[4262,4262],[4270,4270]]],[1586223474854,["Administrator@WIN-T3FPCJLTUH1",[[-1,4279,"= "]],[4281,4281],[4279,4279]]],[1586223476464,["Administrator@WIN-T3FPCJLTUH1",[[-1,4282,"=> "]],[4284,4284],[4281,4281]]],[1586224210667,["Administrator@WIN-T3FPCJLTUH1",[[1,5419," 禁止移动端页面缩放？"]],[5419,5419],[5430,5430]]],[1586224211027,["Administrator@WIN-T3FPCJLTUH1",[[1,5432,"\n"]],[5430,5430],[5431,5431]]],[1586224213223,["Administrator@WIN-T3FPCJLTUH1",[[1,5431,"```"]],[5431,5431],[5434,5434]]],[1586224213261,["Administrator@WIN-T3FPCJLTUH1",[[1,5434,"language\n```\n"]],[5434,5434],[5434,5442]]],[1586224214586,["Administrator@WIN-T3FPCJLTUH1",[[-1,5434,"language"],[1,5442,"h"]],[5434,5442],[5435,5435]]],[1586224215023,["Administrator@WIN-T3FPCJLTUH1",[[1,5435,"tml"]],[5435,5435],[5438,5438]]],[1586224215330,["Administrator@WIN-T3FPCJLTUH1",[[1,5439,"\n"]],[5438,5438],[5439,5439]]],[1586224215914,["Administrator@WIN-T3FPCJLTUH1",[[1,5439,"<meta name=\"viewport\" content=\"width=device-width, initial-scale=1,user-scalable=0\">"]],[5439,5439],[5523,5523]]],[1586224221107,["Administrator@WIN-T3FPCJLTUH1",[[-1,5529,"\n"]],[5529,5529],[5528,5528]]],[1586224596480,["Administrator@WIN-T3FPCJLTUH1",[[1,5538," # 给文字的color设置渐变"]],[5538,5538],[5554,5554]]],[1586224598452,["Administrator@WIN-T3FPCJLTUH1",[[-1,5539,"# "]],[5541,5541],[5539,5539]]],[1586224601328,["Administrator@WIN-T3FPCJLTUH1",[[1,5552,"?"]],[5552,5552],[5553,5553]]],[1586224602373,["Administrator@WIN-T3FPCJLTUH1",[[-1,5552,"?"]],[5553,5553],[5552,5552]]],[1586224602874,["Administrator@WIN-T3FPCJLTUH1",[[1,5552,"？"]],[5552,5552],[5553,5553]]],[1586224606339,["Administrator@WIN-T3FPCJLTUH1",[[1,5566,"\n"]],[5553,5553],[5554,5554]]],[1586224667694,["Administrator@WIN-T3FPCJLTUH1",[[1,5567,"\n"]],[5553,5553],[5554,5554]]],[1586224695664,["Administrator@WIN-T3FPCJLTUH1",[[1,5554,"[案例](https://codepen.io/klain97710/pen/MWwNryE)"]],[5554,5554],[5601,5601]]],[1586224735611,["Administrator@WIN-T3FPCJLTUH1",[[1,5554,"\n"]],[5553,5553],[5554,5554]]],[1586224742215,["Administrator@WIN-T3FPCJLTUH1",[[1,5554,"webkit only"]],[5554,5554],[5565,5565]]],[1586224748169,["Administrator@WIN-T3FPCJLTUH1",[[1,5554,"`"]],[5554,5554],[5555,5555]]],[1586224748520,["Administrator@WIN-T3FPCJLTUH1",[[1,5566,"`"]],[5566,5566],[5567,5567]]],[1586225627918,["Administrator@WIN-T3FPCJLTUH1",[[1,5629,"\n"]],[5615,5615],[5616,5616]]],[1586225628375,["Administrator@WIN-T3FPCJLTUH1",[[1,5630,"\n"]],[5616,5616],[5617,5617]]],[1586225630462,["Administrator@WIN-T3FPCJLTUH1",[[1,5617,"### []"]],[5617,5617],[5623,5623]]],[1586225631474,["Administrator@WIN-T3FPCJLTUH1",[[1,5622,"js"]],[5622,5622],[5624,5624]]],[1586225632797,["Administrator@WIN-T3FPCJLTUH1",[[1,5626," "]],[5626,5626],[5627,5627]]],[1586225633493,["Administrator@WIN-T3FPCJLTUH1",[[-1,5626," "]],[5627,5627],[5626,5626]]],[1586225633810,["Administrator@WIN-T3FPCJLTUH1",[[-1,5638,"\n"]],[5626,5626],[5625,5625]]],[1586225634096,["Administrator@WIN-T3FPCJLTUH1",[[1,5625," "]],[5625,5625],[5626,5626]]],[1586225852252,["Administrator@WIN-T3FPCJLTUH1",[[1,5626,"# 切换标签窗口后js定时器自动停止了，如何在激活标签后又继续呢"]],[5626,5626],[5658,5658]]],[1586225854269,["Administrator@WIN-T3FPCJLTUH1",[[-1,5626,"# "]],[5628,5628],[5626,5626]]],[1586225857050,["Administrator@WIN-T3FPCJLTUH1",[[1,5656,"?"]],[5656,5656],[5657,5657]]],[1586225858109,["Administrator@WIN-T3FPCJLTUH1",[[-1,5656,"?"]],[5657,5657],[5656,5656]]],[1586225858841,["Administrator@WIN-T3FPCJLTUH1",[[1,5656,"？"]],[5656,5656],[5657,5657]]],[1586225859780,["Administrator@WIN-T3FPCJLTUH1",[[1,5670,"\n"]],[5657,5657],[5658,5658]]],[1586225868962,["Administrator@WIN-T3FPCJLTUH1",[[1,5658,"想法1："]],[5658,5658],[5662,5662]]],[1586225995361,["Administrator@WIN-T3FPCJLTUH1",[[1,5662,"监听页面"]],[5662,5662],[5666,5666]]],[1586226008900,["Administrator@WIN-T3FPCJLTUH1",[[1,5666,"``"]],[5666,5666],[5668,5668]]],[1586226018400,["Administrator@WIN-T3FPCJLTUH1",[[1,5667,"visibilitychange"]],[5667,5667],[5683,5683]]],[1586226021833,["Administrator@WIN-T3FPCJLTUH1",[[1,5684,"事件"]],[5684,5684],[5686,5686]]],[1586226022907,["Administrator@WIN-T3FPCJLTUH1",[[1,5699,"\n"]],[5686,5686],[5687,5687]]],[1586226031106,["Administrator@WIN-T3FPCJLTUH1",[[1,5687,"想法2：webworker"]],[5687,5687],[5700,5700]]],[1586226034172,["Administrator@WIN-T3FPCJLTUH1",[[1,5691,"`"]],[5691,5691],[5692,5692]]],[1586226034615,["Administrator@WIN-T3FPCJLTUH1",[[1,5701,"`"]],[5701,5701],[5702,5702]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["7abd68ba-cd72-42e8-a972-14e963814cd9",1586308321019,"# 积跬步\n\n## 2020.03.23\n\n### [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n\n### [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n### [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n### [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n### [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n### [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n### [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n### [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n### [js] [call、apply、bind的用法？](https://www.cnblogs.com/moqiutao/p/7371988.html)\n替换函数运行时的上下文，即`this`指向。\n`call`和`apply`都是在当前调用时临时替换一次，并立即执行函数；\n`bind`则会返回一个内部`this`被替换为指定对象的新函数。\n`call`和`apply`的区别在于`call`需要按顺序传形参，如`Arrray.prototype.slice.call(this, 1, 2)`，`apply`支持除了`this`外，剩余参数是一个数组，如`Arrray.prototype.slice.apply(this, [1, 2])`。\n\n## 2020.03.27\n\n### [js] 在axios中怎样添加授权验证？\n\n[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n\n```javascript\nimport axios from 'axios';\nimport router from './router';\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'https://api.github.com';\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = localStorage.token; //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;\n```\n\n### [js] 如何给localStorage存储的数据设置过期时间？\n\n### [js] 什么是UUID？它有什么作用？用js写一个生成UUID的方法？\nUUID（Universally Unique Identifier, 通用唯一识别码，也叫GUID（Globally Unique IDentifier，全局唯一识别码）。在互联网工程任务组发布的[RFC4122](https://tools.ietf.org/html/rfc4122)文档中介绍，UUID是一种不需要中央机构分配而产生唯一标识符的方式在时间和空间上保持其唯一性。UUID是由128位的二进制数据组成，通常使用32位的十六进制数据表示，并使用连字符连接。其表示格式为8-4-4-4-12。例如：\n\n```\n7e6eeeef-5271-545e-bcd5-eacf6a804e2b\nxxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n```\n\nM中使用4位来表示UUID的版本，N中使用1-3位表示不同的变体。\n项目中用到的写法：\n```javascript\nfunction GET_UUID () {\n  var s = []\n  var hexDigits = '0123456789abcdef'\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n  }\n  s[14] = '4' // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1) // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = '-'\n  var uuid = s.join('')\n  return uuid\n}\n```\n  \n\n\n## 2020.04.02\n\n### [js] 生成1-10000的数组？\n```javascript\nconsole.time();\n// 1.最快的方法：创建数组，填充内容，修改内容\nnew Array(10000).fill(0).map((o,i)=>i+1);\n// 2.使用Array.apply()初始化，修改内容\nArray.apply(null,{length:10000}).map((item,index)=>index+1)\n// 3.for循环\nfor(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}\nconsole.timeEnd()\n// 4.使用Array.from()把一个iterator数据或类数组对象转换成真正的数组，修改内容\nArray.from(new Array(10001).keys()).slice(1);\nArray.from({ length: 10000 }, (_, i) => i+1);\n// 5.使用Generator\n[...function*(i = 1){\n  while(i <= 10000) yield i++;\n}()]\n```\n\n### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。\n\n## 2020.04.07\n\n### [html] 禁止移动端页面缩放？\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1,user-scalable=0\">\n```\n\n### [css] 给文字的color设置渐变？\n`webkit only`\n[案例](https://codepen.io/klain97710/pen/MWwNryE)\n\n### [js] 切换标签窗口后js定时器自动停止了，如何在激活标签后又继续呢？\n想法1：监听页面`visibilitychange`事件\n想法2：`webworker`\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1586308261124,["Administrator@WIN-T3FPCJLTUH1",[[1,5702,"4"]],[5702,5702],[5703,5703]]],[1586308263403,["Administrator@WIN-T3FPCJLTUH1",[[-1,5702,"4"]],[5703,5703],[5702,5702]]],[1586308268279,["Administrator@WIN-T3FPCJLTUH1",[[1,5715,"\n"]],[5702,5702],[5703,5703]]],[1586308269189,["Administrator@WIN-T3FPCJLTUH1",[[1,5716,"\n"]],[5703,5703],[5704,5704]]],[1586308275548,["Administrator@WIN-T3FPCJLTUH1",[[1,5704,"## 2020.04.08"]],[5704,5704],[5717,5717]]],[1586308276294,["Administrator@WIN-T3FPCJLTUH1",[[1,5730,"\n"]],[5717,5717],[5718,5718]]],[1586308277039,["Administrator@WIN-T3FPCJLTUH1",[[1,5731,"\n"]],[5718,5718],[5719,5719]]],[1586308278934,["Administrator@WIN-T3FPCJLTUH1",[[1,5719,"### "]],[5719,5719],[5723,5723]]],[1586308981569,["Administrator@WIN-T3FPCJLTUH1",[[1,5723,"# 看下面代码，判断a和b的类型是否为true？为什么？什么是基本包装类型？"]],[5723,5723],[5761,5761]]],[1586308983157,["Administrator@WIN-T3FPCJLTUH1",[[-1,5723,"# "]],[5725,5725],[5723,5723]]],[1586308993808,["Administrator@WIN-T3FPCJLTUH1",[[1,5772,"\n"]],[5759,5759],[5760,5760]]],[1586308995143,["Administrator@WIN-T3FPCJLTUH1",[[1,5760,"1"]],[5760,5760],[5761,5761]]],[1586308995911,["Administrator@WIN-T3FPCJLTUH1",[[-1,5760,"1"]],[5761,5761],[5760,5760]]],[1586308996517,["Administrator@WIN-T3FPCJLTUH1",[[1,5760,"```"]],[5760,5760],[5763,5763]]],[1586308996556,["Administrator@WIN-T3FPCJLTUH1",[[1,5763,"language\n```\n"]],[5763,5763],[5763,5771]]],[1586308998721,["Administrator@WIN-T3FPCJLTUH1",[[-1,5763,"language"],[1,5771,"javasc"]],[5763,5771],[5769,5769]]],[1586309000362,["Administrator@WIN-T3FPCJLTUH1",[[1,5769,"ript"]],[5769,5769],[5773,5773]]],[1586309000672,["Administrator@WIN-T3FPCJLTUH1",[[1,5774,"\n"]],[5773,5773],[5774,5774]]],[1586309005229,["Administrator@WIN-T3FPCJLTUH1",[[1,5774,"var a=1;\nvar b = new Number(1);\ntypeof(a)===typeof(b);"]],[5774,5774],[5828,5828]]],[1586309025739,["Administrator@WIN-T3FPCJLTUH1",[[1,5833,"先说结果，输出是false；\na是基本数据类型number，b是通过new 操作符创建的引用类型实例，所以typeof(b) 是object，因而结果为false。\n基本包装类型是ECMAScript为了便于操作基本类型值提供的三种特殊的引用类型（function）,包括：Number、String、Boolean"]],[5833,5833],[5991,5991]]],[1586309035778,["Administrator@WIN-T3FPCJLTUH1",[[-1,5870," "]],[5870,5871],[5870,5870]]],[1586309039177,["Administrator@WIN-T3FPCJLTUH1",[[1,5841,"`"],[1,5846,"`"]],[5841,5846],[5841,5848]]],[1586309040656,["Administrator@WIN-T3FPCJLTUH1",[[1,5858,"`"],[1,5864,"`"]],[5858,5864],[5858,5866]]],[1586309041875,["Administrator@WIN-T3FPCJLTUH1",[[1,5871,"`"],[1,5874,"`"]],[5871,5874],[5871,5876]]],[1586309049802,["Administrator@WIN-T3FPCJLTUH1",[[1,5891,"`"],[1,5900,"`"]],[5891,5900],[5891,5902]]],[1586309050994,["Administrator@WIN-T3FPCJLTUH1",[[1,5904,"`"],[1,5910,"`"]],[5904,5910],[5904,5912]]],[1586309051851,["Administrator@WIN-T3FPCJLTUH1",[[1,5918,"`"],[1,5923,"`"]],[5918,5923],[5918,5925]]],[1586309052917,["Administrator@WIN-T3FPCJLTUH1",[[1,5981,"`"],[1,5987,"`"]],[5981,5987],[5981,5989]]],[1586309053577,["Administrator@WIN-T3FPCJLTUH1",[[1,5990,"`"],[1,5996,"`"]],[5990,5996],[5990,5998]]],[1586309054710,["Administrator@WIN-T3FPCJLTUH1",[[1,5999,"`"],[1,6006,"`"]],[5999,6006],[5999,6008]]],[1586309055786,["Administrator@WIN-T3FPCJLTUH1",[[1,5934,"`"],[1,5944,"`"]],[5934,5944],[5934,5946]]],[1586309056767,["Administrator@WIN-T3FPCJLTUH1",[[1,5970,"`"],[1,5978,"`"]],[5970,5978],[5970,5980]]],[1586309559272,["Administrator@WIN-T3FPCJLTUH1",[[1,5723,"[jd]"]],[5723,5723],[5727,5727]]],[1586309560075,["Administrator@WIN-T3FPCJLTUH1",[[-1,5725,"d]"]],[5727,5727],[5725,5725]]],[1586309562122,["Administrator@WIN-T3FPCJLTUH1",[[1,5725,"s] "]],[5725,5725],[5728,5728]]],[1586309569922,["Administrator@WIN-T3FPCJLTUH1",[[1,6030,"\n"]],[6017,6017],[6018,6018]]],[1586309570103,["Administrator@WIN-T3FPCJLTUH1",[[1,6031,"\n"]],[6018,6018],[6019,6019]]],[1586309572125,["Administrator@WIN-T3FPCJLTUH1",[[1,6019,"### []"]],[6019,6019],[6025,6025]]],[1586309572907,["Administrator@WIN-T3FPCJLTUH1",[[1,6024,"js"]],[6024,6024],[6026,6026]]],[1586309573655,["Administrator@WIN-T3FPCJLTUH1",[[1,6027," "]],[6027,6027],[6028,6028]]],[1586309584369,["Administrator@WIN-T3FPCJLTUH1",[[1,6029,"参考"]],[6029,6029],[6031,6031]]],[1586309591021,["Administrator@WIN-T3FPCJLTUH1",[[1,6029,"["],[1,6031,"](https://blog.csdn.net/weixin_42334281/article/details/102533325)"]],[6029,6031],[6098,6098]]],[1586309608013,["Administrator@WIN-T3FPCJLTUH1",[[1,6028,"# W3C的事件处理和IE的事件处理有哪些区别？"]],[6028,6028],[6052,6052]]],[1586309609976,["Administrator@WIN-T3FPCJLTUH1",[[-1,6028,"# "]],[6030,6030],[6028,6028]]],[1586309620622,["Administrator@WIN-T3FPCJLTUH1",[[1,6051,"\n"]],[6050,6050],[6051,6051]]],[1586309620950,["Administrator@WIN-T3FPCJLTUH1",[[1,6051,"*   绑定事件 W3C addEventListener ;IE attachEvent\n*   移除事件 W3c removeEventListner;IE detachEvent\n*   阻止默认事件 W3C e.preventDefault; IE window.event.returnValue = false\n*   阻止事件传播 W3C e.stopPropagation; IE winow.event.cancelBuble = true"]],[6051,6051],[6280,6280]]],[1586311403775,["Administrator@WIN-T3FPCJLTUH1",[[1,6362,"\n"]],[6350,6350],[6351,6351]]],[1586311405653,["Administrator@WIN-T3FPCJLTUH1",[[1,6363,"\n"]],[6351,6351],[6352,6352]]],[1586311407791,["Administrator@WIN-T3FPCJLTUH1",[[1,6352,"### 【】"]],[6352,6352],[6358,6358]]],[1586311408950,["Administrator@WIN-T3FPCJLTUH1",[[-1,6356,"【】"]],[6358,6358],[6356,6356]]],[1586311409392,["Administrator@WIN-T3FPCJLTUH1",[[1,6356,"[]"]],[6356,6356],[6358,6358]]],[1586311410293,["Administrator@WIN-T3FPCJLTUH1",[[1,6357,"css"]],[6357,6357],[6360,6360]]],[1586311410937,["Administrator@WIN-T3FPCJLTUH1",[[1,6361," "]],[6361,6361],[6362,6362]]],[1586311836135,["Administrator@WIN-T3FPCJLTUH1",[[-1,6357,"css"],[1,6360,"h"]],[6357,6360],[6358,6358]]],[1586311836633,["Administrator@WIN-T3FPCJLTUH1",[[1,6358,"tml"]],[6358,6358],[6361,6361]]],[1586311842092,["Administrator@WIN-T3FPCJLTUH1",[[-1,6352,"### [html] "]],[6352,6363],[6352,6352]]],[1586311844876,["Administrator@WIN-T3FPCJLTUH1",[[1,5719,"\n"]],[5718,5718],[5719,5719]]],[1586311845128,["Administrator@WIN-T3FPCJLTUH1",[[1,5719,"### [html] "]],[5719,5719],[5730,5730]]],[1586311846463,["Administrator@WIN-T3FPCJLTUH1",[[1,5731,"\n"]],[5730,5730],[5731,5731]]],[1586311866793,["Administrator@WIN-T3FPCJLTUH1",[[1,5730,"3像素Bug指的是什么吗？怎么解决呢？"]],[5730,5730],[5749,5749]]],[1586311869716,["Administrator@WIN-T3FPCJLTUH1",[[-1,5741,"吗"]],[5742,5742],[5741,5741]]],[1586311871715,["Administrator@WIN-T3FPCJLTUH1",[[-1,5746,"呢"]],[5747,5747],[5746,5746]]],[1586311874067,["Administrator@WIN-T3FPCJLTUH1",[[1,5749,"\n"]],[5747,5747],[5748,5748]]],[1586311891688,["Administrator@WIN-T3FPCJLTUH1",[[1,5748,"img标签渲染之后下方会出现几个像素（我用谷歌测试是4px, 火狐3.5px）的空白；\nimg是行内元素，默认display：inline; 它与文本的默认行为类似，下边缘是与基线对齐，而不是贴紧容器下边缘，所以会有几像素的空白；\n解决办法：\n\n1.  把img设置为display: block;\n2.  给img和其父元素都设置vertical-align: top；让其top对齐而不是baseline对齐；\n3.  给img父元素设置line-height: 0;"]],[5748,5748],[5984,5984]]],[1586311897351,["Administrator@WIN-T3FPCJLTUH1",[[-1,5870,"\n"]],[5870,5870],[5869,5869]]],[1586311904601,["Administrator@WIN-T3FPCJLTUH1",[[1,5803,"`"],[1,5817,"`"]],[5803,5817],[5803,5819]]],[1586311909459,["Administrator@WIN-T3FPCJLTUH1",[[1,5883,"`"],[1,5897,"`"]],[5883,5897],[5883,5899]]],[1586311918725,["Administrator@WIN-T3FPCJLTUH1",[[1,5958,"huo"]],[5958,5958],[5961,5961]]],[1586311919400,["Administrator@WIN-T3FPCJLTUH1",[[-1,5958,"huo"]],[5961,5961],[5958,5958]]],[1586311925185,["Administrator@WIN-T3FPCJLTUH1",[[1,5958,"或者给img设置"]],[5958,5958],[5966,5966]]],[1586311933080,["Administrator@WIN-T3FPCJLTUH1",[[1,5917,"`"],[1,5936,"`"]],[5917,5936],[5917,5938]]],[1586311935116,["Administrator@WIN-T3FPCJLTUH1",[[1,5968,"`vertical-align: top`"]],[5968,5968],[5989,5989]]],[1586311937766,["Administrator@WIN-T3FPCJLTUH1",[[-1,5985,"top"],[1,5988,"m"]],[5985,5988],[5986,5986]]],[1586311938516,["Administrator@WIN-T3FPCJLTUH1",[[1,5986,"iddle"]],[5986,5986],[5991,5991]]],[1586311940686,["Administrator@WIN-T3FPCJLTUH1",[[1,5992,";"]],[5992,5992],[5993,5993]]],[1586311947658,["Administrator@WIN-T3FPCJLTUH1",[[-1,5992,";"],[1,5993,"；"]],[5992,5992],[5993,5993]]],[1586311958067,["Administrator@WIN-T3FPCJLTUH1",[[1,6007,"`"],[1,6021,"`"]],[6007,6021],[6007,6023]]],[1586311972342,["Administrator@WIN-T3FPCJLTUH1",[[1,6659,"### "]],[6659,6659],[6663,6663]]],[1586312430817,["Administrator@WIN-T3FPCJLTUH1",[[1,6663,"DOM0、DOM2、DOM3事件处理方式的区别是什么？"]],[6663,6663],[6690,6690]]],[1586312432881,["Administrator@WIN-T3FPCJLTUH1",[[1,6702,"\n"]],[6690,6690],[6691,6691]]],[1586312439917,["Administrator@WIN-T3FPCJLTUH1",[[1,6691,"1.DOM0级事件处理方式：\n      btn.onclick = func;\n      btn.onclick = null;\n   2.DOM2级事件处理方式：\n      btn.addEventListener('click', func, false);\n      btn.removeEventListener('click', func, false);\n      btn.attachEvent(\"onclick\", func);//IE\n      btn.detachEvent(\"onclick\", func);//IE\n   3.DOM3级事件处理方式：\n      eventUtil.addListener(input, \"textInput\", func);\n      eventUtil 是自定义对象，textInput 是DOM3级事件"]],[6691,6691],[7081,7081]]],[1586314263154,["Administrator@WIN-T3FPCJLTUH1",[[1,7082,"[参考](https://blog.csdn.net/judyge/article/details/51898124)"]],[7082,7082],[7141,7141]]],[1586314271665,["Administrator@WIN-T3FPCJLTUH1",[[-1,6759,"  "],[-1,6776,"  "],[-1,6827,"  "],[-1,6879,"  "],[-1,6924,"  "],[-1,6967,"  "],[-1,6986,"  "],[-1,7040,"  "]],[6761,7081],[6759,7065]]],[1586332704670,["Administrator@WIN-T3FPCJLTUH1",[[1,219,"参考"],[-1,6709,"   "],[1,6712,"   "],[-1,6735,"   "],[1,6738,"   "],[-1,6775,"   "],[1,6778,"   "],[-1,6823,"   "],[1,6826,"   "],[-1,6874,"   "],[1,6877,"   "],[-1,6916,"   "],[1,6919,"   "],[-1,6974,"   "],[1,6977,"   "],[-1,7027,"   "],[1,7030,"   "]],[219,219],[221,221]]],[1586332706273,["Administrator@WIN-T3FPCJLTUH1",[[1,222,"\n"]],[221,221],[222,222]]],[1586332711588,["Administrator@WIN-T3FPCJLTUH1",[[1,219,"["],[1,221,"](https://www.cnblogs.com/LisenH/p/11635919.html)"]],[219,221],[271,271]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["7d329548-78e2-4d02-923e-5d38938fea62",1586393911819,"# 积跬步\n\n## 2020.03.23\n\n### [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n[参考](https://www.cnblogs.com/LisenH/p/11635919.html)\n\n### [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n### [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n### [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n### [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n### [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n### [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n### [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n### [js] [call、apply、bind的用法？](https://www.cnblogs.com/moqiutao/p/7371988.html)\n替换函数运行时的上下文，即`this`指向。\n`call`和`apply`都是在当前调用时临时替换一次，并立即执行函数；\n`bind`则会返回一个内部`this`被替换为指定对象的新函数。\n`call`和`apply`的区别在于`call`需要按顺序传形参，如`Arrray.prototype.slice.call(this, 1, 2)`，`apply`支持除了`this`外，剩余参数是一个数组，如`Arrray.prototype.slice.apply(this, [1, 2])`。\n\n## 2020.03.27\n\n### [js] 在axios中怎样添加授权验证？\n\n[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n\n```javascript\nimport axios from 'axios';\nimport router from './router';\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'https://api.github.com';\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = localStorage.token; //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;\n```\n\n### [js] 如何给localStorage存储的数据设置过期时间？\n\n### [js] 什么是UUID？它有什么作用？用js写一个生成UUID的方法？\nUUID（Universally Unique Identifier, 通用唯一识别码，也叫GUID（Globally Unique IDentifier，全局唯一识别码）。在互联网工程任务组发布的[RFC4122](https://tools.ietf.org/html/rfc4122)文档中介绍，UUID是一种不需要中央机构分配而产生唯一标识符的方式在时间和空间上保持其唯一性。UUID是由128位的二进制数据组成，通常使用32位的十六进制数据表示，并使用连字符连接。其表示格式为8-4-4-4-12。例如：\n\n```\n7e6eeeef-5271-545e-bcd5-eacf6a804e2b\nxxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n```\n\nM中使用4位来表示UUID的版本，N中使用1-3位表示不同的变体。\n项目中用到的写法：\n```javascript\nfunction GET_UUID () {\n  var s = []\n  var hexDigits = '0123456789abcdef'\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n  }\n  s[14] = '4' // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1) // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = '-'\n  var uuid = s.join('')\n  return uuid\n}\n```\n  \n\n\n## 2020.04.02\n\n### [js] 生成1-10000的数组？\n```javascript\nconsole.time();\n// 1.最快的方法：创建数组，填充内容，修改内容\nnew Array(10000).fill(0).map((o,i)=>i+1);\n// 2.使用Array.apply()初始化，修改内容\nArray.apply(null,{length:10000}).map((item,index)=>index+1)\n// 3.for循环\nfor(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}\nconsole.timeEnd()\n// 4.使用Array.from()把一个iterator数据或类数组对象转换成真正的数组，修改内容\nArray.from(new Array(10001).keys()).slice(1);\nArray.from({ length: 10000 }, (_, i) => i+1);\n// 5.使用Generator\n[...function*(i = 1){\n  while(i <= 10000) yield i++;\n}()]\n```\n\n### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。\n\n## 2020.04.07\n\n### [html] 禁止移动端页面缩放？\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1,user-scalable=0\">\n```\n\n### [css] 给文字的color设置渐变？\n`webkit only`\n[案例](https://codepen.io/klain97710/pen/MWwNryE)\n\n### [js] 切换标签窗口后js定时器自动停止了，如何在激活标签后又继续呢？\n想法1：监听页面`visibilitychange`事件\n想法2：`webworker`\n\n## 2020.04.08\n\n### [html] 3像素Bug指的是什么？怎么解决？\nimg标签渲染之后下方会出现几个像素（我用谷歌测试是4px, 火狐3.5px）的空白；\nimg是行内元素，默认`display：inline`; 它与文本的默认行为类似，下边缘是与基线对齐，而不是贴紧容器下边缘，所以会有几像素的空白；\n解决办法：\n1.  把img设置为`display: block`;\n2.  给img和其父元素都设置`vertical-align: top`；让其top对齐而不是baseline对齐；或者给img设置`vertical-align: middle`；\n3.  给img父元素设置`line-height: 0`;\n\n### [js] 看下面代码，判断a和b的类型是否为true？为什么？什么是基本包装类型？\n```javascript\nvar a=1;\nvar b = new Number(1);\ntypeof(a)===typeof(b);\n```\n先说结果，输出是`false`；\na是基本数据类型`number`，b是通过`new`操作符创建的引用类型实例，所以`typeof(b)` 是`object`，因而结果为`false`。\n基本包装类型是`ECMAScript`为了便于操作基本类型值提供的三种特殊的引用类型（`function`）,包括：`Number`、`String`、`Boolean`\n\n### [js] W3C的事件处理和IE的事件处理有哪些区别？\n*   绑定事件 W3C addEventListener ;IE attachEvent\n*   移除事件 W3c removeEventListner;IE detachEvent\n*   阻止默认事件 W3C e.preventDefault; IE window.event.returnValue = false\n*   阻止事件传播 W3C e.stopPropagation; IE winow.event.cancelBuble = true\n[参考](https://blog.csdn.net/weixin_42334281/article/details/102533325)\n\n### DOM0、DOM2、DOM3事件处理方式的区别是什么？\n1.DOM0级事件处理方式：\n      btn.onclick = func;\n      btn.onclick = null;\n 2.DOM2级事件处理方式：\n    btn.addEventListener('click', func, false);\n    btn.removeEventListener('click', func, false);\n    btn.attachEvent(\"onclick\", func);//IE\n    btn.detachEvent(\"onclick\", func);//IE\n 3.DOM3级事件处理方式：\n    eventUtil.addListener(input, \"textInput\", func);\n    eventUtil 是自定义对象，textInput 是DOM3级事件\n[参考](https://blog.csdn.net/judyge/article/details/51898124)\n\n\n\n\n\n\n\n\n\n\n",[[1586393862197,["Administrator@WIN-T3FPCJLTUH1",[[1,7180,"### "]],[7180,7180],[7184,7184]]],[1586393867164,["Administrator@WIN-T3FPCJLTUH1",[[-1,7182,"# "]],[7184,7184],[7182,7182]]],[1586393867263,["Administrator@WIN-T3FPCJLTUH1",[[1,7182," "]],[7182,7182],[7183,7183]]],[1586393951055,["Administrator@WIN-T3FPCJLTUH1",[[1,7183,"2020.04.08"]],[7183,7183],[7193,7193]]],[1586393951752,["Administrator@WIN-T3FPCJLTUH1",[[-1,7192,"8"]],[7193,7193],[7192,7192]]],[1586393952031,["Administrator@WIN-T3FPCJLTUH1",[[1,7192,"9"]],[7192,7192],[7193,7193]]],[1586393952396,["Administrator@WIN-T3FPCJLTUH1",[[1,7202,"\n"]],[7193,7193],[7194,7194]]],[1586393953060,["Administrator@WIN-T3FPCJLTUH1",[[1,7203,"\n"]],[7194,7194],[7195,7195]]],[1586393954619,["Administrator@WIN-T3FPCJLTUH1",[[1,7195,"### "]],[7195,7195],[7199,7199]]],[1586393963378,["Administrator@WIN-T3FPCJLTUH1",[[1,6716,"[]"]],[6716,6716],[6718,6718]]],[1586393964745,["Administrator@WIN-T3FPCJLTUH1",[[1,6745,"js"]],[6745,6745],[6747,6747]]],[1586393965743,["Administrator@WIN-T3FPCJLTUH1",[[-1,6745,"js"]],[6747,6747],[6745,6745]]],[1586393967378,["Administrator@WIN-T3FPCJLTUH1",[[1,6717,"js"]],[6717,6717],[6719,6719]]],[1586393968122,["Administrator@WIN-T3FPCJLTUH1",[[1,6720," "]],[6720,6720],[6721,6721]]],[1586393970709,["Administrator@WIN-T3FPCJLTUH1",[[1,7205,"]"]],[7205,7205],[7206,7206]]],[1586393972068,["Administrator@WIN-T3FPCJLTUH1",[[1,7205,"html"]],[7205,7205],[7209,7209]]],[1586393982210,["Administrator@WIN-T3FPCJLTUH1",[[1,7210," 内联元素可以设置宽高吗？"]],[7210,7210],[7223,7223]]],[1586393988294,["Administrator@WIN-T3FPCJLTUH1",[[1,7217,"可以"]],[7215,7217],[7217,7217]]],[1586393990598,["Administrator@WIN-T3FPCJLTUH1",[[-1,7217,"可以"]],[7217,7217],[7215,7217]]],[1586393991597,["Administrator@WIN-T3FPCJLTUH1",[[-1,7215,"可以"]],[7215,7217],[7215,7215]]],[1586393994382,["Administrator@WIN-T3FPCJLTUH1",[[1,7211,"可以给"]],[7211,7211],[7214,7214]]],[1586394150581,[null,[[-1,7204,"\n"],[1,7205,"["],[1,7224,"\n"]],[7204,7204],[7225,7225]]],[1586394150581,[null,[[1,7204,"\n"],[-1,7204,"["],[-1,7224,"\n"]],[7225,7225],[7204,7204]]],[1586394117132,["Administrator@WIN-T3FPCJLTUH1",[[1,7224,"为什么？"]],[7224,7224],[7228,7228]]],[1586394117387,["Administrator@WIN-T3FPCJLTUH1",[[1,7237,"\n"]],[7228,7228],[7229,7229]]],[1586394210582,[null,[[-1,7204,"\n"],[1,7205,"["],[1,7228,"\n"]],[7204,7204],[7229,7229]]],[1586394210582,[null,[[1,7204,"\n"],[-1,7204,"["],[-1,7228,"\n"]],[7229,7229],[7204,7204]]],[1586394163930,["Administrator@WIN-T3FPCJLTUH1",[[1,7229," 1.正常情况下不能设置宽高(可替换内容元素除外例如img)\n   2.元素被浮动，绝对定位，固定定位后，可以设置宽高\n   3.display:block,display:inline-block等后可以设置宽高\n   4.内联元素的宽高是由其内容决定的，并且在一行显示（可以换行），呈现包裹性,因此设置宽高无效。"]],[7229,7229],[7387,7387]]],[1586394172149,["Administrator@WIN-T3FPCJLTUH1",[[1,6751," "]],[6751,6751],[6752,6752]]],[1586394173674,["Administrator@WIN-T3FPCJLTUH1",[[1,6820," "]],[6820,6820],[6821,6821]]],[1586394174398,["Administrator@WIN-T3FPCJLTUH1",[[1,7020," "]],[7020,7020],[7021,7021]]],[1586394176856,["Administrator@WIN-T3FPCJLTUH1",[[-1,6817," "]],[6818,6818],[6817,6817]]],[1586394178748,["Administrator@WIN-T3FPCJLTUH1",[[-1,7016," "]],[7017,7017],[7016,7016]]],[1586394183236,["Administrator@WIN-T3FPCJLTUH1",[[-1,6769,"  "]],[6771,6771],[6769,6769]]],[1586394184298,["Administrator@WIN-T3FPCJLTUH1",[[-1,6793,"  "]],[6795,6795],[6793,6793]]],[1586394190698,["Administrator@WIN-T3FPCJLTUH1",[[-1,7258,"  "]],[7260,7260],[7258,7258]]],[1586394191459,["Administrator@WIN-T3FPCJLTUH1",[[-1,7285,"  "]],[7287,7287],[7285,7285]]],[1586394192148,["Administrator@WIN-T3FPCJLTUH1",[[-1,7331,"  "]],[7333,7333],[7331,7331]]],[1586394193433,["Administrator@WIN-T3FPCJLTUH1",[[1,7229," "]],[7229,7229],[7230,7230]]],[1586394194097,["Administrator@WIN-T3FPCJLTUH1",[[1,7261," "]],[7261,7261],[7262,7262]]],[1586394195632,["Administrator@WIN-T3FPCJLTUH1",[[1,7288," "]],[7288,7288],[7289,7289]]],[1586394196628,["Administrator@WIN-T3FPCJLTUH1",[[-1,7288," "]],[7289,7289],[7288,7288]]],[1586394197187,["Administrator@WIN-T3FPCJLTUH1",[[1,7289," "]],[7289,7289],[7290,7290]]],[1586394198460,["Administrator@WIN-T3FPCJLTUH1",[[1,7336," "]],[7336,7336],[7337,7337]]],[1586394204365,["Administrator@WIN-T3FPCJLTUH1",[[1,7256,"、"]],[7256,7256],[7257,7257]]],[1586394270629,[null,[[-1,7201,"\n"],[1,7202,"["],[1,7383,"\n"]],[7201,7201],[7384,7384]]],[1586394270629,[null,[[1,7201,"\n"],[-1,7201,"["],[-1,7383,"\n"]],[7384,7384],[7201,7201]]],[1586394223459,["Administrator@WIN-T3FPCJLTUH1",[[1,7257,"input\\textarea"]],[7257,7257],[7271,7271]]],[1586394225856,["Administrator@WIN-T3FPCJLTUH1",[[-1,7262,"\\"]],[7263,7263],[7262,7262]]],[1586394226277,["Administrator@WIN-T3FPCJLTUH1",[[1,7262,"、"]],[7262,7262],[7263,7263]]],[1586394246315,["Administrator@WIN-T3FPCJLTUH1",[[1,7305,"`"],[1,7339,"`"]],[7305,7339],[7305,7341]]],[1586394260780,["Administrator@WIN-T3FPCJLTUH1",[[-1,7398,"。"]],[7399,7399],[7398,7398]]],[1586394261445,["Administrator@WIN-T3FPCJLTUH1",[[1,7399," 5. \n"]],[7398,7398],[7403,7403]]],[1586394261967,["Administrator@WIN-T3FPCJLTUH1",[[-1,7399," 5. "]],[7403,7403],[7400,7400]]],[1586394265678,["Administrator@WIN-T3FPCJLTUH1",[[1,7400,"### []"]],[7400,7400],[7406,7406]]],[1586394268264,["Administrator@WIN-T3FPCJLTUH1",[[1,7405,"css"]],[7405,7405],[7408,7408]]],[1586394268888,["Administrator@WIN-T3FPCJLTUH1",[[1,7409," "]],[7409,7409],[7410,7410]]],[1586394330608,[null,[[-1,7201,"\n"],[1,7202,"["],[1,7410,"\n"]],[7201,7201],[7411,7411]]],[1586394330608,[null,[[1,7201,"\n"],[-1,7201,"["],[-1,7410,"\n"]],[7411,7411],[7201,7201]]],[1586394277638,["Administrator@WIN-T3FPCJLTUH1",[[1,7410,"# 如何解决IE6浮动时产生双倍边距的BUG？"]],[7410,7410],[7433,7433]]],[1586394280236,["Administrator@WIN-T3FPCJLTUH1",[[-1,7410,"# "]],[7411,7411],[7409,7409]]],[1586394289907,["Administrator@WIN-T3FPCJLTUH1",[[1,7432," 1.当块级元素有浮动样式的时候，给元素添加margin-left和margin-right样式，在ie6下就会出现双倍边距\n 2.给当前元素添加样式，使当前元素不为块，如：display:inline;display:list-item 这样在元素浮动的时候就不会在ie6下面产生双倍边距的问题了"]],[7432,7432],[7581,7581]]],[1586394292182,["Administrator@WIN-T3FPCJLTUH1",[[-1,7432," "]],[7433,7433],[7432,7432]]],[1586394293033,["Administrator@WIN-T3FPCJLTUH1",[[-1,7494," "]],[7495,7495],[7494,7494]]],[1586394294070,["Administrator@WIN-T3FPCJLTUH1",[[1,7434," "]],[7434,7434],[7435,7435]]],[1586394294907,["Administrator@WIN-T3FPCJLTUH1",[[1,7497," "]],[7497,7497],[7498,7498]]],[1586394304226,["Administrator@WIN-T3FPCJLTUH1",[[1,7454,"`"],[1,7465,"`"]],[7454,7465],[7454,7467]]],[1586394307094,["Administrator@WIN-T3FPCJLTUH1",[[1,7468,"`"],[1,7480,"`"]],[7468,7480],[7468,7482]]],[1586394316050,["Administrator@WIN-T3FPCJLTUH1",[[1,7523,"`"],[1,7555,"`"]],[7523,7555],[7523,7557]]],[1586394318494,["Administrator@WIN-T3FPCJLTUH1",[[-1,7557," "]],[7558,7558],[7557,7557]]],[1586394320114,["Administrator@WIN-T3FPCJLTUH1",[[-1,7522,"："]],[7523,7523],[7522,7522]]],[1586394321759,["Administrator@WIN-T3FPCJLTUH1",[[1,7522,"："]],[7522,7522],[7523,7523]]],[1586394328008,["Administrator@WIN-T3FPCJLTUH1",[[1,7588,"### []"]],[7588,7588],[7594,7594]]],[1586394930622,[null,[[-1,7201,"\n"],[1,7202,"["],[1,7594,"\n"]],[7201,7201],[7595,7595]]],[1586394930622,[null,[[1,7201,"\n"],[-1,7201,"["],[-1,7594,"\n"]],[7595,7595],[7201,7201]]],[1586394881266,["Administrator@WIN-T3FPCJLTUH1",[[1,7593,"js"]],[7593,7593],[7595,7595]]],[1586394884984,["Administrator@WIN-T3FPCJLTUH1",[[1,7596," paseInt"]],[7596,7596],[7604,7604]]],[1586394887686,["Administrator@WIN-T3FPCJLTUH1",[[1,7598,"r"]],[7598,7598],[7599,7599]]],[1586394888686,["Administrator@WIN-T3FPCJLTUH1",[[-1,7598,"r"]],[7599,7599],[7598,7598]]],[1586394889323,["Administrator@WIN-T3FPCJLTUH1",[[1,7599,"r"]],[7599,7599],[7600,7600]]],[1586394901069,["Administrator@WIN-T3FPCJLTUH1",[[1,7605,"与Number()"]],[7605,7605],[7614,7614]]],[1586394904033,["Administrator@WIN-T3FPCJLTUH1",[[1,7605,"()"]],[7605,7605],[7607,7607]]],[1586394909757,["Administrator@WIN-T3FPCJLTUH1",[[1,7616,"的区别？"]],[7616,7616],[7620,7620]]],[1586394910234,["Administrator@WIN-T3FPCJLTUH1",[[1,7625,"\n"]],[7620,7620],[7621,7621]]],[1586394913787,["Administrator@WIN-T3FPCJLTUH1",[[1,7621,"1. "]],[7621,7621],[7624,7624]]],[1586394990623,[null,[[-1,7201,"\n"],[1,7202,"["],[1,7624,"\n"]],[7201,7201],[7625,7625]]],[1586394990623,[null,[[1,7201,"\n"],[-1,7201,"["],[-1,7624,"\n"]],[7625,7625],[7201,7201]]],[1586394988086,["Administrator@WIN-T3FPCJLTUH1",[[1,7624,"；"]],[7624,7624],[7625,7625]]],[1586394988505,["Administrator@WIN-T3FPCJLTUH1",[[-1,7624,"；"]],[7625,7625],[7624,7624]]],[1586395050623,[null,[[-1,7201,"\n"],[1,7202,"["],[1,7624,"\n"]],[7201,7201],[7625,7625]]],[1586395050623,[null,[[1,7201,"\n"],[-1,7201,"["],[-1,7624,"\n"]],[7625,7625],[7201,7201]]],[1586394992225,["Administrator@WIN-T3FPCJLTUH1",[[1,7624,"类型不同"]],[7624,7624],[7628,7628]]],[1586394994158,["Administrator@WIN-T3FPCJLTUH1",[[1,7629,"2. \n"]],[7628,7628],[7632,7632]]],[1586394997392,["Administrator@WIN-T3FPCJLTUH1",[[-1,7629,"2. "]],[7632,7632],[7629,7629]]],[1586394997815,["Administrator@WIN-T3FPCJLTUH1",[[-1,7633,"\n"]],[7629,7629],[7628,7628]]],[1586394998128,["Administrator@WIN-T3FPCJLTUH1",[[1,7629,"2. \n"]],[7628,7628],[7632,7632]]],[1586394998506,["Administrator@WIN-T3FPCJLTUH1",[[-1,7629,"2. "]],[7632,7632],[7630,7630]]],[1586394999359,["Administrator@WIN-T3FPCJLTUH1",[[-1,7633,"\n"]],[7630,7630],[7629,7629]]],[1586394999772,["Administrator@WIN-T3FPCJLTUH1",[[-1,7632,"\n"]],[7629,7629],[7628,7628]]],[1586395002459,["Administrator@WIN-T3FPCJLTUH1",[[1,7628,"："]],[7628,7628],[7629,7629]]],[1586395003175,["Administrator@WIN-T3FPCJLTUH1",[[1,7630,"2. \n"]],[7629,7629],[7633,7633]]],[1586395005965,["Administrator@WIN-T3FPCJLTUH1",[[1,7633," "]],[7633,7633],[7634,7634]]],[1586395006400,["Administrator@WIN-T3FPCJLTUH1",[[-1,7633," "]],[7634,7634],[7633,7633]]],[1586395007482,["Administrator@WIN-T3FPCJLTUH1",[[-1,7630,"2. "]],[7633,7633],[7631,7631]]],[1586395013842,["Administrator@WIN-T3FPCJLTUH1",[[1,7630,"    发"]],[7630,7630],[7635,7635]]],[1586395019192,["Administrator@WIN-T3FPCJLTUH1",[[-1,7634,"发"]],[7635,7635],[7634,7634]]],[1586395032181,["Administrator@WIN-T3FPCJLTUH1",[[1,7634,"parseInt()是js中的全局韩式"]],[7634,7634],[7653,7653]]],[1586395033520,["Administrator@WIN-T3FPCJLTUH1",[[-1,7651,"韩式"]],[7653,7653],[7651,7651]]],[1586395034595,["Administrator@WIN-T3FPCJLTUH1",[[1,7651,"函数"]],[7651,7651],[7653,7653]]],[1586395035986,["Administrator@WIN-T3FPCJLTUH1",[[-1,7647,"中"]],[7648,7648],[7647,7647]]],[1586395039844,["Administrator@WIN-T3FPCJLTUH1",[[1,7652,"；"]],[7652,7652],[7653,7653]]],[1586395040345,["Administrator@WIN-T3FPCJLTUH1",[[1,7654,"    \n"]],[7653,7653],[7658,7658]]],[1586395046962,["Administrator@WIN-T3FPCJLTUH1",[[1,7658,"Number（）"]],[7658,7658],[7666,7666]]],[1586395048236,["Administrator@WIN-T3FPCJLTUH1",[[-1,7664,"（）"]],[7666,7666],[7664,7664]]],[1586395049207,["Administrator@WIN-T3FPCJLTUH1",[[1,7664,"()"]],[7664,7664],[7666,7666]]],[1586395110627,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395110627,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395052150,["Administrator@WIN-T3FPCJLTUH1",[[1,7666,"除了"]],[7666,7666],[7668,7668]]],[1586395065274,["Administrator@WIN-T3FPCJLTUH1",[[-1,7666,"除了"]],[7668,7668],[7666,7666]]],[1586395085565,["Administrator@WIN-T3FPCJLTUH1",[[1,7666,"还能作为基本包装类型Number的构造函数，"]],[7666,7666],[7688,7688]]],[1586395098188,["Administrator@WIN-T3FPCJLTUH1",[[-1,7687,"，"]],[7688,7688],[7687,7687]]],[1586395099298,["Administrator@WIN-T3FPCJLTUH1",[[1,7687,"。"]],[7687,7687],[7688,7688]]],[1586395104122,["Administrator@WIN-T3FPCJLTUH1",[[-1,7687,"。"]],[7688,7688],[7687,7687]]],[1586395104803,["Administrator@WIN-T3FPCJLTUH1",[[1,7687,"，"]],[7687,7687],[7688,7688]]],[1586395170627,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395170627,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395114755,["Administrator@WIN-T3FPCJLTUH1",[[1,7688,"可以喝"]],[7688,7688],[7691,7691]]],[1586395115380,["Administrator@WIN-T3FPCJLTUH1",[[-1,7690,"喝"]],[7691,7691],[7690,7690]]],[1586395128067,["Administrator@WIN-T3FPCJLTUH1",[[1,7690,"和new操作符一起创建变量。"]],[7690,7690],[7704,7704]]],[1586395131627,["Administrator@WIN-T3FPCJLTUH1",[[1,7705,"    \n"]],[7704,7704],[7709,7709]]],[1586395135170,["Administrator@WIN-T3FPCJLTUH1",[[-1,7705,"    "]],[7709,7709],[7705,7705]]],[1586395136416,["Administrator@WIN-T3FPCJLTUH1",[[1,7705,"2. "]],[7705,7705],[7708,7708]]],[1586395139798,["Administrator@WIN-T3FPCJLTUH1",[[1,7694,"    "]],[7694,7694],[7698,7698]]],[1586395152064,["Administrator@WIN-T3FPCJLTUH1",[[1,7712,"入参不同，"]],[7712,7712],[7717,7717]]],[1586395153993,["Administrator@WIN-T3FPCJLTUH1",[[-1,7716,"，"]],[7717,7717],[7716,7716]]],[1586395154742,["Administrator@WIN-T3FPCJLTUH1",[[1,7716,"："]],[7716,7716],[7717,7717]]],[1586395155147,["Administrator@WIN-T3FPCJLTUH1",[[1,7718,"3. \n"]],[7717,7717],[7721,7721]]],[1586395157507,["Administrator@WIN-T3FPCJLTUH1",[[-1,7718,"3. "]],[7721,7721],[7718,7718]]],[1586395164794,["Administrator@WIN-T3FPCJLTUH1",[[1,7718,"    parseInt()"]],[7718,7718],[7732,7732]]],[1586395230628,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395230628,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395174260,["Administrator@WIN-T3FPCJLTUH1",[[1,7731,"strin"]],[7731,7731],[7736,7736]]],[1586395175372,["Administrator@WIN-T3FPCJLTUH1",[[-1,7730,"(strin"]],[7736,7736],[7730,7730]]],[1586395184360,["Administrator@WIN-T3FPCJLTUH1",[[1,7730,"(val, radix"]],[7730,7730],[7741,7741]]],[1586395189680,["Administrator@WIN-T3FPCJLTUH1",[[1,7742,"，"]],[7742,7742],[7743,7743]]],[1586395194443,["Administrator@WIN-T3FPCJLTUH1",[[-1,7742,"，"]],[7743,7743],[7742,7742]]],[1586395195740,["Administrator@WIN-T3FPCJLTUH1",[[1,7742,";"]],[7742,7742],[7743,7743]]],[1586395199411,["Administrator@WIN-T3FPCJLTUH1",[[-1,7742,";"]],[7743,7743],[7742,7742]]],[1586395204132,["Administrator@WIN-T3FPCJLTUH1",[[1,7742,"，val是"]],[7742,7742],[7747,7747]]],[1586395207402,["Administrator@WIN-T3FPCJLTUH1",[[-1,7746,"是"]],[7747,7747],[7746,7746]]],[1586395214049,["Administrator@WIN-T3FPCJLTUH1",[[1,7746,"为string类型（）"]],[7746,7746],[7757,7757]]],[1586395217463,["Administrator@WIN-T3FPCJLTUH1",[[-1,7755,"（）"]],[7757,7757],[7755,7755]]],[1586395218134,["Administrator@WIN-T3FPCJLTUH1",[[1,7755,"()"]],[7755,7755],[7757,7757]]],[1586395219270,["Administrator@WIN-T3FPCJLTUH1",[[1,7756,"fei"]],[7756,7756],[7759,7759]]],[1586395220298,["Administrator@WIN-T3FPCJLTUH1",[[-1,7756,"fei"]],[7759,7759],[7756,7756]]],[1586395228953,["Administrator@WIN-T3FPCJLTUH1",[[1,7756,"非string自动调用"]],[7756,7756],[7767,7767]]],[1586395290631,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395290631,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395237027,["Administrator@WIN-T3FPCJLTUH1",[[1,7767,"toString方法转化"]],[7767,7767],[7779,7779]]],[1586395245868,["Administrator@WIN-T3FPCJLTUH1",[[1,7780,"，radix是"]],[7780,7780],[7787,7787]]],[1586395350632,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395350632,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395325429,["Administrator@WIN-T3FPCJLTUH1",[[-1,7712,"入参"],[1,7714,"定义和用法"]],[7712,7712],[7717,7717]]],[1586395334192,["Administrator@WIN-T3FPCJLTUH1",[[1,7721,"3. \n"]],[7720,7720],[7724,7724]]],[1586395335721,["Administrator@WIN-T3FPCJLTUH1",[[-1,7721,"3. "]],[7724,7724],[7721,7721]]],[1586395337009,["Administrator@WIN-T3FPCJLTUH1",[[1,7721,"    parseInt() 函数可解析一个字符串，并返回一个整数。"]],[7721,7721],[7755,7755]]],[1586395340241,["Administrator@WIN-T3FPCJLTUH1",[[-1,7735," "]],[7736,7736],[7735,7735]]],[1586395342902,["Administrator@WIN-T3FPCJLTUH1",[[-1,7753,"。"]],[7754,7754],[7753,7753]]],[1586395344436,["Administrator@WIN-T3FPCJLTUH1",[[1,7753,"；"]],[7753,7753],[7754,7754]]],[1586395345294,["Administrator@WIN-T3FPCJLTUH1",[[1,7759,"\n    "]],[7754,7754],[7759,7759]]],[1586395349548,["Administrator@WIN-T3FPCJLTUH1",[[1,7759,"Number() 函数把对象的值转换为数字。"]],[7759,7759],[7781,7781]]],[1586395410639,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395410639,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395353792,["Administrator@WIN-T3FPCJLTUH1",[[-1,7767," "]],[7768,7768],[7767,7767]]],[1586395388442,["Administrator@WIN-T3FPCJLTUH1",[[-1,7794,"val"],[1,7797,"string"]],[7794,7797],[7800,7800]]],[1586395392281,["Administrator@WIN-T3FPCJLTUH1",[[-1,7808,"，val为string类型(非string自动调用toString方法转化)，radix是"]],[7808,7853],[7808,7808]]],[1586395394067,["Administrator@WIN-T3FPCJLTUH1",[[1,7808,","]],[7808,7808],[7809,7809]]],[1586395395044,["Administrator@WIN-T3FPCJLTUH1",[[-1,7808,","]],[7809,7809],[7808,7808]]],[1586395408401,["Administrator@WIN-T3FPCJLTUH1",[[1,7808,"，string必须，非string自动"]],[7808,7808],[7827,7827]]],[1586395470637,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395470637,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395445436,["Administrator@WIN-T3FPCJLTUH1",[[1,7827,"调toString转化；radix要解析"]],[7827,7827],[7847,7847]]],[1586395452619,["Administrator@WIN-T3FPCJLTUH1",[[1,7818,"，"]],[7817,7817],[7818,7818]]],[1586395459593,["Administrator@WIN-T3FPCJLTUH1",[[1,7818,"要被解析的字符串"]],[7818,7818],[7826,7826]]],[1586395470275,["Administrator@WIN-T3FPCJLTUH1",[[1,7856,"的数字的基数"]],[7856,7856],[7862,7862]]],[1586395530639,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395530639,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395496268,["Administrator@WIN-T3FPCJLTUH1",[[1,7862,"，即进制。"]],[7862,7862],[7867,7867]]],[1586395496990,["Administrator@WIN-T3FPCJLTUH1",[[-1,7866,"。"]],[7867,7867],[7866,7866]]],[1586395497320,["Administrator@WIN-T3FPCJLTUH1",[[1,7866,"，"]],[7866,7866],[7867,7867]]],[1586395521240,["Administrator@WIN-T3FPCJLTUH1",[[1,7753,"()"]],[7753,7753],[7755,7755]]],[1586395528050,["Administrator@WIN-T3FPCJLTUH1",[[1,7754,"或Nan"]],[7754,7754],[7758,7758]]],[1586395528556,["Administrator@WIN-T3FPCJLTUH1",[[-1,7757,"n"]],[7758,7758],[7757,7757]]],[1586395529239,["Administrator@WIN-T3FPCJLTUH1",[[1,7757,"N"]],[7757,7757],[7758,7758]]],[1586395590642,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395590642,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395533499,["Administrator@WIN-T3FPCJLTUH1",[[1,7785,"()"]],[7785,7785],[7787,7787]]],[1586395535023,["Administrator@WIN-T3FPCJLTUH1",[[1,7786,"HUO"]],[7786,7786],[7789,7789]]],[1586395535653,["Administrator@WIN-T3FPCJLTUH1",[[-1,7786,"HUO"]],[7789,7789],[7786,7786]]],[1586395536194,["Administrator@WIN-T3FPCJLTUH1",[[1,7786,"hu"]],[7786,7786],[7788,7788]]],[1586395536675,["Administrator@WIN-T3FPCJLTUH1",[[-1,7786,"hu"]],[7788,7788],[7786,7786]]],[1586395537377,["Administrator@WIN-T3FPCJLTUH1",[[1,7786,"Huo"]],[7786,7786],[7789,7789]]],[1586395538120,["Administrator@WIN-T3FPCJLTUH1",[[-1,7786,"Huo"]],[7789,7789],[7786,7786]]],[1586395541832,["Administrator@WIN-T3FPCJLTUH1",[[1,7786,"或NaN"]],[7786,7786],[7790,7790]]],[1586395545679,["Administrator@WIN-T3FPCJLTUH1",[[-1,7878,"，"]],[7879,7879],[7878,7878]]],[1586395547096,["Administrator@WIN-T3FPCJLTUH1",[[1,7878,"。"]],[7878,7878],[7879,7879]]],[1586395548044,["Administrator@WIN-T3FPCJLTUH1",[[1,7880,"    \n"]],[7879,7879],[7884,7884]]],[1586395551746,["Administrator@WIN-T3FPCJLTUH1",[[1,7884,"Number（）"]],[7884,7884],[7892,7892]]],[1586395552947,["Administrator@WIN-T3FPCJLTUH1",[[-1,7890,"（）"]],[7892,7892],[7890,7890]]],[1586395553398,["Administrator@WIN-T3FPCJLTUH1",[[1,7890,"()"]],[7890,7890],[7892,7892]]],[1586395560888,["Administrator@WIN-T3FPCJLTUH1",[[1,7891,"obj"]],[7891,7891],[7894,7894]]],[1586395586270,["Administrator@WIN-T3FPCJLTUH1",[[1,7895,"，obj是js对象()"]],[7895,7895],[7906,7906]]],[1586395589929,["Administrator@WIN-T3FPCJLTUH1",[[1,7905,"基本数据类型"]],[7905,7905],[7911,7911]]],[1586395650644,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395650644,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395594583,["Administrator@WIN-T3FPCJLTUH1",[[1,7911,"会被当做"]],[7911,7911],[7915,7915]]],[1586395624012,["Administrator@WIN-T3FPCJLTUH1",[[-1,7911,"会被当做"]],[7912,7915],[7911,7911]]],[1586395628248,["Administrator@WIN-T3FPCJLTUH1",[[1,7911,"会"]],[7911,7911],[7912,7912]]],[1586395631621,["Administrator@WIN-T3FPCJLTUH1",[[-1,7904,"(基本数据类型会)"]],[7912,7912],[7904,7904]]],[1586395633315,["Administrator@WIN-T3FPCJLTUH1",[[1,7904,"。"]],[7904,7904],[7905,7905]]],[1586395638185,["Administrator@WIN-T3FPCJLTUH1",[[1,7906,"    \n"]],[7905,7905],[7910,7910]]],[1586395640002,["Administrator@WIN-T3FPCJLTUH1",[[-1,7906,"    "]],[7910,7910],[7906,7906]]],[1586395642179,["Administrator@WIN-T3FPCJLTUH1",[[1,7906,"3. "]],[7906,7906],[7909,7909]]],[1586395710646,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395710646,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395709726,["Administrator@WIN-T3FPCJLTUH1",[[1,7634,"`"],[1,7644,"`"]],[7634,7644],[7634,7646]]],[1586395770647,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395770647,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395712343,["Administrator@WIN-T3FPCJLTUH1",[[1,7660,"`"],[1,7668,"`"]],[7660,7668],[7660,7670]]],[1586395713993,["Administrator@WIN-T3FPCJLTUH1",[[1,7680,"`"],[1,7686,"`"]],[7680,7686],[7680,7688]]],[1586395717490,["Administrator@WIN-T3FPCJLTUH1",[[-1,7700,"    "]],[7701,7704],[7700,7700]]],[1586395719539,["Administrator@WIN-T3FPCJLTUH1",[[1,7697,"`"],[1,7700,"`"]],[7697,7700],[7697,7702]]],[1586395722714,["Administrator@WIN-T3FPCJLTUH1",[[1,7729,"`"],[1,7739,"`"]],[7729,7739],[7729,7741]]],[1586395726167,["Administrator@WIN-T3FPCJLTUH1",[[1,7771,"`"],[1,7779,"`"]],[7771,7779],[7771,7781]]],[1586395728090,["Administrator@WIN-T3FPCJLTUH1",[[1,7805,"`"],[1,7828,"`"]],[7805,7828],[7805,7830]]],[1586395729117,["Administrator@WIN-T3FPCJLTUH1",[[1,7831,"`"],[1,7837,"`"]],[7831,7837],[7831,7839]]],[1586395731598,["Administrator@WIN-T3FPCJLTUH1",[[1,7761,"`"],[1,7764,"`"]],[7761,7764],[7761,7766]]],[1586395732479,["Administrator@WIN-T3FPCJLTUH1",[[1,7797,"`"],[1,7800,"`"]],[7797,7800],[7797,7802]]],[1586395734779,["Administrator@WIN-T3FPCJLTUH1",[[1,7856,"`"],[1,7862,"`"]],[7856,7862],[7856,7864]]],[1586395736073,["Administrator@WIN-T3FPCJLTUH1",[[1,7867,"`"],[1,7875,"`"]],[7867,7875],[7867,7877]]],[1586395737005,["Administrator@WIN-T3FPCJLTUH1",[[1,7880,"`"],[1,7885,"`"]],[7880,7885],[7880,7887]]],[1586395740422,["Administrator@WIN-T3FPCJLTUH1",[[1,7906,"`"],[1,7917,"`"]],[7906,7917],[7906,7919]]],[1586395741383,["Administrator@WIN-T3FPCJLTUH1",[[1,7920,"`"],[1,7923,"`"]],[7920,7923],[7920,7925]]],[1586395742318,["Administrator@WIN-T3FPCJLTUH1",[[1,7926,"`"],[1,7928,"`"]],[7926,7928],[7926,7930]]],[1586395744921,["Administrator@WIN-T3FPCJLTUH1",[[1,7649,"`"],[1,7650,"`"]],[7649,7650],[7649,7652]]],[1586395746335,["Administrator@WIN-T3FPCJLTUH1",[[-1,7649,"`"],[-1,7651,"`"]],[7649,7652],[7649,7650]]],[1586395747583,["Administrator@WIN-T3FPCJLTUH1",[[1,7647,"`"],[1,7649,"`"]],[7647,7649],[7647,7651]]],[1586395830649,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395830649,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395829572,["Administrator@WIN-T3FPCJLTUH1",[[1,7939,"parseIntde"]],[7939,7939],[7949,7949]]],[1586395830433,["Administrator@WIN-T3FPCJLTUH1",[[-1,7947,"de"]],[7949,7949],[7947,7947]]],[1586395890650,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586395890650,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395834446,["Administrator@WIN-T3FPCJLTUH1",[[1,7947,"的入参string"]],[7947,7947],[7956,7956]]],[1586395845805,["Administrator@WIN-T3FPCJLTUH1",[[-1,7950,"string"]],[7956,7956],[7950,7950]]],[1586396010654,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396010654,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586395998678,["Administrator@WIN-T3FPCJLTUH1",[[-1,7947,"的入参"]],[7950,7950],[7947,7947]]],[1586396009337,["Administrator@WIN-T3FPCJLTUH1",[[1,7947,"解析string时，"]],[7947,7947],[7957,7957]]],[1586396070655,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396070655,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586396041197,["Administrator@WIN-T3FPCJLTUH1",[[1,7957,"忽略第一个空格，0"]],[7957,7957],[7966,7966]]],[1586396058612,["Administrator@WIN-T3FPCJLTUH1",[[1,7965,"任意个"]],[7965,7965],[7968,7968]]],[1586396059892,["Administrator@WIN-T3FPCJLTUH1",[[1,7969,"，"]],[7969,7969],[7970,7970]]],[1586396130655,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396130655,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586396079586,["Administrator@WIN-T3FPCJLTUH1",[[1,7970,"解析到非数字就停。"]],[7970,7970],[7979,7979]]],[1586396080075,["Administrator@WIN-T3FPCJLTUH1",[[-1,7978,"。"]],[7979,7979],[7978,7978]]],[1586396093039,["Administrator@WIN-T3FPCJLTUH1",[[1,7978,"，更像是正则转化。"]],[7978,7978],[7987,7987]]],[1586396095314,["Administrator@WIN-T3FPCJLTUH1",[[-1,7986,"。"]],[7987,7987],[7986,7986]]],[1586396190656,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396190656,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586396135247,["Administrator@WIN-T3FPCJLTUH1",[[1,7978,"()"]],[7978,7978],[7980,7980]]],[1586396136591,["Administrator@WIN-T3FPCJLTUH1",[[1,7979,"‘’"]],[7979,7979],[7981,7981]]],[1586396137800,["Administrator@WIN-T3FPCJLTUH1",[[-1,7979,"‘’"]],[7981,7981],[7979,7979]]],[1586396144906,["Administrator@WIN-T3FPCJLTUH1",[[1,7979,"16"]],[7979,7979],[7981,7981]]],[1586396146460,["Administrator@WIN-T3FPCJLTUH1",[[-1,7979,"16"]],[7981,7981],[7979,7979]]],[1586396186553,["Administrator@WIN-T3FPCJLTUH1",[[1,7979,"16进制时遇到0x不会停"]],[7979,7979],[7991,7991]]],[1586396250660,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396250660,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586396192224,["Administrator@WIN-T3FPCJLTUH1",[[-1,7979,"16进制时"]],[7984,7984],[7979,7979]]],[1586396204694,["Administrator@WIN-T3FPCJLTUH1",[[1,7983,"后面还有数字时"]],[7983,7983],[7990,7990]]],[1586396214049,["Administrator@WIN-T3FPCJLTUH1",[[1,8002,"。"]],[8002,8002],[8003,8003]]],[1586396370661,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396370661,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586396349175,["Administrator@WIN-T3FPCJLTUH1",[[1,8004,"4. \n"]],[8003,8003],[8007,8007]]],[1586396350695,["Administrator@WIN-T3FPCJLTUH1",[[-1,8004,"4. "]],[8007,8007],[8004,8004]]],[1586396355892,["Administrator@WIN-T3FPCJLTUH1",[[1,8004,"    发"]],[8004,8004],[8009,8009]]],[1586396357675,["Administrator@WIN-T3FPCJLTUH1",[[-1,8008,"发"]],[8009,8009],[8008,8008]]],[1586396359469,["Administrator@WIN-T3FPCJLTUH1",[[1,8008,"Numner"]],[8008,8008],[8014,8014]]],[1586396360578,["Administrator@WIN-T3FPCJLTUH1",[[-1,8011,"ner"]],[8014,8014],[8011,8011]]],[1586396361702,["Administrator@WIN-T3FPCJLTUH1",[[1,8011,"ber"]],[8011,8011],[8014,8014]]],[1586396365197,["Administrator@WIN-T3FPCJLTUH1",[[1,7947,"()"]],[7947,7947],[7949,7949]]],[1586396367922,["Administrator@WIN-T3FPCJLTUH1",[[1,7939,"`"],[1,7949,"`"]],[7939,7949],[7939,7951]]],[1586396369129,["Administrator@WIN-T3FPCJLTUH1",[[1,7953,"`"],[1,7959,"`"]],[7953,7959],[7953,7961]]],[1586396430663,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396430663,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586396370982,["Administrator@WIN-T3FPCJLTUH1",[[1,7987,"`"],[1,7989,"`"]],[7987,7989],[7987,7991]]],[1586396380744,["Administrator@WIN-T3FPCJLTUH1",[[1,8022,"()"]],[8022,8022],[8024,8024]]],[1586396384051,["Administrator@WIN-T3FPCJLTUH1",[[1,8016,"`"],[1,8024,"`"]],[8016,8024],[8016,8026]]],[1586396387160,["Administrator@WIN-T3FPCJLTUH1",[[1,8026,"jie"]],[8026,8026],[8029,8029]]],[1586396387982,["Administrator@WIN-T3FPCJLTUH1",[[-1,8026,"jie"]],[8029,8029],[8026,8026]]],[1586396411341,["Administrator@WIN-T3FPCJLTUH1",[[1,8026,"只能"]],[8026,8026],[8028,8028]]],[1586396411914,["Administrator@WIN-T3FPCJLTUH1",[[-1,8026,"只能"]],[8028,8028],[8026,8026]]],[1586396414144,["Administrator@WIN-T3FPCJLTUH1",[[1,8026,"解析"]],[8026,8026],[8028,8028]]],[1586396418995,["Administrator@WIN-T3FPCJLTUH1",[[-1,8026,"解析"]],[8028,8028],[8026,8026]]],[1586396428877,["Administrator@WIN-T3FPCJLTUH1",[[1,8026,"可以解析纯数字"]],[8026,8026],[8033,8033]]],[1586396490666,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396490666,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586396443927,["Administrator@WIN-T3FPCJLTUH1",[[1,8033,"字符串、布尔、Date"]],[8033,8033],[8044,8044]]],[1586396448053,["Administrator@WIN-T3FPCJLTUH1",[[-1,8032,"字字符串"]],[8036,8036],[8032,8032]]],[1586396454804,["Administrator@WIN-T3FPCJLTUH1",[[1,8032,"字String"]],[8032,8032],[8039,8039]]],[1586396456761,["Administrator@WIN-T3FPCJLTUH1",[[-1,8040,"布尔"]],[8042,8042],[8040,8040]]],[1586396459156,["Administrator@WIN-T3FPCJLTUH1",[[1,8040,"B哦了安"]],[8040,8040],[8044,8044]]],[1586396460924,["Administrator@WIN-T3FPCJLTUH1",[[-1,8041,"哦了安"]],[8044,8044],[8041,8041]]],[1586396462748,["Administrator@WIN-T3FPCJLTUH1",[[1,8041,"oolean"]],[8041,8041],[8047,8047]]],[1586396467989,["Administrator@WIN-T3FPCJLTUH1",[[1,8052,"、【】"]],[8052,8052],[8055,8055]]],[1586396468639,["Administrator@WIN-T3FPCJLTUH1",[[-1,8053,"【】"]],[8055,8055],[8053,8053]]],[1586396469366,["Administrator@WIN-T3FPCJLTUH1",[[1,8053,"{】"]],[8053,8053],[8055,8055]]],[1586396470219,["Administrator@WIN-T3FPCJLTUH1",[[-1,8053,"{】"]],[8055,8055],[8053,8053]]],[1586396472202,["Administrator@WIN-T3FPCJLTUH1",[[1,8053,"[]\\"]],[8053,8053],[8056,8056]]],[1586396473055,["Administrator@WIN-T3FPCJLTUH1",[[-1,8055,"\\"]],[8056,8056],[8055,8055]]],[1586396475023,["Administrator@WIN-T3FPCJLTUH1",[[1,8055,"、[]"]],[8055,8055],[8058,8058]]],[1586396610670,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396610670,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586396583943,["Administrator@WIN-T3FPCJLTUH1",[[1,8056,"zhi"]],[8056,8056],[8059,8059]]],[1586396585126,["Administrator@WIN-T3FPCJLTUH1",[[-1,8056,"zhi"]],[8059,8059],[8056,8056]]],[1586396594276,["Administrator@WIN-T3FPCJLTUH1",[[1,8056,"只有一个元素的"]],[8056,8056],[8063,8063]]],[1586396609019,["Administrator@WIN-T3FPCJLTUH1",[[1,8062,"且是数字或纯数字String"]],[8062,8062],[8076,8076]]],[1586396670671,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396670671,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586396619828,["Administrator@WIN-T3FPCJLTUH1",[[1,8079,"("]],[8079,8079],[8080,8080]]],[1586396619877,["Administrator@WIN-T3FPCJLTUH1",[[1,8080,"https://)"]],[8080,8080],[8080,8088]]],[1586396619976,["Administrator@WIN-T3FPCJLTUH1",[[-1,8080,"https://"],[1,8088,")"]],[8080,8088],[8081,8081]]],[1586396621425,["Administrator@WIN-T3FPCJLTUH1",[[-1,8081,")"]],[8082,8082],[8081,8081]]],[1586396624962,["Administrator@WIN-T3FPCJLTUH1",[[1,8080,"如【】"]],[8080,8080],[8083,8083]]],[1586396625562,["Administrator@WIN-T3FPCJLTUH1",[[-1,8081,"【】"]],[8083,8083],[8081,8081]]],[1586396626257,["Administrator@WIN-T3FPCJLTUH1",[[1,8081,"[]"]],[8081,8081],[8083,8083]]],[1586396634561,["Administrator@WIN-T3FPCJLTUH1",[[1,8053,"kong"]],[8053,8053],[8057,8057]]],[1586396635418,["Administrator@WIN-T3FPCJLTUH1",[[-1,8053,"kong"]],[8057,8057],[8053,8053]]],[1586396639841,["Administrator@WIN-T3FPCJLTUH1",[[1,8053,"空数组"]],[8053,8053],[8056,8056]]],[1586396641809,["Administrator@WIN-T3FPCJLTUH1",[[-1,8056,"[]"]],[8058,8058],[8056,8056]]],[1586396649943,["Administrator@WIN-T3FPCJLTUH1",[[-1,8078,"[]"],[1,8080,"数组"]],[8078,8078],[8080,8080]]],[1586396652045,["Administrator@WIN-T3FPCJLTUH1",[[1,8083,"1"]],[8083,8083],[8084,8084]]],[1586396659097,["Administrator@WIN-T3FPCJLTUH1",[[1,8033,"`"],[1,8039,"`"]],[8033,8039],[8033,8041]]],[1586396660352,["Administrator@WIN-T3FPCJLTUH1",[[1,8042,"`"],[1,8049,"`"]],[8042,8049],[8042,8051]]],[1586396661327,["Administrator@WIN-T3FPCJLTUH1",[[1,8052,"`"],[1,8056,"`"]],[8052,8056],[8052,8058]]],[1586396669526,["Administrator@WIN-T3FPCJLTUH1",[[1,8077,"`"],[1,8083,"`"]],[8077,8083],[8077,8085]]],[1586396690988,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396690988,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586396684033,["Administrator@WIN-T3FPCJLTUH1",[[1,8095,"参考："]],[8095,8095],[8098,8098]]],[1586396711626,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396711626,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586396704846,["Administrator@WIN-T3FPCJLTUH1",[[1,8098,"[parseInt](https://www.w3school.com.cn/jsref/jsref_parseInt.asp)"]],[8098,8098],[8162,8162]]],[1586396737257,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396737257,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586396725045,["Administrator@WIN-T3FPCJLTUH1",[[-1,8099,"parseInt"],[1,8107,"Number"],[-1,8139,"ref"],[-1,8149,"parseInt"],[1,8157,"number"]],[8162,8162],[8155,8155]]],[1586396728716,["Administrator@WIN-T3FPCJLTUH1",[[1,8155," "]],[8155,8155],[8156,8156]]],[1586396730334,["Administrator@WIN-T3FPCJLTUH1",[[-1,8155," "]],[8156,8156],[8155,8155]]],[1586396730741,["Administrator@WIN-T3FPCJLTUH1",[[1,8155,"\\"]],[8155,8155],[8156,8156]]],[1586396731537,["Administrator@WIN-T3FPCJLTUH1",[[-1,8155,"\\"]],[8156,8156],[8155,8155]]],[1586396734465,["Administrator@WIN-T3FPCJLTUH1",[[1,8098,"、"]],[8098,8098],[8099,8099]]],[1586396797278,[null,[[-1,7201,"\n"],[1,7202,"["]],[7201,7201],[7203,7203]]],[1586396797278,[null,[[1,7201,"\n"],[-1,7201,"["]],[7203,7203],[7201,7201]]],[1586396752846,["Administrator@WIN-T3FPCJLTUH1",[[1,8098,"[parseInt](https://www.w3school.com.cn/jsref/jsref_parseInt.asp)"]],[8098,8098],[8162,8162]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["1deae1d5-3419-4f39-b0a0-c1cac6defbc2",1586479829579,"# 积跬步\n\n## 2020.03.23\n\n### [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n[参考](https://www.cnblogs.com/LisenH/p/11635919.html)\n\n### [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n### [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n### [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n### [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n### [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n### [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n### [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n### [js] [call、apply、bind的用法？](https://www.cnblogs.com/moqiutao/p/7371988.html)\n替换函数运行时的上下文，即`this`指向。\n`call`和`apply`都是在当前调用时临时替换一次，并立即执行函数；\n`bind`则会返回一个内部`this`被替换为指定对象的新函数。\n`call`和`apply`的区别在于`call`需要按顺序传形参，如`Arrray.prototype.slice.call(this, 1, 2)`，`apply`支持除了`this`外，剩余参数是一个数组，如`Arrray.prototype.slice.apply(this, [1, 2])`。\n\n## 2020.03.27\n\n### [js] 在axios中怎样添加授权验证？\n\n[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n\n```javascript\nimport axios from 'axios';\nimport router from './router';\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'https://api.github.com';\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = localStorage.token; //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;\n```\n\n### [js] 如何给localStorage存储的数据设置过期时间？\n\n### [js] 什么是UUID？它有什么作用？用js写一个生成UUID的方法？\nUUID（Universally Unique Identifier, 通用唯一识别码，也叫GUID（Globally Unique IDentifier，全局唯一识别码）。在互联网工程任务组发布的[RFC4122](https://tools.ietf.org/html/rfc4122)文档中介绍，UUID是一种不需要中央机构分配而产生唯一标识符的方式在时间和空间上保持其唯一性。UUID是由128位的二进制数据组成，通常使用32位的十六进制数据表示，并使用连字符连接。其表示格式为8-4-4-4-12。例如：\n\n```\n7e6eeeef-5271-545e-bcd5-eacf6a804e2b\nxxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n```\n\nM中使用4位来表示UUID的版本，N中使用1-3位表示不同的变体。\n项目中用到的写法：\n```javascript\nfunction GET_UUID () {\n  var s = []\n  var hexDigits = '0123456789abcdef'\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n  }\n  s[14] = '4' // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1) // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = '-'\n  var uuid = s.join('')\n  return uuid\n}\n```\n  \n\n\n## 2020.04.02\n\n### [js] 生成1-10000的数组？\n```javascript\nconsole.time();\n// 1.最快的方法：创建数组，填充内容，修改内容\nnew Array(10000).fill(0).map((o,i)=>i+1);\n// 2.使用Array.apply()初始化，修改内容\nArray.apply(null,{length:10000}).map((item,index)=>index+1)\n// 3.for循环\nfor(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}\nconsole.timeEnd()\n// 4.使用Array.from()把一个iterator数据或类数组对象转换成真正的数组，修改内容\nArray.from(new Array(10001).keys()).slice(1);\nArray.from({ length: 10000 }, (_, i) => i+1);\n// 5.使用Generator\n[...function*(i = 1){\n  while(i <= 10000) yield i++;\n}()]\n```\n\n### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。\n\n## 2020.04.07\n\n### [html] 禁止移动端页面缩放？\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1,user-scalable=0\">\n```\n\n### [css] 给文字的color设置渐变？\n`webkit only`\n[案例](https://codepen.io/klain97710/pen/MWwNryE)\n\n### [js] 切换标签窗口后js定时器自动停止了，如何在激活标签后又继续呢？\n想法1：监听页面`visibilitychange`事件\n想法2：`webworker`\n\n## 2020.04.08\n\n### [html] 3像素Bug指的是什么？怎么解决？\nimg标签渲染之后下方会出现几个像素（我用谷歌测试是4px, 火狐3.5px）的空白；\nimg是行内元素，默认`display：inline`; 它与文本的默认行为类似，下边缘是与基线对齐，而不是贴紧容器下边缘，所以会有几像素的空白；\n解决办法：\n1.  把img设置为`display: block`;\n2.  给img和其父元素都设置`vertical-align: top`；让其top对齐而不是baseline对齐；或者给img设置`vertical-align: middle`；\n3.  给img父元素设置`line-height: 0`;\n\n### [js] 看下面代码，判断a和b的类型是否为true？为什么？什么是基本包装类型？\n```javascript\nvar a=1;\nvar b = new Number(1);\ntypeof(a)===typeof(b);\n```\n先说结果，输出是`false`；\na是基本数据类型`number`，b是通过`new`操作符创建的引用类型实例，所以`typeof(b)` 是`object`，因而结果为`false`。\n基本包装类型是`ECMAScript`为了便于操作基本类型值提供的三种特殊的引用类型（`function`）,包括：`Number`、`String`、`Boolean`\n\n### [js] W3C的事件处理和IE的事件处理有哪些区别？\n*   绑定事件 W3C addEventListener ;IE attachEvent\n*   移除事件 W3c removeEventListner;IE detachEvent\n*   阻止默认事件 W3C e.preventDefault; IE window.event.returnValue = false\n*   阻止事件传播 W3C e.stopPropagation; IE winow.event.cancelBuble = true\n[参考](https://blog.csdn.net/weixin_42334281/article/details/102533325)\n\n### [js] DOM0、DOM2、DOM3事件处理方式的区别是什么？\n1. DOM0级事件处理方式：\n    btn.onclick = func;\n    btn.onclick = null;\n2. DOM2级事件处理方式：\n    btn.addEventListener('click', func, false);\n    btn.removeEventListener('click', func, false);\n    btn.attachEvent(\"onclick\", func);//IE\n    btn.detachEvent(\"onclick\", func);//IE\n3. DOM3级事件处理方式：\n    eventUtil.addListener(input, \"textInput\", func);\n    eventUtil 是自定义对象，textInput 是DOM3级事件\n[参考](https://blog.csdn.net/judyge/article/details/51898124)\n\n## 2020.04.09\n\n### [html] 可以给内联元素设置宽高吗？为什么？\n 1. 正常情况下不能设置宽高(可替换内容元素除外例如img、input、textarea)\n 2. 元素被浮动，绝对定位，固定定位后，可以设置宽高\n 3. `display:block,display:inline-block`等后可以设置宽高\n 4. 内联元素的宽高是由其内容决定的，并且在一行显示（可以换行），呈现包裹性,因此设置宽高无效\n\n### [css] 如何解决IE6浮动时产生双倍边距的BUG？\n1. 当块级元素有浮动样式的时候，给元素添加`margin-left`和`margin-right`样式，在ie6下就会出现双倍边距\n2. 给当前元素添加样式，使当前元素不为块，如：`display:inline;display:list-item`这样在元素浮动的时候就不会在ie6下面产生双倍边距的问题了\n\n### [js] parseInt()与Number()的区别？\n1. 类型不同：\n    `parseInt()`是`js`的全局函数；\n    `Number()`还能作为基本包装类型`Number`的构造函数，可以和`new`操作符一起创建变量。\n2. 定义和用法不同：\n    `parseInt()`函数可解析一个字符串，并返回一个整数(或`NaN`)；\n    `Number()`函数把对象的值转换为数字(或`NaN`)。\n    `parseInt(string, radix)`，`string`必须，要被解析的字符串，非`string`自动调`toString`转化；`radix`要解析的数字的基数，即进制。\n    `Number(obj)`，`obj`是`js`对象。\n3. `parseInt()`解析`string`时，忽略第一个空格，任意个0，解析到非数字就停(遇到`0x`后面还有数字时不会停)，更像是正则转化。\n    `Number()`可以解析纯数字`String`、`Boolean`、`Date`、空数组、只有一个元素且是数字或纯数字`String`的数组(如[1])\n参考：[parseInt](https://www.w3school.com.cn/jsref/jsref_parseInt.asp)、[Number](https://www.w3school.com.cn/js/jsref_number.asp)\n\n\n",[[1586479799496,["Administrator@WIN-T3FPCJLTUH1",[[1,8223,"\n"]],[8222,8222],[8223,8223]]],[1586479799685,["Administrator@WIN-T3FPCJLTUH1",[[1,8224,"\n"]],[8223,8223],[8224,8224]]],[1586479799882,["Administrator@WIN-T3FPCJLTUH1",[[1,8225,"\n"]],[8224,8224],[8225,8225]]],[1586479800024,["Administrator@WIN-T3FPCJLTUH1",[[1,8226,"\n"]],[8225,8225],[8226,8226]]],[1586479800134,["Administrator@WIN-T3FPCJLTUH1",[[1,8227,"\n"]],[8226,8226],[8227,8227]]],[1586479800260,["Administrator@WIN-T3FPCJLTUH1",[[1,8228,"\n"]],[8227,8227],[8228,8228]]],[1586479800382,["Administrator@WIN-T3FPCJLTUH1",[[1,8229,"\n"]],[8228,8228],[8229,8229]]],[1586479800511,["Administrator@WIN-T3FPCJLTUH1",[[1,8230,"\n"]],[8229,8229],[8230,8230]]],[1586479800640,["Administrator@WIN-T3FPCJLTUH1",[[1,8231,"\n"]],[8230,8230],[8231,8231]]],[1586479800777,["Administrator@WIN-T3FPCJLTUH1",[[1,8232,"\n"]],[8231,8231],[8232,8232]]],[1586479800913,["Administrator@WIN-T3FPCJLTUH1",[[1,8233,"\n"]],[8232,8232],[8233,8233]]],[1586479801043,["Administrator@WIN-T3FPCJLTUH1",[[1,8234,"\n"]],[8233,8233],[8234,8234]]],[1586479801192,["Administrator@WIN-T3FPCJLTUH1",[[1,8235,"\n"]],[8234,8234],[8235,8235]]],[1586479801312,["Administrator@WIN-T3FPCJLTUH1",[[1,8236,"\n"]],[8235,8235],[8236,8236]]],[1586479801447,["Administrator@WIN-T3FPCJLTUH1",[[1,8237,"\n"]],[8236,8236],[8237,8237]]],[1586479809040,["Administrator@WIN-T3FPCJLTUH1",[[1,8222,"## 2020.04.0"]],[8222,8222],[8234,8234]]],[1586479809907,["Administrator@WIN-T3FPCJLTUH1",[[-1,8233,"0"]],[8234,8234],[8233,8233]]],[1586479810520,["Administrator@WIN-T3FPCJLTUH1",[[1,8233,"10"]],[8233,8233],[8235,8235]]],[1586479825669,["Administrator@WIN-T3FPCJLTUH1",[[1,8237,"### "]],[8237,8237],[8241,8241]]],[1586480428095,["Administrator@WIN-T3FPCJLTUH1",[[1,8241,"[]"]],[8241,8241],[8243,8243]]],[1586480429472,["Administrator@WIN-T3FPCJLTUH1",[[1,8242,"html"]],[8242,8242],[8246,8246]]],[1586480436399,["Administrator@WIN-T3FPCJLTUH1",[[1,8247," ruhejiejue "]],[8247,8247],[8259,8259]]],[1586480438212,["Administrator@WIN-T3FPCJLTUH1",[[-1,8248,"ruhejiejue "]],[8259,8259],[8248,8248]]],[1586480467240,["Administrator@WIN-T3FPCJLTUH1",[[1,8248,"如何解决input在Firefox和Chrome中高度不一致的问题？"]],[8248,8248],[8282,8282]]],[1586480468061,["Administrator@WIN-T3FPCJLTUH1",[[1,8296,"\n"]],[8282,8282],[8283,8283]]],[1586480486607,["Administrator@WIN-T3FPCJLTUH1",[[1,8283,"*   原因是firefox的input的border-width padding 受win10系统的文本大小设置影响\n*   设置一样的样式\n\n    ```source-css\n    input{\n        box-sizing:border-box;\n        height:20px;\n    }\n    ```\n\n*   将win10 系统的文本大小设置为100%"]],[8283,8283],[8477,8477]]],[1586480490544,["Administrator@WIN-T3FPCJLTUH1",[[-1,8285,"  "]],[8287,8287],[8285,8285]]],[1586480491826,["Administrator@WIN-T3FPCJLTUH1",[[-1,8343,"  "]],[8345,8345],[8343,8343]]],[1586480493235,["Administrator@WIN-T3FPCJLTUH1",[[-1,8450,"  "]],[8452,8452],[8450,8450]]],[1586480627424,["Administrator@WIN-T3FPCJLTUH1",[[1,8288,"`"],[1,8295,"`"]],[8288,8295],[8288,8297]]],[1586480628443,["Administrator@WIN-T3FPCJLTUH1",[[1,8298,"`"],[1,8303,"`"]],[8298,8303],[8298,8305]]],[1586480631490,["Administrator@WIN-T3FPCJLTUH1",[[1,8306,"`"],[1,8318,"`"]],[8306,8318],[8306,8320]]],[1586480633273,["Administrator@WIN-T3FPCJLTUH1",[[1,8321,"`"],[1,8328,"`"]],[8321,8328],[8321,8330]]],[1586480636069,["Administrator@WIN-T3FPCJLTUH1",[[-1,8320," "]],[8321,8321],[8320,8320]]],[1586480636657,["Administrator@WIN-T3FPCJLTUH1",[[1,8320,"、"]],[8320,8320],[8321,8321]]],[1586480647361,["Administrator@WIN-T3FPCJLTUH1",[[-1,8464," "]],[8465,8465],[8464,8464]]],[1586480665596,["Administrator@WIN-T3FPCJLTUH1",[[1,8480,"### {】"]],[8480,8480],[8486,8486]]],[1586480666789,["Administrator@WIN-T3FPCJLTUH1",[[-1,8484,"{】"]],[8486,8486],[8484,8484]]],[1586480667558,["Administrator@WIN-T3FPCJLTUH1",[[1,8484,"[]"]],[8484,8484],[8486,8486]]],[1586480669702,["Administrator@WIN-T3FPCJLTUH1",[[1,8485,"css"]],[8485,8485],[8488,8488]]],[1586480678055,["Administrator@WIN-T3FPCJLTUH1",[[1,8489," 如何让IE6支持min-wu"]],[8489,8489],[8504,8504]]],[1586480678524,["Administrator@WIN-T3FPCJLTUH1",[[-1,8503,"u"]],[8504,8504],[8503,8503]]],[1586480686141,["Administrator@WIN-T3FPCJLTUH1",[[1,8503,"idth和max-width？"]],[8503,8503],[8518,8518]]],[1586480688889,["Administrator@WIN-T3FPCJLTUH1",[[1,8530,"\n"]],[8518,8518],[8519,8519]]],[1586480695000,["Administrator@WIN-T3FPCJLTUH1",[[1,8519,"*   利用IE特有的css语法\n\n    ```source-css\n    .className {\n        max-width:620px;\n        min-width:1px;\n        _width:expression(this.scrollWidth > 620 ? \"620px\":(this.scrollWidth < 1? \"1px\":\"auto\"));\n    }\n    ```\n\n*   [参考文章](https://www.jb51.net/css/76142.html)"]],[8519,8519],[8780,8780]]],[1586480702621,["Administrator@WIN-T3FPCJLTUH1",[[-1,8544,"source-"]],[8544,8551],[8544,8544]]],[1586480706991,["Administrator@WIN-T3FPCJLTUH1",[[-1,8539,"  "],[-1,8548,"  "],[-1,8565," "],[-1,8572," "],[-1,8596,"  "],[-1,8613,"  "],[-1,8713,"  "],[-1,8717,"  "]],[8536,8724],[8536,8710]]],[1586480718775,["Administrator@WIN-T3FPCJLTUH1",[[-1,8538," "]],[8538,8538],[8537,8537]]],[1586480720381,["Administrator@WIN-T3FPCJLTUH1",[[-1,8537," "]],[8538,8538],[8537,8537]]],[1586480720863,["Administrator@WIN-T3FPCJLTUH1",[[-1,8536,"\n"]],[8537,8537],[8536,8536]]],[1586480722886,["Administrator@WIN-T3FPCJLTUH1",[[-1,8702,"  "]],[8704,8704],[8702,8702]]],[1586480725146,["Administrator@WIN-T3FPCJLTUH1",[[1,8536,"* \n"]],[8535,8535],[8538,8538]]],[1586480727359,["Administrator@WIN-T3FPCJLTUH1",[[-1,8536,"* "]],[8538,8538],[8536,8536]]],[1586480732774,["Administrator@WIN-T3FPCJLTUH1",[[-1,8563,"  "],[-1,8586,"  "],[-1,8603,"  "]],[8565,8698],[8563,8692]]],[1586480738793,["Administrator@WIN-T3FPCJLTUH1",[[-1,8544,"  "],[-1,8559,"  "],[-1,8582,"  "],[-1,8599,"  "],[-1,8693,"  "]],[8546,8696],[8544,8686]]],[1586480770609,["Administrator@WIN-T3FPCJLTUH1",[[1,8741,"### 请解释如下js代码对数组排序后的输出结果？"]],[8741,8741],[8766,8766]]],[1586480772644,["Administrator@WIN-T3FPCJLTUH1",[[1,8776,"\n"]],[8766,8766],[8767,8767]]],[1586480780524,["Administrator@WIN-T3FPCJLTUH1",[[1,8767,"var result = [55, 22, 168]; \nconsole.log(result.sort());"]],[8767,8767],[8823,8823]]],[1586480782274,["Administrator@WIN-T3FPCJLTUH1",[[1,8767,"\n"]],[8766,8766],[8767,8767]]],[1586480784115,["Administrator@WIN-T3FPCJLTUH1",[[1,8767,"```"]],[8767,8767],[8770,8770]]],[1586480784162,["Administrator@WIN-T3FPCJLTUH1",[[1,8770,"language\n```\n"]],[8770,8770],[8770,8778]]],[1586480785779,["Administrator@WIN-T3FPCJLTUH1",[[-1,8770,"language"],[1,8778,"j"]],[8770,8778],[8771,8771]]],[1586480788221,["Administrator@WIN-T3FPCJLTUH1",[[1,8771,"avascri"]],[8771,8771],[8778,8778]]],[1586480790536,["Administrator@WIN-T3FPCJLTUH1",[[1,8778,"pt"]],[8778,8778],[8780,8780]]],[1586480791623,["Administrator@WIN-T3FPCJLTUH1",[[1,8781,"\n"]],[8780,8780],[8781,8781]]],[1586480792586,["Administrator@WIN-T3FPCJLTUH1",[[1,8781,"var result = [55, 22, 168]; \nconsole.log(result.sort());"]],[8781,8781],[8837,8837]]],[1586480794687,["Administrator@WIN-T3FPCJLTUH1",[[-1,8843,"var result = [55, 22, 168]; \nconsole.log(result.sort());\n"]],[8842,8899],[8842,8842]]],[1586480801076,["Administrator@WIN-T3FPCJLTUH1",[[1,8745,"[]"]],[8745,8745],[8747,8747]]],[1586480802173,["Administrator@WIN-T3FPCJLTUH1",[[1,8746,"js"]],[8746,8746],[8748,8748]]],[1586480909253,["Administrator@WIN-T3FPCJLTUH1",[[1,8847,"sort 默认比较的是字符串，并且按照字符编码的顺序进行升序排序"]],[8847,8847],[8879,8879]]],[1586480911829,["Administrator@WIN-T3FPCJLTUH1",[[-1,8851," "]],[8852,8852],[8851,8851]]],[1586480914008,["Administrator@WIN-T3FPCJLTUH1",[[1,8847,"`"],[1,8851,"`"]],[8847,8851],[8847,8853]]],[1586480934600,["Administrator@WIN-T3FPCJLTUH1",[[1,8881,"jieguo"]],[8881,8881],[8887,8887]]],[1586480935744,["Administrator@WIN-T3FPCJLTUH1",[[-1,8881,"jieguo"]],[8887,8887],[8881,8881]]],[1586480940601,["Administrator@WIN-T3FPCJLTUH1",[[1,8881,"结果：{】"]],[8881,8881],[8886,8886]]],[1586480941526,["Administrator@WIN-T3FPCJLTUH1",[[-1,8884,"{】"]],[8886,8886],[8884,8884]]],[1586480942789,["Administrator@WIN-T3FPCJLTUH1",[[1,8884,"[]"]],[8884,8884],[8886,8886]]],[1586480948978,["Administrator@WIN-T3FPCJLTUH1",[[1,8885,"168, 22, 55"]],[8885,8885],[8896,8896]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["3e8288d4-0851-47c4-96d0-1e81d9fb271c",1586571374762,"# 积跬步\n\n## 2020.03.23\n\n### [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n[参考](https://www.cnblogs.com/LisenH/p/11635919.html)\n\n### [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n### [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n### [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n### [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n### [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n### [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n### [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n### [js] [call、apply、bind的用法？](https://www.cnblogs.com/moqiutao/p/7371988.html)\n替换函数运行时的上下文，即`this`指向。\n`call`和`apply`都是在当前调用时临时替换一次，并立即执行函数；\n`bind`则会返回一个内部`this`被替换为指定对象的新函数。\n`call`和`apply`的区别在于`call`需要按顺序传形参，如`Arrray.prototype.slice.call(this, 1, 2)`，`apply`支持除了`this`外，剩余参数是一个数组，如`Arrray.prototype.slice.apply(this, [1, 2])`。\n\n## 2020.03.27\n\n### [js] 在axios中怎样添加授权验证？\n\n[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n\n```javascript\nimport axios from 'axios';\nimport router from './router';\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'https://api.github.com';\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = localStorage.token; //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;\n```\n\n### [js] 如何给localStorage存储的数据设置过期时间？\n\n### [js] 什么是UUID？它有什么作用？用js写一个生成UUID的方法？\nUUID（Universally Unique Identifier, 通用唯一识别码，也叫GUID（Globally Unique IDentifier，全局唯一识别码）。在互联网工程任务组发布的[RFC4122](https://tools.ietf.org/html/rfc4122)文档中介绍，UUID是一种不需要中央机构分配而产生唯一标识符的方式在时间和空间上保持其唯一性。UUID是由128位的二进制数据组成，通常使用32位的十六进制数据表示，并使用连字符连接。其表示格式为8-4-4-4-12。例如：\n\n```\n7e6eeeef-5271-545e-bcd5-eacf6a804e2b\nxxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n```\n\nM中使用4位来表示UUID的版本，N中使用1-3位表示不同的变体。\n项目中用到的写法：\n```javascript\nfunction GET_UUID () {\n  var s = []\n  var hexDigits = '0123456789abcdef'\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n  }\n  s[14] = '4' // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1) // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = '-'\n  var uuid = s.join('')\n  return uuid\n}\n```\n  \n\n\n## 2020.04.02\n\n### [js] 生成1-10000的数组？\n```javascript\nconsole.time();\n// 1.最快的方法：创建数组，填充内容，修改内容\nnew Array(10000).fill(0).map((o,i)=>i+1);\n// 2.使用Array.apply()初始化，修改内容\nArray.apply(null,{length:10000}).map((item,index)=>index+1)\n// 3.for循环\nfor(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}\nconsole.timeEnd()\n// 4.使用Array.from()把一个iterator数据或类数组对象转换成真正的数组，修改内容\nArray.from(new Array(10001).keys()).slice(1);\nArray.from({ length: 10000 }, (_, i) => i+1);\n// 5.使用Generator\n[...function*(i = 1){\n  while(i <= 10000) yield i++;\n}()]\n```\n\n### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。\n\n## 2020.04.07\n\n### [html] 禁止移动端页面缩放？\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1,user-scalable=0\">\n```\n\n### [css] 给文字的color设置渐变？\n`webkit only`\n[案例](https://codepen.io/klain97710/pen/MWwNryE)\n\n### [js] 切换标签窗口后js定时器自动停止了，如何在激活标签后又继续呢？\n想法1：监听页面`visibilitychange`事件\n想法2：`webworker`\n\n## 2020.04.08\n\n### [html] 3像素Bug指的是什么？怎么解决？\nimg标签渲染之后下方会出现几个像素（我用谷歌测试是4px, 火狐3.5px）的空白；\nimg是行内元素，默认`display：inline`; 它与文本的默认行为类似，下边缘是与基线对齐，而不是贴紧容器下边缘，所以会有几像素的空白；\n解决办法：\n1.  把img设置为`display: block`;\n2.  给img和其父元素都设置`vertical-align: top`；让其top对齐而不是baseline对齐；或者给img设置`vertical-align: middle`；\n3.  给img父元素设置`line-height: 0`;\n\n### [js] 看下面代码，判断a和b的类型是否为true？为什么？什么是基本包装类型？\n```javascript\nvar a=1;\nvar b = new Number(1);\ntypeof(a)===typeof(b);\n```\n先说结果，输出是`false`；\na是基本数据类型`number`，b是通过`new`操作符创建的引用类型实例，所以`typeof(b)` 是`object`，因而结果为`false`。\n基本包装类型是`ECMAScript`为了便于操作基本类型值提供的三种特殊的引用类型（`function`）,包括：`Number`、`String`、`Boolean`\n\n### [js] W3C的事件处理和IE的事件处理有哪些区别？\n*   绑定事件 W3C addEventListener ;IE attachEvent\n*   移除事件 W3c removeEventListner;IE detachEvent\n*   阻止默认事件 W3C e.preventDefault; IE window.event.returnValue = false\n*   阻止事件传播 W3C e.stopPropagation; IE winow.event.cancelBuble = true\n[参考](https://blog.csdn.net/weixin_42334281/article/details/102533325)\n\n### [js] DOM0、DOM2、DOM3事件处理方式的区别是什么？\n1. DOM0级事件处理方式：\n    btn.onclick = func;\n    btn.onclick = null;\n2. DOM2级事件处理方式：\n    btn.addEventListener('click', func, false);\n    btn.removeEventListener('click', func, false);\n    btn.attachEvent(\"onclick\", func);//IE\n    btn.detachEvent(\"onclick\", func);//IE\n3. DOM3级事件处理方式：\n    eventUtil.addListener(input, \"textInput\", func);\n    eventUtil 是自定义对象，textInput 是DOM3级事件\n[参考](https://blog.csdn.net/judyge/article/details/51898124)\n\n## 2020.04.09\n\n### [html] 可以给内联元素设置宽高吗？为什么？\n 1. 正常情况下不能设置宽高(可替换内容元素除外例如img、input、textarea)\n 2. 元素被浮动，绝对定位，固定定位后，可以设置宽高\n 3. `display:block,display:inline-block`等后可以设置宽高\n 4. 内联元素的宽高是由其内容决定的，并且在一行显示（可以换行），呈现包裹性,因此设置宽高无效\n\n### [css] 如何解决IE6浮动时产生双倍边距的BUG？\n1. 当块级元素有浮动样式的时候，给元素添加`margin-left`和`margin-right`样式，在ie6下就会出现双倍边距\n2. 给当前元素添加样式，使当前元素不为块，如：`display:inline;display:list-item`这样在元素浮动的时候就不会在ie6下面产生双倍边距的问题了\n\n### [js] parseInt()与Number()的区别？\n1. 类型不同：\n    `parseInt()`是`js`的全局函数；\n    `Number()`还能作为基本包装类型`Number`的构造函数，可以和`new`操作符一起创建变量。\n2. 定义和用法不同：\n    `parseInt()`函数可解析一个字符串，并返回一个整数(或`NaN`)；\n    `Number()`函数把对象的值转换为数字(或`NaN`)。\n    `parseInt(string, radix)`，`string`必须，要被解析的字符串，非`string`自动调`toString`转化；`radix`要解析的数字的基数，即进制。\n    `Number(obj)`，`obj`是`js`对象。\n3. `parseInt()`解析`string`时，忽略第一个空格，任意个0，解析到非数字就停(遇到`0x`后面还有数字时不会停)，更像是正则转化。\n    `Number()`可以解析纯数字`String`、`Boolean`、`Date`、空数组、只有一个元素且是数字或纯数字`String`的数组(如[1])\n参考：[parseInt](https://www.w3school.com.cn/jsref/jsref_parseInt.asp)、[Number](https://www.w3school.com.cn/js/jsref_number.asp)\n\n## 2020.04.10\n\n### [html] 如何解决input在Firefox和Chrome中高度不一致的问题？\n* 原因是`firefox`的`input`的`border-width`、`padding` 受win10系统的文本大小设置影响\n* 设置一样的样式\n\n    ```source-css\n    input{\n        box-sizing:border-box;\n        height:20px;\n    }\n    ```\n\n* 将win10系统的文本大小设置为100%\n\n### [css] 如何让IE6支持min-width和max-width？\n*   利用IE特有的css语法\n\n```css\n.className {\n  max-width:620px;\n  min-width:1px;\n  _width:expression(this.scrollWidth > 620 ? \"620px\":(this.scrollWidth < 1? \"1px\":\"auto\"));\n}\n```\n\n*   [参考文章](https://www.jb51.net/css/76142.html)\n\n### [js]请解释如下js代码对数组排序后的输出结果？\n```javascript\nvar result = [55, 22, 168]; \nconsole.log(result.sort());\n```\n\n`sort`默认比较的是字符串，并且按照字符编码的顺序进行升序排序\n结果：[168, 22, 55]\n\n\n\n\n\n\n\n",[[1586571323020,["Administrator@WIN-T3FPCJLTUH1",[[-1,8367,"source-"]],[8367,8374],[8367,8367]]],[1586571325886,["Administrator@WIN-T3FPCJLTUH1",[[-1,8362,"  "],[-1,8371," "],[-1,8374," "],[-1,8382,"  "],[-1,8419,"  "],[-1,8436,"  "],[-1,8440,"  "]],[8364,8447],[8362,8435]]],[1586571329025,["Administrator@WIN-T3FPCJLTUH1",[[-1,8360,"  "],[-1,8369,"  "],[-1,8378,"  "],[-1,8411,"  "],[-1,8426,"  "],[-1,8430,"  "]],[8362,8435],[8360,8423]]],[1586571337547,["Administrator@WIN-T3FPCJLTUH1",[[-1,8376,"  "],[-1,8401,"  "]],[8378,8417],[8376,8413]]],[1586572638704,["Administrator@WIN-T3FPCJLTUH1",[[1,8864,"## 2020.04.11"]],[8864,8864],[8877,8877]]],[1586572639107,["Administrator@WIN-T3FPCJLTUH1",[[1,8883,"\n"]],[8877,8877],[8878,8878]]],[1586572640122,["Administrator@WIN-T3FPCJLTUH1",[[1,8884,"\n"]],[8878,8878],[8879,8879]]],[1586572641172,["Administrator@WIN-T3FPCJLTUH1",[[1,8879,"##3"]],[8879,8879],[8882,8882]]],[1586572641741,["Administrator@WIN-T3FPCJLTUH1",[[-1,8881,"3"]],[8882,8882],[8881,8881]]],[1586572654744,["Administrator@WIN-T3FPCJLTUH1",[[1,8881,"# 怎么去除img之间存在的间隔缝隙？"]],[8881,8881],[8900,8900]]],[1586572659105,["Administrator@WIN-T3FPCJLTUH1",[[1,8883,"[]"]],[8883,8883],[8885,8885]]],[1586572660465,["Administrator@WIN-T3FPCJLTUH1",[[1,8884,"html"]],[8884,8884],[8888,8888]]],[1586572673689,["Administrator@WIN-T3FPCJLTUH1",[[1,8907,"* img连着写"]],[8907,8907],[8915,8915]]],[1586572678819,["Administrator@WIN-T3FPCJLTUH1",[[1,8912,"标签"]],[8912,8912],[8914,8914]]],[1586572687655,["Administrator@WIN-T3FPCJLTUH1",[[1,8917,"，不空格，不会撤"]],[8917,8917],[8925,8925]]],[1586572688549,["Administrator@WIN-T3FPCJLTUH1",[[-1,8923,"会撤"]],[8925,8925],[8923,8923]]],[1586572689884,["Administrator@WIN-T3FPCJLTUH1",[[1,8923,"回车"]],[8923,8923],[8925,8925]]],[1586572692997,["Administrator@WIN-T3FPCJLTUH1",[[1,8926,"* "]],[8926,8926],[8928,8928]]],[1586572705153,["Administrator@WIN-T3FPCJLTUH1",[[1,8928,"给父元素设置fontsize:0"]],[8928,8928],[8944,8944]]],[1586572707074,["Administrator@WIN-T3FPCJLTUH1",[[1,8938,"-"]],[8938,8938],[8939,8939]]],[1586572709977,["Administrator@WIN-T3FPCJLTUH1",[[-1,8934,"font-size:0"],[1,8945,"·"]],[8934,8934],[8935,8935]]],[1586572711743,["Administrator@WIN-T3FPCJLTUH1",[[1,8934,"font-size:0"],[-1,8934,"·"]],[8935,8935],[8934,8934]]],[1586572715642,["Administrator@WIN-T3FPCJLTUH1",[[1,8934,"`"],[1,8945,"`"]],[8934,8945],[8934,8947]]],[1586573695767,["Administrator@WIN-T3FPCJLTUH1",[[1,8949,"### []"]],[8949,8949],[8955,8955]]],[1586574748018,["Administrator@WIN-T3FPCJLTUH1",[[1,8954,"html"]],[8954,8954],[8958,8958]]],[1586574749052,["Administrator@WIN-T3FPCJLTUH1",[[1,8959," "]],[8959,8959],[8960,8960]]],[1586574752362,["Administrator@WIN-T3FPCJLTUH1",[[1,8889," "]],[8889,8889],[8890,8890]]],[1586574762753,["Administrator@WIN-T3FPCJLTUH1",[[1,8961,"html的img标签为什么要添加alt属性呢？"]],[8961,8961],[8984,8984]]],[1586574765681,["Administrator@WIN-T3FPCJLTUH1",[[1,8986,"\n"]],[8984,8984],[8985,8985]]],[1586574771182,["Administrator@WIN-T3FPCJLTUH1",[[1,8985,"**alt 属性是一个必需的属性，它规定在图像无法显示时的替代文本。**\n\n假设由于一些原因，用户无法查看图像，alt属性可以为图像提供替代的信息。比如：\n\n*   网速太慢\n*   src 属性中的错误\n*   浏览器禁用图像\n*   用户使用的是屏幕阅读器等\n\n**添加alt属性提示文本的好处有哪些：**\n\n1.  有利于SEO优化，让搜索引擎爬虫蜘蛛爬取关键词\n2.  在很多情况下用户无法查看图像，可以让用户明白图片的意思，提高用户体验\n3.  便于百度的图片收录和优化，百度会对网站的title以及alt分析，进而分类进行排序"]],[8985,8985],[9254,9254]]],[1586574895603,["Administrator@WIN-T3FPCJLTUH1",[[-1,9255,"\n"],[1,9256,"\\"]],[9255,9255],[9256,9256]]],[1586574896416,["Administrator@WIN-T3FPCJLTUH1",[[-1,9255,"\\"],[1,9256,"\n"]],[9256,9256],[9255,9255]]],[1586574896674,["Administrator@WIN-T3FPCJLTUH1",[[1,9256,"\n"]],[9255,9255],[9256,9256]]],[1586574898933,["Administrator@WIN-T3FPCJLTUH1",[[-1,9256,"\n"],[1,9257,"#"]],[9256,9256],[9257,9257]]],[1586574900858,["Administrator@WIN-T3FPCJLTUH1",[[1,9257,"## []"]],[9257,9257],[9262,9262]]],[1586574902437,["Administrator@WIN-T3FPCJLTUH1",[[1,9261,"html"]],[9261,9261],[9265,9265]]],[1586574904444,["Administrator@WIN-T3FPCJLTUH1",[[1,9266," 如何禁止长按保存或复制图像？"]],[9266,9266],[9281,9281]]],[1586574905289,["Administrator@WIN-T3FPCJLTUH1",[[1,9281,"\n\n"]],[9281,9281],[9282,9282]]],[1586574912168,["Administrator@WIN-T3FPCJLTUH1",[[1,9282,"img {pointer-event:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;}"]],[9282,9282],[9371,9371]]],[1586575029015,["Administrator@WIN-T3FPCJLTUH1",[[1,9300,"s"]],[9300,9300],[9301,9301]]],[1586575032840,["Administrator@WIN-T3FPCJLTUH1",[[1,9282,"\n"]],[9281,9281],[9282,9282]]],[1586575033957,["Administrator@WIN-T3FPCJLTUH1",[[1,9282,"```"]],[9282,9282],[9285,9285]]],[1586575034009,["Administrator@WIN-T3FPCJLTUH1",[[1,9285,"language\n```\n"]],[9285,9285],[9285,9293]]],[1586575035491,["Administrator@WIN-T3FPCJLTUH1",[[-1,9285,"language"],[1,9293,"h"]],[9285,9293],[9286,9286]]],[1586575036603,["Administrator@WIN-T3FPCJLTUH1",[[-1,9285,"h"]],[9286,9286],[9285,9285]]],[1586575038514,["Administrator@WIN-T3FPCJLTUH1",[[1,9285,"css"]],[9285,9285],[9288,9288]]],[1586575039240,["Administrator@WIN-T3FPCJLTUH1",[[1,9289,"\n"]],[9288,9288],[9289,9289]]],[1586575042864,["Administrator@WIN-T3FPCJLTUH1",[[-1,9295,"img {pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;}"]],[9295,9385],[9295,9295]]],[1586575044228,["Administrator@WIN-T3FPCJLTUH1",[[1,9289,"img {pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;}"]],[9289,9289],[9379,9379]]],[1586575046759,["Administrator@WIN-T3FPCJLTUH1",[[1,9294,"\n"]],[9294,9294],[9295,9295]]],[1586575048942,["Administrator@WIN-T3FPCJLTUH1",[[1,9315,"\n"]],[9315,9315],[9316,9316]]],[1586575050275,["Administrator@WIN-T3FPCJLTUH1",[[1,9341,"\n"]],[9341,9341],[9342,9342]]],[1586575052144,["Administrator@WIN-T3FPCJLTUH1",[[1,9364,"\n"]],[9364,9364],[9365,9365]]],[1586575053352,["Administrator@WIN-T3FPCJLTUH1",[[1,9382,"\n"]],[9382,9382],[9383,9383]]],[1586575092291,["Administrator@WIN-T3FPCJLTUH1",[[1,9295,"  "],[1,9316,"  "],[1,9342,"  "],[1,9365,"  "]],[9295,9382],[9295,9390]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["e19abd6c-6c5e-4ea2-99d2-566b47789f5a",1586739691043,"# 积跬步\n\n## 2020.03.23\n\n### [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n[参考](https://www.cnblogs.com/LisenH/p/11635919.html)\n\n### [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n### [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n### [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n### [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n### [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n### [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n### [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n### [js] [call、apply、bind的用法？](https://www.cnblogs.com/moqiutao/p/7371988.html)\n替换函数运行时的上下文，即`this`指向。\n`call`和`apply`都是在当前调用时临时替换一次，并立即执行函数；\n`bind`则会返回一个内部`this`被替换为指定对象的新函数。\n`call`和`apply`的区别在于`call`需要按顺序传形参，如`Arrray.prototype.slice.call(this, 1, 2)`，`apply`支持除了`this`外，剩余参数是一个数组，如`Arrray.prototype.slice.apply(this, [1, 2])`。\n\n## 2020.03.27\n\n### [js] 在axios中怎样添加授权验证？\n\n[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n\n```javascript\nimport axios from 'axios';\nimport router from './router';\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'https://api.github.com';\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = localStorage.token; //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;\n```\n\n### [js] 如何给localStorage存储的数据设置过期时间？\n\n### [js] 什么是UUID？它有什么作用？用js写一个生成UUID的方法？\nUUID（Universally Unique Identifier, 通用唯一识别码，也叫GUID（Globally Unique IDentifier，全局唯一识别码）。在互联网工程任务组发布的[RFC4122](https://tools.ietf.org/html/rfc4122)文档中介绍，UUID是一种不需要中央机构分配而产生唯一标识符的方式在时间和空间上保持其唯一性。UUID是由128位的二进制数据组成，通常使用32位的十六进制数据表示，并使用连字符连接。其表示格式为8-4-4-4-12。例如：\n\n```\n7e6eeeef-5271-545e-bcd5-eacf6a804e2b\nxxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n```\n\nM中使用4位来表示UUID的版本，N中使用1-3位表示不同的变体。\n项目中用到的写法：\n```javascript\nfunction GET_UUID () {\n  var s = []\n  var hexDigits = '0123456789abcdef'\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n  }\n  s[14] = '4' // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1) // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = '-'\n  var uuid = s.join('')\n  return uuid\n}\n```\n  \n\n\n## 2020.04.02\n\n### [js] 生成1-10000的数组？\n```javascript\nconsole.time();\n// 1.最快的方法：创建数组，填充内容，修改内容\nnew Array(10000).fill(0).map((o,i)=>i+1);\n// 2.使用Array.apply()初始化，修改内容\nArray.apply(null,{length:10000}).map((item,index)=>index+1)\n// 3.for循环\nfor(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}\nconsole.timeEnd()\n// 4.使用Array.from()把一个iterator数据或类数组对象转换成真正的数组，修改内容\nArray.from(new Array(10001).keys()).slice(1);\nArray.from({ length: 10000 }, (_, i) => i+1);\n// 5.使用Generator\n[...function*(i = 1){\n  while(i <= 10000) yield i++;\n}()]\n```\n\n### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。\n\n## 2020.04.07\n\n### [html] 禁止移动端页面缩放？\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1,user-scalable=0\">\n```\n\n### [css] 给文字的color设置渐变？\n`webkit only`\n[案例](https://codepen.io/klain97710/pen/MWwNryE)\n\n### [js] 切换标签窗口后js定时器自动停止了，如何在激活标签后又继续呢？\n想法1：监听页面`visibilitychange`事件\n想法2：`webworker`\n\n## 2020.04.08\n\n### [html] 3像素Bug指的是什么？怎么解决？\nimg标签渲染之后下方会出现几个像素（我用谷歌测试是4px, 火狐3.5px）的空白；\nimg是行内元素，默认`display：inline`; 它与文本的默认行为类似，下边缘是与基线对齐，而不是贴紧容器下边缘，所以会有几像素的空白；\n解决办法：\n1.  把img设置为`display: block`;\n2.  给img和其父元素都设置`vertical-align: top`；让其top对齐而不是baseline对齐；或者给img设置`vertical-align: middle`；\n3.  给img父元素设置`line-height: 0`;\n\n### [js] 看下面代码，判断a和b的类型是否为true？为什么？什么是基本包装类型？\n```javascript\nvar a=1;\nvar b = new Number(1);\ntypeof(a)===typeof(b);\n```\n先说结果，输出是`false`；\na是基本数据类型`number`，b是通过`new`操作符创建的引用类型实例，所以`typeof(b)` 是`object`，因而结果为`false`。\n基本包装类型是`ECMAScript`为了便于操作基本类型值提供的三种特殊的引用类型（`function`）,包括：`Number`、`String`、`Boolean`\n\n### [js] W3C的事件处理和IE的事件处理有哪些区别？\n*   绑定事件 W3C addEventListener ;IE attachEvent\n*   移除事件 W3c removeEventListner;IE detachEvent\n*   阻止默认事件 W3C e.preventDefault; IE window.event.returnValue = false\n*   阻止事件传播 W3C e.stopPropagation; IE winow.event.cancelBuble = true\n[参考](https://blog.csdn.net/weixin_42334281/article/details/102533325)\n\n### [js] DOM0、DOM2、DOM3事件处理方式的区别是什么？\n1. DOM0级事件处理方式：\n    btn.onclick = func;\n    btn.onclick = null;\n2. DOM2级事件处理方式：\n    btn.addEventListener('click', func, false);\n    btn.removeEventListener('click', func, false);\n    btn.attachEvent(\"onclick\", func);//IE\n    btn.detachEvent(\"onclick\", func);//IE\n3. DOM3级事件处理方式：\n    eventUtil.addListener(input, \"textInput\", func);\n    eventUtil 是自定义对象，textInput 是DOM3级事件\n[参考](https://blog.csdn.net/judyge/article/details/51898124)\n\n## 2020.04.09\n\n### [html] 可以给内联元素设置宽高吗？为什么？\n 1. 正常情况下不能设置宽高(可替换内容元素除外例如img、input、textarea)\n 2. 元素被浮动，绝对定位，固定定位后，可以设置宽高\n 3. `display:block,display:inline-block`等后可以设置宽高\n 4. 内联元素的宽高是由其内容决定的，并且在一行显示（可以换行），呈现包裹性,因此设置宽高无效\n\n### [css] 如何解决IE6浮动时产生双倍边距的BUG？\n1. 当块级元素有浮动样式的时候，给元素添加`margin-left`和`margin-right`样式，在ie6下就会出现双倍边距\n2. 给当前元素添加样式，使当前元素不为块，如：`display:inline;display:list-item`这样在元素浮动的时候就不会在ie6下面产生双倍边距的问题了\n\n### [js] parseInt()与Number()的区别？\n1. 类型不同：\n    `parseInt()`是`js`的全局函数；\n    `Number()`还能作为基本包装类型`Number`的构造函数，可以和`new`操作符一起创建变量。\n2. 定义和用法不同：\n    `parseInt()`函数可解析一个字符串，并返回一个整数(或`NaN`)；\n    `Number()`函数把对象的值转换为数字(或`NaN`)。\n    `parseInt(string, radix)`，`string`必须，要被解析的字符串，非`string`自动调`toString`转化；`radix`要解析的数字的基数，即进制。\n    `Number(obj)`，`obj`是`js`对象。\n3. `parseInt()`解析`string`时，忽略第一个空格，任意个0，解析到非数字就停(遇到`0x`后面还有数字时不会停)，更像是正则转化。\n    `Number()`可以解析纯数字`String`、`Boolean`、`Date`、空数组、只有一个元素且是数字或纯数字`String`的数组(如[1])\n参考：[parseInt](https://www.w3school.com.cn/jsref/jsref_parseInt.asp)、[Number](https://www.w3school.com.cn/js/jsref_number.asp)\n\n## 2020.04.10\n\n### [html] 如何解决input在Firefox和Chrome中高度不一致的问题？\n* 原因是`firefox`的`input`的`border-width`、`padding` 受win10系统的文本大小设置影响\n* 设置一样的样式\n\n```css\ninput{\n  box-sizing:border-box;\n  height:20px;\n}\n```\n\n* 将win10系统的文本大小设置为100%\n\n### [css] 如何让IE6支持min-width和max-width？\n*   利用IE特有的css语法\n\n```css\n.className {\n  max-width:620px;\n  min-width:1px;\n  _width:expression(this.scrollWidth > 620 ? \"620px\":(this.scrollWidth < 1? \"1px\":\"auto\"));\n}\n```\n\n*   [参考文章](https://www.jb51.net/css/76142.html)\n\n### [js]请解释如下js代码对数组排序后的输出结果？\n```javascript\nvar result = [55, 22, 168]; \nconsole.log(result.sort());\n```\n\n`sort`默认比较的是字符串，并且按照字符编码的顺序进行升序排序\n结果：[168, 22, 55]\n\n## 2020.04.11\n\n### [html] 怎么去除img之间存在的间隔缝隙？\n* img标签连着写，不空格，不回车\n* 给父元素设置`font-size:0`\n\n### [html] html的img标签为什么要添加alt属性呢？\n**alt 属性是一个必需的属性，它规定在图像无法显示时的替代文本。**\n\n假设由于一些原因，用户无法查看图像，alt属性可以为图像提供替代的信息。比如：\n\n*   网速太慢\n*   src 属性中的错误\n*   浏览器禁用图像\n*   用户使用的是屏幕阅读器等\n\n**添加alt属性提示文本的好处有哪些：**\n\n1.  有利于SEO优化，让搜索引擎爬虫蜘蛛爬取关键词\n2.  在很多情况下用户无法查看图像，可以让用户明白图片的意思，提高用户体验\n3.  便于百度的图片收录和优化，百度会对网站的title以及alt分析，进而分类进行排序\n\n### [html] 如何禁止长按保存或复制图像？\n```css\nimg {\n  pointer-events:none;\n  -webkit-user-select:none;\n  -moz-user-select:none;\n  user-select:none;\n}\n```\n\n\n",[[1586739679949,["Administrator@WIN-T3FPCJLTUH1",[[1,9399,"\n"]],[9398,9398],[9399,9399]]],[1586739680570,["Administrator@WIN-T3FPCJLTUH1",[[1,9400,"\n"]],[9399,9399],[9400,9400]]],[1586739681494,["Administrator@WIN-T3FPCJLTUH1",[[1,9401,"\n"]],[9400,9400],[9401,9401]]],[1586739682039,["Administrator@WIN-T3FPCJLTUH1",[[1,9402,"\n"]],[9401,9401],[9402,9402]]],[1586739682426,["Administrator@WIN-T3FPCJLTUH1",[[1,9403,"\n"]],[9402,9402],[9403,9403]]],[1586739683276,["Administrator@WIN-T3FPCJLTUH1",[[1,9404,"\n"]],[9403,9403],[9404,9404]]],[1586739685801,["Administrator@WIN-T3FPCJLTUH1",[[1,9405,"\n"]],[9404,9404],[9405,9405]]],[1586739686092,["Administrator@WIN-T3FPCJLTUH1",[[1,9406,"\n"]],[9405,9405],[9406,9406]]],[1586739686481,["Administrator@WIN-T3FPCJLTUH1",[[1,9407,"\n"]],[9406,9406],[9407,9407]]],[1586739686697,["Administrator@WIN-T3FPCJLTUH1",[[1,9408,"\n"]],[9407,9407],[9408,9408]]],[1586739687255,["Administrator@WIN-T3FPCJLTUH1",[[1,9409,"\n"]],[9408,9408],[9409,9409]]],[1586739687334,["Administrator@WIN-T3FPCJLTUH1",[[1,9410,"\n"]],[9409,9409],[9410,9410]]],[1586739687783,["Administrator@WIN-T3FPCJLTUH1",[[1,9411,"\n"]],[9410,9410],[9411,9411]]],[1586739688090,["Administrator@WIN-T3FPCJLTUH1",[[1,9412,"\n"]],[9411,9411],[9412,9412]]],[1586739688466,["Administrator@WIN-T3FPCJLTUH1",[[1,9413,"\n"]],[9412,9412],[9413,9413]]],[1586739688825,["Administrator@WIN-T3FPCJLTUH1",[[1,9414,"\n"]],[9413,9413],[9414,9414]]],[1586739689211,["Administrator@WIN-T3FPCJLTUH1",[[1,9415,"\n"]],[9414,9414],[9415,9415]]],[1586739689679,["Administrator@WIN-T3FPCJLTUH1",[[1,9416,"\n"]],[9415,9415],[9416,9416]]],[1586744612050,["Administrator@WIN-T3FPCJLTUH1",[[1,9398,"###"]],[9398,9398],[9401,9401]]],[1586744613035,["Administrator@WIN-T3FPCJLTUH1",[[-1,9400,"#"]],[9401,9401],[9400,9400]]],[1586744613206,["Administrator@WIN-T3FPCJLTUH1",[[1,9400," "]],[9400,9400],[9401,9401]]],[1586744673566,[null,[[1,9420,"\n\n"]],[9420,9420],[9422,9422]]],[1586744673566,[null,[[-1,9420,"\n\n"]],[9422,9422],[9420,9420]]],[1586744617193,["Administrator@WIN-T3FPCJLTUH1",[[1,9401,"2020.04.31"]],[9401,9401],[9411,9411]]],[1586744618403,["Administrator@WIN-T3FPCJLTUH1",[[-1,9409,"31"]],[9411,9411],[9409,9409]]],[1586744619079,["Administrator@WIN-T3FPCJLTUH1",[[1,9409,"13"]],[9409,9409],[9411,9411]]],[1586744647564,["Administrator@WIN-T3FPCJLTUH1",[[1,9413,"### [css] ## CSS中height:100%和height:inherit的异同"]],[9413,9413],[9459,9459]]],[1586744649426,["Administrator@WIN-T3FPCJLTUH1",[[-1,9423,"## "]],[9426,9426],[9423,9423]]],[1586744661687,["Administrator@WIN-T3FPCJLTUH1",[[1,9456,"？"]],[9456,9456],[9457,9457]]],[1586744662937,["Administrator@WIN-T3FPCJLTUH1",[[1,9476,"\n"]],[9457,9457],[9458,9458]]],[1586744973571,[null,[[1,9475,"\n\n"]],[9475,9475],[9477,9477]]],[1586744973571,[null,[[-1,9475,"\n\n"]],[9477,9477],[9475,9475]]],[1586744929421,["Administrator@WIN-T3FPCJLTUH1",[[1,9458,"**1\\. 兼容性差异**\n`height:100%` IE6+ √\n`height:inherit` IE8+ √\n\n**2\\. 大多数情况作用是一样的**\n除去兼容性，大多数情况下，两者作用是一样的，甚至都很难想出不一样的理由。\n\n① 父容器`height: auto`，无论`height:100%`或者`height:inherit`表现都是`auto`.\n② 父容器定高`height: 100px`，无论`height:100%`或者`height:inherit`表现都是`100px`高."]],[9458,9458],[9710,9710]]],[1586744938268,["Administrator@WIN-T3FPCJLTUH1",[[-1,9461,"\\"]],[9462,9462],[9461,9461]]],[1586744940558,["Administrator@WIN-T3FPCJLTUH1",[[-1,9520,"\\"]],[9521,9521],[9520,9520]]],[1586745033572,[null,[[1,9725,"\n\n"]],[9725,9725],[9727,9727]]],[1586745033572,[null,[[-1,9725,"\n\n"]],[9727,9727],[9725,9725]]],[1586744979278,["Administrator@WIN-T3FPCJLTUH1",[[1,9710,"**3\\. 绝对定位大不同**\n当子元素为绝对定位元素，同时，父容器的`position`值为`static`的时候，呵呵呵，`height:100%`和`height:inherit`的差异就可以明显体现出来了！"]],[9710,9710],[9817,9817]]],[1586744981785,["Administrator@WIN-T3FPCJLTUH1",[[-1,9713,"\\"]],[9714,9714],[9713,9713]]],[1586744986985,["Administrator@WIN-T3FPCJLTUH1",[[-1,9768,"呵呵呵，"]],[9767,9771],[9767,9767]]],[1586745093649,[null,[[1,9827,"\n\n"]],[9827,9827],[9829,9829]]],[1586745093649,[null,[[-1,9827,"\n\n"]],[9829,9829],[9827,9827]]],[1586745057848,["Administrator@WIN-T3FPCJLTUH1",[[1,9813,"[https://codepen.io/klain97710/pen/JjYdrWa](https://codepen.io/klain97710/pen/JjYdrWa)"]],[9813,9813],[9899,9899]]],[1586745093512,["Administrator@WIN-T3FPCJLTUH1",[[-1,9484," "],[1,9485," "],[-1,9489," "],[1,9490," "],[-1,9508," "],[1,9509," "],[-1,9513," "],[1,9514," "],[1,9901,"###"]],[9901,9901],[9904,9904]]],[1586745153643,[null,[[1,9916,"\n\n"]],[9916,9916],[9918,9918]]],[1586745153643,[null,[[-1,9916,"\n\n"]],[9918,9918],[9916,9916]]],[1586745113432,["Administrator@WIN-T3FPCJLTUH1",[[1,9904," ## [css] 当使用@font-face的时候，为什么src中要加入local呢？"]],[9904,9904],[9948,9948]]],[1586745115748,["Administrator@WIN-T3FPCJLTUH1",[[-1,9905,"## "]],[9908,9908],[9905,9905]]],[1586745213645,[null,[[1,9957,"\n\n"]],[9957,9957],[9959,9959]]],[1586745213645,[null,[[-1,9957,"\n\n"]],[9959,9959],[9957,9957]]],[1586745156927,["Administrator@WIN-T3FPCJLTUH1",[[1,9946,"代码：\n\n@font-face {\n  font-family: MyHelvetica;\n  src: local(\"Helvetica Neue Bold\"),\n  local(\"HelveticaNeue-Bold\"),\n  url(MgOpenModernaBold.ttf);\n  font-weight: bold;\n}\n用到了用户本地字体\"Helvetica Neue Bold\"的备份；如果当前用户(浏览器)未安装该字体(两种可能的字体名都已经试过)，就会用下载的字体\"MgOpenModernaBold.ttf\"来代替。意味着加入local后，代码加载时会优先采用电脑资源，而不是从网络加载，这个可以加快加载速度，提升用户体验感。\n————————————————\n版权声明：本文为CSDN博主「MyKyle18」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_18547381/article/details/104212677"]],[9946,9946],[10420,10420]]],[1586745161286,["Administrator@WIN-T3FPCJLTUH1",[[-1,10271,"————————————————\n版权声明：本文为CSDN博主「MyKyle18」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_18547381/article/details/104212677\n"]],[10270,10420],[10270,10270]]],[1586745170524,["Administrator@WIN-T3FPCJLTUH1",[[-1,9950,"\n"]],[9950,9950],[9949,9949]]],[1586745171697,["Administrator@WIN-T3FPCJLTUH1",[[-1,9946,"代码："]],[9949,9949],[9946,9946]]],[1586745173107,["Administrator@WIN-T3FPCJLTUH1",[[1,9946,"```"]],[9946,9946],[9949,9949]]],[1586745173163,["Administrator@WIN-T3FPCJLTUH1",[[1,9949,"language\n```\n"]],[9949,9949],[9949,9957]]],[1586745175608,["Administrator@WIN-T3FPCJLTUH1",[[-1,9949,"language"],[1,9957,"c"]],[9949,9957],[9950,9950]]],[1586745176000,["Administrator@WIN-T3FPCJLTUH1",[[1,9950,"ss"]],[9950,9950],[9952,9952]]],[1586745178957,["Administrator@WIN-T3FPCJLTUH1",[[-1,9958,"@font-face {\n  font-family: MyHelvetica;\n  src: local(\"Helvetica Neue Bold\"),\n  local(\"HelveticaNeue-Bold\"),\n  url(MgOpenModernaBold.ttf);\n  font-weight: bold;\n}"]],[9958,10119],[9958,9958]]],[1586745181631,["Administrator@WIN-T3FPCJLTUH1",[[1,9953,"\n"]],[9952,9952],[9953,9953]]],[1586745182606,["Administrator@WIN-T3FPCJLTUH1",[[1,9953,"@font-face {\n  font-family: MyHelvetica;\n  src: local(\"Helvetica Neue Bold\"),\n  local(\"HelveticaNeue-Bold\"),\n  url(MgOpenModernaBold.ttf);\n  font-weight: bold;\n}"]],[9953,9953],[10114,10114]]],[1586745185401,["Administrator@WIN-T3FPCJLTUH1",[[-1,10120,"\n"]],[10120,10120],[10119,10119]]],[1586745186216,["Administrator@WIN-T3FPCJLTUH1",[[-1,10119,"\n"]],[10119,10119],[10118,10118]]],[1586745273740,[null,[[1,10287,"\n\n"]],[10287,10287],[10289,10289]]],[1586745273740,[null,[[-1,10287,"\n\n"]],[10289,10289],[10287,10287]]],[1586745222594,["Administrator@WIN-T3FPCJLTUH1",[[1,9946,"\n"]],[9945,9945],[9946,9946]]],[1586745222901,["Administrator@WIN-T3FPCJLTUH1",[[1,9946,"MDN的   @font-face   这是一个CSS @规则 ，它允许网页开发者为其网页指定在线字体。 通过这种作者自备字体的方式，@font-face 可以消除对用户电脑字体的依赖。\n\nsrc\n远程字体文件位置的URL或者用户计算机上的字体名称， 可以使用local语法通过名称指定用户的本地计算机上的字体( i.e. src: local('Arial'); )。 如果找不到该字体，将会尝试其他来源，直到找到它。\n————————————————\n版权声明：本文为CSDN博主「MyKyle18」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_18547381/article/details/104212677"]],[9946,9946],[10306,10306]]],[1586745226519,["Administrator@WIN-T3FPCJLTUH1",[[-1,10157,"————————————————\n版权声明：本文为CSDN博主「MyKyle18」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_18547381/article/details/104212677\n"]],[10156,10306],[10156,10156]]],[1586745241752,["Administrator@WIN-T3FPCJLTUH1",[[-1,10040,"\n"]],[10040,10040],[10039,10039]]],[1586745249444,["Administrator@WIN-T3FPCJLTUH1",[[-1,9946,"MDN的   @font-face   这是一个CSS @规则 ，它允许网页开发者为其网页指定在线字体。 通过这种作者自备字体的方式，@font-face 可以消除对用户电脑字体的依赖。\nsrc\n远程字体文件位置的URL或者用户计算机上的字体名称， 可以使用local语法通过名称指定用户的本地计算机上的字体( i.e. src: local('Arial'); )。 如果找不到该字体，将会尝试其他来源，直到找到它。"]],[9946,10155],[9946,9946]]],[1586745251387,["Administrator@WIN-T3FPCJLTUH1",[[-1,9946,"\n"]],[9946,9946],[9945,9945]]],[1586745269987,["Administrator@WIN-T3FPCJLTUH1",[[1,10278,"### []"]],[10278,10278],[10284,10284]]],[1586745270994,["Administrator@WIN-T3FPCJLTUH1",[[1,10283,"js"]],[10283,10283],[10285,10285]]],[1586745273548,["Administrator@WIN-T3FPCJLTUH1",[[1,10286," axios"]],[10286,10286],[10292,10292]]],[1586745333735,[null,[[1,10301,"\n\n"]],[10301,10301],[10303,10303]]],[1586745333735,[null,[[-1,10301,"\n\n"]],[10303,10303],[10301,10301]]],[1586745282826,["Administrator@WIN-T3FPCJLTUH1",[[1,10292,"如何一次发送多个请求？"]],[10292,10292],[10303,10303]]],[1586745283868,["Administrator@WIN-T3FPCJLTUH1",[[1,10314,"\n"]],[10303,10303],[10304,10304]]],[1586745284441,["Administrator@WIN-T3FPCJLTUH1",[[1,10315,"\n"]],[10304,10304],[10305,10305]]],[1586745393743,[null,[[1,10314,"\n\n"]],[10314,10314],[10316,10316]]],[1586745393743,[null,[[-1,10314,"\n\n"]],[10316,10316],[10314,10314]]],[1586745333982,["Administrator@WIN-T3FPCJLTUH1",[[1,10304,"1.  axios.all([getUserAccount(),getUserPermissions()])\n\n2.  .then(axios.spread(function(acct,perms){\n\n3.  //当这两个请求都完成的时候会触发这个函数，两个参数分别代表返回的结果"]],[10304,10304],[10445,10445]]],[1586745338299,["Administrator@WIN-T3FPCJLTUH1",[[-1,10406,"3. "]],[10406,10409],[10406,10406]]],[1586745339424,["Administrator@WIN-T3FPCJLTUH1",[[-1,10360,"2.  "]],[10360,10364],[10360,10360]]],[1586745340639,["Administrator@WIN-T3FPCJLTUH1",[[-1,10304,"1.  "]],[10304,10308],[10304,10304]]],[1586745341925,["Administrator@WIN-T3FPCJLTUH1",[[1,10304,"\n"]],[10303,10303],[10304,10304]]],[1586745343257,["Administrator@WIN-T3FPCJLTUH1",[[1,10304,"```"]],[10304,10304],[10307,10307]]],[1586745343313,["Administrator@WIN-T3FPCJLTUH1",[[1,10307,"language\n```\n"]],[10307,10307],[10307,10315]]],[1586745343949,["Administrator@WIN-T3FPCJLTUH1",[[-1,10307,"language"],[1,10315,"j"]],[10307,10315],[10308,10308]]],[1586745345512,["Administrator@WIN-T3FPCJLTUH1",[[1,10308,"avascript"]],[10308,10308],[10317,10317]]],[1586745345797,["Administrator@WIN-T3FPCJLTUH1",[[1,10318,"\n"]],[10317,10317],[10318,10318]]],[1586745346824,["Administrator@WIN-T3FPCJLTUH1",[[1,10318,"1.  axios.all([getUserAccount(),getUserPermissions()])\n\n2.  .then(axios.spread(function(acct,perms){\n\n3.  //当这两个请求都完成的时候会触发这个函数，两个参数分别代表返回的结果"]],[10318,10318],[10459,10459]]],[1586745349104,["Administrator@WIN-T3FPCJLTUH1",[[-1,10465,"axios.all([getUserAccount(),getUserPermissions()])\n\n.then(axios.spread(function(acct,perms){\n\n //当这两个请求都完成的时候会触发这个函数，两个参数分别代表返回的结果"]],[10465,10595],[10465,10465]]],[1586745349658,["Administrator@WIN-T3FPCJLTUH1",[[-1,10476,"\n"]],[10465,10465],[10464,10464]]],[1586745351429,["Administrator@WIN-T3FPCJLTUH1",[[-1,10420,"3.  "]],[10420,10424],[10420,10420]]],[1586745352592,["Administrator@WIN-T3FPCJLTUH1",[[-1,10374,"2.  "]],[10374,10378],[10374,10374]]],[1586745355497,["Administrator@WIN-T3FPCJLTUH1",[[-1,10318,"1.  "]],[10321,10321],[10318,10318]]],[1586745357194,["Administrator@WIN-T3FPCJLTUH1",[[-1,10369,"\n"]],[10370,10370],[10369,10369]]],[1586745357787,["Administrator@WIN-T3FPCJLTUH1",[[-1,10368,"\n"]],[10369,10369],[10368,10368]]],[1586745372678,["Administrator@WIN-T3FPCJLTUH1",[[1,10328,"\n"]],[10328,10328],[10329,10329]]],[1586745374518,["Administrator@WIN-T3FPCJLTUH1",[[1,10329,"  "]],[10329,10329],[10331,10331]]],[1586745382837,["Administrator@WIN-T3FPCJLTUH1",[[1,10370,"\n  "]],[10370,10370],[10373,10373]]],[1586745384513,["Administrator@WIN-T3FPCJLTUH1",[[-1,10371,"  "]],[10373,10373],[10371,10371]]],[1586745391254,["Administrator@WIN-T3FPCJLTUH1",[[-1,10329,"  "]],[10329,10331],[10329,10329]]],[1586745391622,["Administrator@WIN-T3FPCJLTUH1",[[-1,10328,"\n"]],[10329,10329],[10328,10328]]],[1586745393550,["Administrator@WIN-T3FPCJLTUH1",[[1,10329,"\n"]],[10329,10329],[10330,10330]]],[1586745453738,[null,[[1,10463,"\n"]],[10463,10463],[10464,10464]]],[1586745453738,[null,[[-1,10463,"\n"]],[10464,10464],[10463,10463]]],[1586745395837,["Administrator@WIN-T3FPCJLTUH1",[[1,10330,"  "]],[10330,10330],[10332,10332]]],[1586745397276,["Administrator@WIN-T3FPCJLTUH1",[[1,10349,"["]],[10349,10349],[10350,10350]]],[1586745398172,["Administrator@WIN-T3FPCJLTUH1",[[-1,10349,"["]],[10350,10350],[10349,10349]]],[1586745398357,["Administrator@WIN-T3FPCJLTUH1",[[1,10349,"\n  "]],[10349,10349],[10352,10352]]],[1586745401697,["Administrator@WIN-T3FPCJLTUH1",[[1,10372,"\n  "]],[10372,10372],[10375,10375]]],[1586745404117,["Administrator@WIN-T3FPCJLTUH1",[[-1,10376,"\n"]],[10376,10377],[10376,10376]]],[1586745405390,["Administrator@WIN-T3FPCJLTUH1",[[-1,10373,"  "]],[10375,10375],[10373,10373]]],[1586745411920,["Administrator@WIN-T3FPCJLTUH1",[[1,10453,"\n"]],[10452,10452],[10453,10453]]],[1586745412943,["Administrator@WIN-T3FPCJLTUH1",[[1,10453,"}"]],[10453,10453],[10454,10454]]],[1586745415872,["Administrator@WIN-T3FPCJLTUH1",[[1,10375,"\n"]],[10375,10375],[10376,10376]]],[1586745420336,["Administrator@WIN-T3FPCJLTUH1",[[-1,10417,"\n"]],[10417,10417],[10416,10416]]],[1586745633740,[null,[[1,10470,"\n"]],[10470,10470],[10471,10471]]],[1586745633740,[null,[[-1,10470,"\n"]],[10471,10471],[10470,10470]]],[1586745580385,["Administrator@WIN-T3FPCJLTUH1",[[1,10460,"### []"]],[10460,10460],[10466,10466]]],[1586745581842,["Administrator@WIN-T3FPCJLTUH1",[[1,10465,"js"]],[10465,10465],[10467,10467]]],[1586745587860,["Administrator@WIN-T3FPCJLTUH1",[[1,10468," 这两种展开运算符的方式有什么区别呢？"]],[10468,10468],[10487,10487]]],[1586745604476,["Administrator@WIN-T3FPCJLTUH1",[[1,10488,"```\nconst o1 = { ...obj, o3 }\n\nconst o2 = { ...obj, o3: { ...o3 } }\n```"]],[10488,10488],[10559,10559]]],[1586745608387,["Administrator@WIN-T3FPCJLTUH1",[[1,10491,"javascript"]],[10491,10491],[10501,10501]]],[1586745631033,["Administrator@WIN-T3FPCJLTUH1",[[1,10570,"<h4>...展开运算符是一个浅拷贝</h4>\n\n<ul>\n\n<li>浅拷贝是不会拷贝原型链上的东西</li>\n\n<li>所以a = {...a}要慎重...</li>\n\n<li>比如以下代码</li>\n\n</ul>"]],[10570,10570],[10678,10678]]],[1586745693742,[null,[[1,10686,"\n"]],[10686,10686],[10687,10687]]],[1586745693742,[null,[[-1,10686,"\n"]],[10687,10687],[10686,10686]]],[1586745648140,["Administrator@WIN-T3FPCJLTUH1",[[-1,10570,"<h4>"],[1,10574,"#### "],[-1,10588,"</h4>"],[-1,10595,"<ul>\n\n<li>"],[1,10605,"*   "],[-1,10620,"</li>\n\n<li>"],[1,10631,"\n*   "],[-1,10649,"</li>\n\n<li>"],[1,10660,"\n*   "],[-1,10666,"</li>\n\n</ul>\n"]],[10570,10679],[10644,10644]]],[1586745651004,["Administrator@WIN-T3FPCJLTUH1",[[-1,10570,"#### "]],[10570,10575],[10570,10570]]],[1586745668807,["Administrator@WIN-T3FPCJLTUH1",[[-1,10625,"..."]],[10628,10628],[10625,10625]]],[1586745671977,["Administrator@WIN-T3FPCJLTUH1",[[-1,10606,"*   所以a = {...a}要慎重\n*   比如以下代码"]],[10606,10636],[10606,10606]]],[1586745672622,["Administrator@WIN-T3FPCJLTUH1",[[-1,10613,"\n"]],[10606,10606],[10605,10605]]],[1586745673912,["Administrator@WIN-T3FPCJLTUH1",[[-1,10585,"\n*   "]],[10585,10590],[10585,10585]]],[1586745674525,["Administrator@WIN-T3FPCJLTUH1",[[-1,10584,"\n"]],[10585,10585],[10584,10584]]],[1586745675286,["Administrator@WIN-T3FPCJLTUH1",[[1,10584,","]],[10584,10584],[10585,10585]]],[1586745676354,["Administrator@WIN-T3FPCJLTUH1",[[-1,10584,","]],[10585,10585],[10584,10584]]],[1586745677017,["Administrator@WIN-T3FPCJLTUH1",[[1,10584,"，"]],[10584,10584],[10585,10585]]],[1586745683447,["Administrator@WIN-T3FPCJLTUH1",[[-1,10588,"是"]],[10589,10589],[10588,10588]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["a4998f70-9b1e-46b0-a986-b87007feb638",1586847143108,"# 积跬步\n\n## 2020.03.23\n\n### [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n[参考](https://www.cnblogs.com/LisenH/p/11635919.html)\n\n### [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n### [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n### [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n### [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n### [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n### [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n### [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n### [js] [call、apply、bind的用法？](https://www.cnblogs.com/moqiutao/p/7371988.html)\n替换函数运行时的上下文，即`this`指向。\n`call`和`apply`都是在当前调用时临时替换一次，并立即执行函数；\n`bind`则会返回一个内部`this`被替换为指定对象的新函数。\n`call`和`apply`的区别在于`call`需要按顺序传形参，如`Arrray.prototype.slice.call(this, 1, 2)`，`apply`支持除了`this`外，剩余参数是一个数组，如`Arrray.prototype.slice.apply(this, [1, 2])`。\n\n## 2020.03.27\n\n### [js] 在axios中怎样添加授权验证？\n\n[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n\n```javascript\nimport axios from 'axios';\nimport router from './router';\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'https://api.github.com';\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = localStorage.token; //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;\n```\n\n### [js] 如何给localStorage存储的数据设置过期时间？\n\n### [js] 什么是UUID？它有什么作用？用js写一个生成UUID的方法？\nUUID（Universally Unique Identifier, 通用唯一识别码，也叫GUID（Globally Unique IDentifier，全局唯一识别码）。在互联网工程任务组发布的[RFC4122](https://tools.ietf.org/html/rfc4122)文档中介绍，UUID是一种不需要中央机构分配而产生唯一标识符的方式在时间和空间上保持其唯一性。UUID是由128位的二进制数据组成，通常使用32位的十六进制数据表示，并使用连字符连接。其表示格式为8-4-4-4-12。例如：\n\n```\n7e6eeeef-5271-545e-bcd5-eacf6a804e2b\nxxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n```\n\nM中使用4位来表示UUID的版本，N中使用1-3位表示不同的变体。\n项目中用到的写法：\n```javascript\nfunction GET_UUID () {\n  var s = []\n  var hexDigits = '0123456789abcdef'\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n  }\n  s[14] = '4' // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1) // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = '-'\n  var uuid = s.join('')\n  return uuid\n}\n```\n  \n\n\n## 2020.04.02\n\n### [js] 生成1-10000的数组？\n```javascript\nconsole.time();\n// 1.最快的方法：创建数组，填充内容，修改内容\nnew Array(10000).fill(0).map((o,i)=>i+1);\n// 2.使用Array.apply()初始化，修改内容\nArray.apply(null,{length:10000}).map((item,index)=>index+1)\n// 3.for循环\nfor(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}\nconsole.timeEnd()\n// 4.使用Array.from()把一个iterator数据或类数组对象转换成真正的数组，修改内容\nArray.from(new Array(10001).keys()).slice(1);\nArray.from({ length: 10000 }, (_, i) => i+1);\n// 5.使用Generator\n[...function*(i = 1){\n  while(i <= 10000) yield i++;\n}()]\n```\n\n### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。\n\n## 2020.04.07\n\n### [html] 禁止移动端页面缩放？\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1,user-scalable=0\">\n```\n\n### [css] 给文字的color设置渐变？\n`webkit only`\n[案例](https://codepen.io/klain97710/pen/MWwNryE)\n\n### [js] 切换标签窗口后js定时器自动停止了，如何在激活标签后又继续呢？\n想法1：监听页面`visibilitychange`事件\n想法2：`webworker`\n\n## 2020.04.08\n\n### [html] 3像素Bug指的是什么？怎么解决？\nimg标签渲染之后下方会出现几个像素（我用谷歌测试是4px, 火狐3.5px）的空白；\nimg是行内元素，默认`display：inline`; 它与文本的默认行为类似，下边缘是与基线对齐，而不是贴紧容器下边缘，所以会有几像素的空白；\n解决办法：\n1.  把img设置为`display: block`;\n2.  给img和其父元素都设置`vertical-align: top`；让其top对齐而不是baseline对齐；或者给img设置`vertical-align: middle`；\n3.  给img父元素设置`line-height: 0`;\n\n### [js] 看下面代码，判断a和b的类型是否为true？为什么？什么是基本包装类型？\n```javascript\nvar a=1;\nvar b = new Number(1);\ntypeof(a)===typeof(b);\n```\n先说结果，输出是`false`；\na是基本数据类型`number`，b是通过`new`操作符创建的引用类型实例，所以`typeof(b)` 是`object`，因而结果为`false`。\n基本包装类型是`ECMAScript`为了便于操作基本类型值提供的三种特殊的引用类型（`function`）,包括：`Number`、`String`、`Boolean`\n\n### [js] W3C的事件处理和IE的事件处理有哪些区别？\n*   绑定事件 W3C addEventListener ;IE attachEvent\n*   移除事件 W3c removeEventListner;IE detachEvent\n*   阻止默认事件 W3C e.preventDefault; IE window.event.returnValue = false\n*   阻止事件传播 W3C e.stopPropagation; IE winow.event.cancelBuble = true\n[参考](https://blog.csdn.net/weixin_42334281/article/details/102533325)\n\n### [js] DOM0、DOM2、DOM3事件处理方式的区别是什么？\n1. DOM0级事件处理方式：\n    btn.onclick = func;\n    btn.onclick = null;\n2. DOM2级事件处理方式：\n    btn.addEventListener('click', func, false);\n    btn.removeEventListener('click', func, false);\n    btn.attachEvent(\"onclick\", func);//IE\n    btn.detachEvent(\"onclick\", func);//IE\n3. DOM3级事件处理方式：\n    eventUtil.addListener(input, \"textInput\", func);\n    eventUtil 是自定义对象，textInput 是DOM3级事件\n[参考](https://blog.csdn.net/judyge/article/details/51898124)\n\n## 2020.04.09\n\n### [html] 可以给内联元素设置宽高吗？为什么？\n 1. 正常情况下不能设置宽高(可替换内容元素除外例如img、input、textarea)\n 2. 元素被浮动，绝对定位，固定定位后，可以设置宽高\n 3. `display:block,display:inline-block`等后可以设置宽高\n 4. 内联元素的宽高是由其内容决定的，并且在一行显示（可以换行），呈现包裹性,因此设置宽高无效\n\n### [css] 如何解决IE6浮动时产生双倍边距的BUG？\n1. 当块级元素有浮动样式的时候，给元素添加`margin-left`和`margin-right`样式，在ie6下就会出现双倍边距\n2. 给当前元素添加样式，使当前元素不为块，如：`display:inline;display:list-item`这样在元素浮动的时候就不会在ie6下面产生双倍边距的问题了\n\n### [js] parseInt()与Number()的区别？\n1. 类型不同：\n    `parseInt()`是`js`的全局函数；\n    `Number()`还能作为基本包装类型`Number`的构造函数，可以和`new`操作符一起创建变量。\n2. 定义和用法不同：\n    `parseInt()`函数可解析一个字符串，并返回一个整数(或`NaN`)；\n    `Number()`函数把对象的值转换为数字(或`NaN`)。\n    `parseInt(string, radix)`，`string`必须，要被解析的字符串，非`string`自动调`toString`转化；`radix`要解析的数字的基数，即进制。\n    `Number(obj)`，`obj`是`js`对象。\n3. `parseInt()`解析`string`时，忽略第一个空格，任意个0，解析到非数字就停(遇到`0x`后面还有数字时不会停)，更像是正则转化。\n    `Number()`可以解析纯数字`String`、`Boolean`、`Date`、空数组、只有一个元素且是数字或纯数字`String`的数组(如[1])\n参考：[parseInt](https://www.w3school.com.cn/jsref/jsref_parseInt.asp)、[Number](https://www.w3school.com.cn/js/jsref_number.asp)\n\n## 2020.04.10\n\n### [html] 如何解决input在Firefox和Chrome中高度不一致的问题？\n* 原因是`firefox`的`input`的`border-width`、`padding` 受win10系统的文本大小设置影响\n* 设置一样的样式\n\n```css\ninput{\n  box-sizing:border-box;\n  height:20px;\n}\n```\n\n* 将win10系统的文本大小设置为100%\n\n### [css] 如何让IE6支持min-width和max-width？\n*   利用IE特有的css语法\n\n```css\n.className {\n  max-width:620px;\n  min-width:1px;\n  _width:expression(this.scrollWidth > 620 ? \"620px\":(this.scrollWidth < 1? \"1px\":\"auto\"));\n}\n```\n\n*   [参考文章](https://www.jb51.net/css/76142.html)\n\n### [js]请解释如下js代码对数组排序后的输出结果？\n```javascript\nvar result = [55, 22, 168]; \nconsole.log(result.sort());\n```\n\n`sort`默认比较的是字符串，并且按照字符编码的顺序进行升序排序\n结果：[168, 22, 55]\n\n## 2020.04.11\n\n### [html] 怎么去除img之间存在的间隔缝隙？\n* img标签连着写，不空格，不回车\n* 给父元素设置`font-size:0`\n\n### [html] html的img标签为什么要添加alt属性呢？\n**alt 属性是一个必需的属性，它规定在图像无法显示时的替代文本。**\n\n假设由于一些原因，用户无法查看图像，alt属性可以为图像提供替代的信息。比如：\n\n*   网速太慢\n*   src 属性中的错误\n*   浏览器禁用图像\n*   用户使用的是屏幕阅读器等\n\n**添加alt属性提示文本的好处有哪些：**\n\n1.  有利于SEO优化，让搜索引擎爬虫蜘蛛爬取关键词\n2.  在很多情况下用户无法查看图像，可以让用户明白图片的意思，提高用户体验\n3.  便于百度的图片收录和优化，百度会对网站的title以及alt分析，进而分类进行排序\n\n### [html] 如何禁止长按保存或复制图像？\n```css\nimg {\n  pointer-events:none;\n  -webkit-user-select:none;\n  -moz-user-select:none;\n  user-select:none;\n}\n```\n\n## 2020.04.13\n\n### [css] CSS中height:100%和height:inherit的异同？\n**1. 兼容性差异**\n`height:100%` IE6+ √\n`height:inherit` IE8+ √\n\n**2. 大多数情况作用是一样的**\n除去兼容性，大多数情况下，两者作用是一样的，甚至都很难想出不一样的理由。\n\n① 父容器`height: auto`，无论`height:100%`或者`height:inherit`表现都是`auto`.\n② 父容器定高`height: 100px`，无论`height:100%`或者`height:inherit`表现都是`100px`高.\n\n**3. 绝对定位大不同**\n当子元素为绝对定位元素，同时，父容器的`position`值为`static`的时候，`height:100%`和`height:inherit`的差异就可以明显体现出来了！\n[https://codepen.io/klain97710/pen/JjYdrWa](https://codepen.io/klain97710/pen/JjYdrWa)\n\n### [css] 当使用@font-face的时候，为什么src中要加入local呢？\n```css\n@font-face {\n  font-family: MyHelvetica;\n  src: local(\"Helvetica Neue Bold\"),\n  local(\"HelveticaNeue-Bold\"),\n  url(MgOpenModernaBold.ttf);\n  font-weight: bold;\n}\n```\n用到了用户本地字体\"Helvetica Neue Bold\"的备份；如果当前用户(浏览器)未安装该字体(两种可能的字体名都已经试过)，就会用下载的字体\"MgOpenModernaBold.ttf\"来代替。意味着加入local后，代码加载时会优先采用电脑资源，而不是从网络加载，这个可以加快加载速度，提升用户体验感。\n\n### [js] axios如何一次发送多个请求？\n```javascript\naxios.all([\n  getUserAccount(),\n  getUserPermissions()\n])\n.then(axios.spread(function(acct,perms){\n//当这两个请求都完成的时候会触发这个函数，两个参数分别代表返回的结果\n}\n```\n\n### [js] 这两种展开运算符的方式有什么区别呢？\n```javascript\nconst o1 = { ...obj, o3 }\n\nconst o2 = { ...obj, o3: { ...o3 } }\n```\n...展开运算符是一个浅拷贝，浅拷贝不会拷贝原型链上的东西\n\n\n\n\n\n\n\n",[[1586847128756,["Administrator@WIN-T3FPCJLTUH1",[[1,10601,"###"]],[10601,10601],[10604,10604]]],[1586847129831,["Administrator@WIN-T3FPCJLTUH1",[[-1,10603,"#"]],[10604,10604],[10603,10603]]],[1586847134522,["Administrator@WIN-T3FPCJLTUH1",[[1,10603," 2020.04.14"]],[10603,10603],[10614,10614]]],[1586847135573,["Administrator@WIN-T3FPCJLTUH1",[[1,10620,"\n"]],[10614,10614],[10615,10615]]],[1586847162934,["Administrator@WIN-T3FPCJLTUH1",[[1,10621,"\n"]],[10615,10615],[10616,10616]]],[1586847258474,["Administrator@WIN-T3FPCJLTUH1",[[1,10616,"[]"]],[10616,10616],[10618,10618]]],[1586847259507,["Administrator@WIN-T3FPCJLTUH1",[[1,10617,"i"]],[10617,10617],[10618,10618]]],[1586847259875,["Administrator@WIN-T3FPCJLTUH1",[[-1,10617,"i"]],[10618,10618],[10617,10617]]],[1586847260720,["Administrator@WIN-T3FPCJLTUH1",[[1,10617,"html"]],[10617,10617],[10621,10621]]],[1586847264347,["Administrator@WIN-T3FPCJLTUH1",[[1,10616,"### "]],[10616,10616],[10620,10620]]],[1586847292988,["Administrator@WIN-T3FPCJLTUH1",[[1,10626," img中的src加载失败时如何用默认图片来替换呢？"]],[10626,10626],[10652,10652]]],[1586847296205,["Administrator@WIN-T3FPCJLTUH1",[[1,10658,"\n"]],[10652,10652],[10653,10653]]],[1586847304186,["Administrator@WIN-T3FPCJLTUH1",[[1,10653,"img有onerror"]],[10653,10653],[10664,10664]]],[1586847339683,["Administrator@WIN-T3FPCJLTUH1",[[1,10664,"属性，加载失败时会触发"]],[10664,10664],[10675,10675]]],[1586847343182,["Administrator@WIN-T3FPCJLTUH1",[[1,10681,"\n"]],[10675,10675],[10676,10676]]],[1586847354631,["Administrator@WIN-T3FPCJLTUH1",[[1,10653,"`"],[1,10656,"`"]],[10653,10656],[10653,10658]]],[1586847355904,["Administrator@WIN-T3FPCJLTUH1",[[1,10659,"`"],[1,10666,"`"]],[10659,10666],[10659,10668]]],[1586847358400,["Administrator@WIN-T3FPCJLTUH1",[[1,10680,"```"]],[10680,10680],[10683,10683]]],[1586847358456,["Administrator@WIN-T3FPCJLTUH1",[[1,10683,"language\n```\n"]],[10683,10683],[10683,10691]]],[1586847363535,["Administrator@WIN-T3FPCJLTUH1",[[-1,10683,"language"],[1,10691,"h"]],[10683,10691],[10684,10684]]],[1586847364177,["Administrator@WIN-T3FPCJLTUH1",[[1,10684,"tml"]],[10684,10684],[10687,10687]]],[1586847364916,["Administrator@WIN-T3FPCJLTUH1",[[1,10688,"\n"]],[10687,10687],[10688,10688]]],[1586847375782,["Administrator@WIN-T3FPCJLTUH1",[[1,10688,"<img class"]],[10688,10688],[10698,10698]]],[1586847378560,["Administrator@WIN-T3FPCJLTUH1",[[-1,10693,"class"]],[10698,10698],[10693,10693]]],[1586847381684,["Administrator@WIN-T3FPCJLTUH1",[[1,10693,":src="]],[10693,10693],[10698,10698]]],[1586847389678,["Administrator@WIN-T3FPCJLTUH1",[[1,10698,"\"url\" on"]],[10698,10698],[10706,10706]]],[1586847392961,["Administrator@WIN-T3FPCJLTUH1",[[-1,10704,"on"]],[10706,10706],[10704,10704]]],[1586847409427,["Administrator@WIN-T3FPCJLTUH1",[[1,10704,":onerror=\"default\"?"]],[10704,10704],[10723,10723]]],[1586847410729,["Administrator@WIN-T3FPCJLTUH1",[[-1,10722,"?"]],[10723,10723],[10722,10722]]],[1586847411146,["Administrator@WIN-T3FPCJLTUH1",[[1,10722,">"]],[10722,10722],[10723,10723]]],[1586847422601,["Administrator@WIN-T3FPCJLTUH1",[[1,10728,"```"]],[10728,10728],[10731,10731]]],[1586847422655,["Administrator@WIN-T3FPCJLTUH1",[[1,10731,"language\n```\n"]],[10731,10731],[10731,10739]]],[1586847426624,["Administrator@WIN-T3FPCJLTUH1",[[-1,10731,"language"],[1,10739,"j"]],[10731,10739],[10732,10732]]],[1586847428286,["Administrator@WIN-T3FPCJLTUH1",[[1,10732,"avascript"]],[10732,10732],[10741,10741]]],[1586847428483,["Administrator@WIN-T3FPCJLTUH1",[[1,10742,"\n"]],[10741,10741],[10742,10742]]],[1586847435937,["Administrator@WIN-T3FPCJLTUH1",[[1,10742,"data() {}"]],[10742,10742],[10751,10751]]],[1586847436972,["Administrator@WIN-T3FPCJLTUH1",[[1,10750,"\n"]],[10750,10750],[10751,10751]]],[1586847439545,["Administrator@WIN-T3FPCJLTUH1",[[1,10751,"\n"]],[10751,10751],[10752,10752]]],[1586847441611,["Administrator@WIN-T3FPCJLTUH1",[[1,10751,"  re"]],[10751,10751],[10755,10755]]],[1586847442963,["Administrator@WIN-T3FPCJLTUH1",[[1,10755,"turn"]],[10755,10755],[10759,10759]]],[1586847448955,["Administrator@WIN-T3FPCJLTUH1",[[1,10728,"\n"]],[10727,10727],[10728,10728]]],[1586847452929,["Administrator@WIN-T3FPCJLTUH1",[[1,10743,"\n"]],[10742,10742],[10743,10743]]],[1586847480164,["Administrator@WIN-T3FPCJLTUH1",[[1,10743,"<script>"]],[10743,10743],[10751,10751]]],[1586847484851,["Administrator@WIN-T3FPCJLTUH1",[[-1,10732,"ja"],[-1,10735,"ascript"]],[10732,10742],[10733,10733]]],[1586847485170,["Administrator@WIN-T3FPCJLTUH1",[[1,10733,"ue"]],[10733,10733],[10735,10735]]],[1586847487901,["Administrator@WIN-T3FPCJLTUH1",[[-1,10732,"vue"]],[10735,10735],[10732,10732]]],[1586847494704,["Administrator@WIN-T3FPCJLTUH1",[[-1,10733,"<script>"]],[10733,10741],[10733,10733]]],[1586847495027,["Administrator@WIN-T3FPCJLTUH1",[[-1,10733,"\n"]],[10733,10733],[10732,10732]]],[1586847497367,["Administrator@WIN-T3FPCJLTUH1",[[1,10732,"javascript"]],[10732,10732],[10742,10742]]],[1586847501530,["Administrator@WIN-T3FPCJLTUH1",[[1,10760," {}"]],[10760,10760],[10763,10763]]],[1586847502767,["Administrator@WIN-T3FPCJLTUH1",[[1,10762,"\n  \n  "]],[10762,10762],[10768,10768]]],[1586847512117,["Administrator@WIN-T3FPCJLTUH1",[[1,10765,"  url: '',"]],[10765,10765],[10775,10775]]],[1586847512247,["Administrator@WIN-T3FPCJLTUH1",[[1,10778,"  \n  "]],[10775,10775],[10780,10780]]],[1586847529050,["Administrator@WIN-T3FPCJLTUH1",[[1,10780,"default: 'this.src=' + require()"]],[10780,10780],[10812,10812]]],[1586847536675,["Administrator@WIN-T3FPCJLTUH1",[[1,10799,"\""]],[10799,10799],[10800,10800]]],[1586847543202,["Administrator@WIN-T3FPCJLTUH1",[[1,10813," + '\"'"]],[10813,10813],[10819,10819]]],[1586847549586,["Administrator@WIN-T3FPCJLTUH1",[[1,10812,"',,."]],[10812,10812],[10816,10816]]],[1586847550629,["Administrator@WIN-T3FPCJLTUH1",[[-1,10813,",,."]],[10816,10816],[10813,10813]]],[1586847556953,["Administrator@WIN-T3FPCJLTUH1",[[1,10813,"../../as'"]],[10813,10813],[10822,10822]]],[1586847560569,["Administrator@WIN-T3FPCJLTUH1",[[-1,10813,"../../as"]],[10821,10821],[10813,10813]]],[1586847564967,["Administrator@WIN-T3FPCJLTUH1",[[1,10813,"default.img"]],[10813,10813],[10824,10824]]],[1586847577309,["Administrator@WIN-T3FPCJLTUH1",[[1,10844,"### []"]],[10844,10844],[10850,10850]]],[1586852130597,["Administrator@WIN-T3FPCJLTUH1",[[1,10849,"js"]],[10849,10849],[10851,10851]]],[1586852139859,["Administrator@WIN-T3FPCJLTUH1",[[1,10852," 如何判断一个对象是否为空？"]],[10852,10852],[10866,10866]]],[1586852139990,["Administrator@WIN-T3FPCJLTUH1",[[1,10871,"\n"]],[10866,10866],[10867,10867]]],[1586852149155,["Administrator@WIN-T3FPCJLTUH1",[[1,10867,"1. JAON"]],[10867,10867],[10874,10874]]],[1586852150362,["Administrator@WIN-T3FPCJLTUH1",[[-1,10871,"AON"]],[10874,10874],[10871,10871]]],[1586852165620,["Administrator@WIN-T3FPCJLTUH1",[[1,10871,"SON.stringify()"]],[10871,10871],[10886,10886]]],[1586852167483,["Administrator@WIN-T3FPCJLTUH1",[[1,10885,"obj"]],[10885,10885],[10888,10888]]],[1586852169202,["Administrator@WIN-T3FPCJLTUH1",[[1,10889," ====="]],[10889,10889],[10893,10893]]],[1586852171314,["Administrator@WIN-T3FPCJLTUH1",[[-1,10893,"=="]],[10893,10893],[10891,10891]]],[1586852174809,["Administrator@WIN-T3FPCJLTUH1",[[1,10893," '"]],[10893,10893],[10895,10895]]],[1586852174862,["Administrator@WIN-T3FPCJLTUH1",[[-1,10894,"'"],[1,10895,"‘"]],[10895,10895],[10895,10895]]],[1586852177663,["Administrator@WIN-T3FPCJLTUH1",[[1,10895,"{}'"]],[10895,10895],[10898,10898]]],[1586852177718,["Administrator@WIN-T3FPCJLTUH1",[[-1,10897,"'"],[1,10898,"’"]],[10898,10898],[10898,10898]]],[1586852183748,["Administrator@WIN-T3FPCJLTUH1",[[1,10870,"`"],[1,10898,"`"]],[10870,10898],[10870,10900]]],[1586852190473,["Administrator@WIN-T3FPCJLTUH1",[[-1,10895,"‘{}’"]],[10895,10899],[10895,10895]]],[1586852194426,["Administrator@WIN-T3FPCJLTUH1",[[1,10895,"'{}'"]],[10895,10895],[10899,10899]]],[1586852214473,["Administrator@WIN-T3FPCJLTUH1",[[1,10901,"2. fi"]],[10901,10901],[10906,10906]]],[1586852215093,["Administrator@WIN-T3FPCJLTUH1",[[-1,10905,"i"]],[10906,10906],[10905,10905]]],[1586852232677,["Administrator@WIN-T3FPCJLTUH1",[[1,10905,"or in遍历，没有key就失控"]],[10905,10905],[10921,10921]]],[1586852233330,["Administrator@WIN-T3FPCJLTUH1",[[-1,10919,"失控"]],[10921,10921],[10919,10919]]],[1586852236117,["Administrator@WIN-T3FPCJLTUH1",[[1,10919,"是空"]],[10919,10919],[10921,10921]]],[1586852237684,["Administrator@WIN-T3FPCJLTUH1",[[1,10922,"3. \n"]],[10921,10921],[10925,10925]]],[1586852245045,["Administrator@WIN-T3FPCJLTUH1",[[1,10925,"Object.keys"]],[10925,10925],[10936,10936]]],[1586852267647,["Administrator@WIN-T3FPCJLTUH1",[[1,10936,"返回对象自身可枚举属性组成的数组，数组空就空"]],[10936,10936],[10958,10958]]],[1586852272127,["Administrator@WIN-T3FPCJLTUH1",[[1,10925,"`"],[1,10936,"`"]],[10925,10936],[10925,10938]]],[1586852274913,["Administrator@WIN-T3FPCJLTUH1",[[1,10904,"`"],[1,10910,"`"]],[10904,10910],[10904,10912]]],[1586852276047,["Administrator@WIN-T3FPCJLTUH1",[[1,10917,"`"],[1,10920,"`"]],[10917,10920],[10917,10922]]],[1586852618084,["Administrator@WIN-T3FPCJLTUH1",[[1,10844,"\n"]],[10844,10844],[10845,10845]]],[1586852622866,["Administrator@WIN-T3FPCJLTUH1",[[1,10844,"### []"]],[10844,10844],[10850,10850]]],[1586852624068,["Administrator@WIN-T3FPCJLTUH1",[[1,10849,"css"]],[10849,10849],[10852,10852]]],[1586852632017,["Administrator@WIN-T3FPCJLTUH1",[[1,10853," Yong"]],[10853,10853],[10858,10858]]],[1586852633112,["Administrator@WIN-T3FPCJLTUH1",[[-1,10854,"Yong"]],[10858,10858],[10854,10854]]],[1586852641684,["Administrator@WIN-T3FPCJLTUH1",[[1,10854,"用css实现tab切换？"]],[10854,10854],[10866,10866]]],[1586852641820,["Administrator@WIN-T3FPCJLTUH1",[[1,10867,"\n"]],[10866,10866],[10867,10867]]],[1586852649122,["Administrator@WIN-T3FPCJLTUH1",[[1,10868,"\n"]],[10867,10867],[10868,10868]]],[1586852664437,["Administrator@WIN-T3FPCJLTUH1",[[1,10867,"[target伪类](https://codepen.io/klain97710/pen/wvKKzPQ)"]],[10867,10867],[10920,10920]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["9c41a03e-8e30-44df-b953-c4a2591078da",1586914720975,"# 积跬步\n\n## 2020.03.23\n\n### [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n[参考](https://www.cnblogs.com/LisenH/p/11635919.html)\n\n### [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n### [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n### [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n### [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n### [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n### [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n### [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n### [js] [call、apply、bind的用法？](https://www.cnblogs.com/moqiutao/p/7371988.html)\n替换函数运行时的上下文，即`this`指向。\n`call`和`apply`都是在当前调用时临时替换一次，并立即执行函数；\n`bind`则会返回一个内部`this`被替换为指定对象的新函数。\n`call`和`apply`的区别在于`call`需要按顺序传形参，如`Arrray.prototype.slice.call(this, 1, 2)`，`apply`支持除了`this`外，剩余参数是一个数组，如`Arrray.prototype.slice.apply(this, [1, 2])`。\n\n## 2020.03.27\n\n### [js] 在axios中怎样添加授权验证？\n\n[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n\n```javascript\nimport axios from 'axios';\nimport router from './router';\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'https://api.github.com';\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = localStorage.token; //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;\n```\n\n### [js] 如何给localStorage存储的数据设置过期时间？\n\n### [js] 什么是UUID？它有什么作用？用js写一个生成UUID的方法？\nUUID（Universally Unique Identifier, 通用唯一识别码，也叫GUID（Globally Unique IDentifier，全局唯一识别码）。在互联网工程任务组发布的[RFC4122](https://tools.ietf.org/html/rfc4122)文档中介绍，UUID是一种不需要中央机构分配而产生唯一标识符的方式在时间和空间上保持其唯一性。UUID是由128位的二进制数据组成，通常使用32位的十六进制数据表示，并使用连字符连接。其表示格式为8-4-4-4-12。例如：\n\n```\n7e6eeeef-5271-545e-bcd5-eacf6a804e2b\nxxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n```\n\nM中使用4位来表示UUID的版本，N中使用1-3位表示不同的变体。\n项目中用到的写法：\n```javascript\nfunction GET_UUID () {\n  var s = []\n  var hexDigits = '0123456789abcdef'\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n  }\n  s[14] = '4' // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1) // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = '-'\n  var uuid = s.join('')\n  return uuid\n}\n```\n  \n\n\n## 2020.04.02\n\n### [js] 生成1-10000的数组？\n```javascript\nconsole.time();\n// 1.最快的方法：创建数组，填充内容，修改内容\nnew Array(10000).fill(0).map((o,i)=>i+1);\n// 2.使用Array.apply()初始化，修改内容\nArray.apply(null,{length:10000}).map((item,index)=>index+1)\n// 3.for循环\nfor(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}\nconsole.timeEnd()\n// 4.使用Array.from()把一个iterator数据或类数组对象转换成真正的数组，修改内容\nArray.from(new Array(10001).keys()).slice(1);\nArray.from({ length: 10000 }, (_, i) => i+1);\n// 5.使用Generator\n[...function*(i = 1){\n  while(i <= 10000) yield i++;\n}()]\n```\n\n### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。\n\n## 2020.04.07\n\n### [html] 禁止移动端页面缩放？\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1,user-scalable=0\">\n```\n\n### [css] 给文字的color设置渐变？\n`webkit only`\n[案例](https://codepen.io/klain97710/pen/MWwNryE)\n\n### [js] 切换标签窗口后js定时器自动停止了，如何在激活标签后又继续呢？\n想法1：监听页面`visibilitychange`事件\n想法2：`webworker`\n\n## 2020.04.08\n\n### [html] 3像素Bug指的是什么？怎么解决？\nimg标签渲染之后下方会出现几个像素（我用谷歌测试是4px, 火狐3.5px）的空白；\nimg是行内元素，默认`display：inline`; 它与文本的默认行为类似，下边缘是与基线对齐，而不是贴紧容器下边缘，所以会有几像素的空白；\n解决办法：\n1.  把img设置为`display: block`;\n2.  给img和其父元素都设置`vertical-align: top`；让其top对齐而不是baseline对齐；或者给img设置`vertical-align: middle`；\n3.  给img父元素设置`line-height: 0`;\n\n### [js] 看下面代码，判断a和b的类型是否为true？为什么？什么是基本包装类型？\n```javascript\nvar a=1;\nvar b = new Number(1);\ntypeof(a)===typeof(b);\n```\n先说结果，输出是`false`；\na是基本数据类型`number`，b是通过`new`操作符创建的引用类型实例，所以`typeof(b)` 是`object`，因而结果为`false`。\n基本包装类型是`ECMAScript`为了便于操作基本类型值提供的三种特殊的引用类型（`function`）,包括：`Number`、`String`、`Boolean`\n\n### [js] W3C的事件处理和IE的事件处理有哪些区别？\n*   绑定事件 W3C addEventListener ;IE attachEvent\n*   移除事件 W3c removeEventListner;IE detachEvent\n*   阻止默认事件 W3C e.preventDefault; IE window.event.returnValue = false\n*   阻止事件传播 W3C e.stopPropagation; IE winow.event.cancelBuble = true\n[参考](https://blog.csdn.net/weixin_42334281/article/details/102533325)\n\n### [js] DOM0、DOM2、DOM3事件处理方式的区别是什么？\n1. DOM0级事件处理方式：\n    btn.onclick = func;\n    btn.onclick = null;\n2. DOM2级事件处理方式：\n    btn.addEventListener('click', func, false);\n    btn.removeEventListener('click', func, false);\n    btn.attachEvent(\"onclick\", func);//IE\n    btn.detachEvent(\"onclick\", func);//IE\n3. DOM3级事件处理方式：\n    eventUtil.addListener(input, \"textInput\", func);\n    eventUtil 是自定义对象，textInput 是DOM3级事件\n[参考](https://blog.csdn.net/judyge/article/details/51898124)\n\n## 2020.04.09\n\n### [html] 可以给内联元素设置宽高吗？为什么？\n 1. 正常情况下不能设置宽高(可替换内容元素除外例如img、input、textarea)\n 2. 元素被浮动，绝对定位，固定定位后，可以设置宽高\n 3. `display:block,display:inline-block`等后可以设置宽高\n 4. 内联元素的宽高是由其内容决定的，并且在一行显示（可以换行），呈现包裹性,因此设置宽高无效\n\n### [css] 如何解决IE6浮动时产生双倍边距的BUG？\n1. 当块级元素有浮动样式的时候，给元素添加`margin-left`和`margin-right`样式，在ie6下就会出现双倍边距\n2. 给当前元素添加样式，使当前元素不为块，如：`display:inline;display:list-item`这样在元素浮动的时候就不会在ie6下面产生双倍边距的问题了\n\n### [js] parseInt()与Number()的区别？\n1. 类型不同：\n    `parseInt()`是`js`的全局函数；\n    `Number()`还能作为基本包装类型`Number`的构造函数，可以和`new`操作符一起创建变量。\n2. 定义和用法不同：\n    `parseInt()`函数可解析一个字符串，并返回一个整数(或`NaN`)；\n    `Number()`函数把对象的值转换为数字(或`NaN`)。\n    `parseInt(string, radix)`，`string`必须，要被解析的字符串，非`string`自动调`toString`转化；`radix`要解析的数字的基数，即进制。\n    `Number(obj)`，`obj`是`js`对象。\n3. `parseInt()`解析`string`时，忽略第一个空格，任意个0，解析到非数字就停(遇到`0x`后面还有数字时不会停)，更像是正则转化。\n    `Number()`可以解析纯数字`String`、`Boolean`、`Date`、空数组、只有一个元素且是数字或纯数字`String`的数组(如[1])\n参考：[parseInt](https://www.w3school.com.cn/jsref/jsref_parseInt.asp)、[Number](https://www.w3school.com.cn/js/jsref_number.asp)\n\n## 2020.04.10\n\n### [html] 如何解决input在Firefox和Chrome中高度不一致的问题？\n* 原因是`firefox`的`input`的`border-width`、`padding` 受win10系统的文本大小设置影响\n* 设置一样的样式\n\n```css\ninput{\n  box-sizing:border-box;\n  height:20px;\n}\n```\n\n* 将win10系统的文本大小设置为100%\n\n### [css] 如何让IE6支持min-width和max-width？\n*   利用IE特有的css语法\n\n```css\n.className {\n  max-width:620px;\n  min-width:1px;\n  _width:expression(this.scrollWidth > 620 ? \"620px\":(this.scrollWidth < 1? \"1px\":\"auto\"));\n}\n```\n\n*   [参考文章](https://www.jb51.net/css/76142.html)\n\n### [js]请解释如下js代码对数组排序后的输出结果？\n```javascript\nvar result = [55, 22, 168]; \nconsole.log(result.sort());\n```\n\n`sort`默认比较的是字符串，并且按照字符编码的顺序进行升序排序\n结果：[168, 22, 55]\n\n## 2020.04.11\n\n### [html] 怎么去除img之间存在的间隔缝隙？\n* img标签连着写，不空格，不回车\n* 给父元素设置`font-size:0`\n\n### [html] html的img标签为什么要添加alt属性呢？\n**alt 属性是一个必需的属性，它规定在图像无法显示时的替代文本。**\n\n假设由于一些原因，用户无法查看图像，alt属性可以为图像提供替代的信息。比如：\n\n*   网速太慢\n*   src 属性中的错误\n*   浏览器禁用图像\n*   用户使用的是屏幕阅读器等\n\n**添加alt属性提示文本的好处有哪些：**\n\n1.  有利于SEO优化，让搜索引擎爬虫蜘蛛爬取关键词\n2.  在很多情况下用户无法查看图像，可以让用户明白图片的意思，提高用户体验\n3.  便于百度的图片收录和优化，百度会对网站的title以及alt分析，进而分类进行排序\n\n### [html] 如何禁止长按保存或复制图像？\n```css\nimg {\n  pointer-events:none;\n  -webkit-user-select:none;\n  -moz-user-select:none;\n  user-select:none;\n}\n```\n\n## 2020.04.13\n\n### [css] CSS中height:100%和height:inherit的异同？\n**1. 兼容性差异**\n`height:100%` IE6+ √\n`height:inherit` IE8+ √\n\n**2. 大多数情况作用是一样的**\n除去兼容性，大多数情况下，两者作用是一样的，甚至都很难想出不一样的理由。\n\n① 父容器`height: auto`，无论`height:100%`或者`height:inherit`表现都是`auto`.\n② 父容器定高`height: 100px`，无论`height:100%`或者`height:inherit`表现都是`100px`高.\n\n**3. 绝对定位大不同**\n当子元素为绝对定位元素，同时，父容器的`position`值为`static`的时候，`height:100%`和`height:inherit`的差异就可以明显体现出来了！\n[https://codepen.io/klain97710/pen/JjYdrWa](https://codepen.io/klain97710/pen/JjYdrWa)\n\n### [css] 当使用@font-face的时候，为什么src中要加入local呢？\n```css\n@font-face {\n  font-family: MyHelvetica;\n  src: local(\"Helvetica Neue Bold\"),\n  local(\"HelveticaNeue-Bold\"),\n  url(MgOpenModernaBold.ttf);\n  font-weight: bold;\n}\n```\n用到了用户本地字体\"Helvetica Neue Bold\"的备份；如果当前用户(浏览器)未安装该字体(两种可能的字体名都已经试过)，就会用下载的字体\"MgOpenModernaBold.ttf\"来代替。意味着加入local后，代码加载时会优先采用电脑资源，而不是从网络加载，这个可以加快加载速度，提升用户体验感。\n\n### [js] axios如何一次发送多个请求？\n```javascript\naxios.all([\n  getUserAccount(),\n  getUserPermissions()\n])\n.then(axios.spread(function(acct,perms){\n//当这两个请求都完成的时候会触发这个函数，两个参数分别代表返回的结果\n}\n```\n\n### [js] 这两种展开运算符的方式有什么区别呢？\n```javascript\nconst o1 = { ...obj, o3 }\n\nconst o2 = { ...obj, o3: { ...o3 } }\n```\n...展开运算符是一个浅拷贝，浅拷贝不会拷贝原型链上的东西\n\n## 2020.04.14\n\n### [html] img中的src加载失败时如何用默认图片来替换呢？\n`img`有`onerror`属性，加载失败时会触发\n```html\n<img :src=\"url\" :onerror=\"default\">\n```\n\n```javascript\ndata() {\n  return {\n    url: '',\n    default: 'this.src=\"' + require('default.img') + '\"'\n  }\n}\n```\n\n### [css] 用css实现tab切换？\n[target伪类](https://codepen.io/klain97710/pen/wvKKzPQ)\n\n### [js] 如何判断一个对象是否为空？\n1. `JSON.stringify(obj) === '{}'`\n2. `for in`遍历，没有`key`就是空\n3. `Object.keys`返回对象自身可枚举属性组成的数组，数组空就空\n\n\n\n",[[1586914701748,["Administrator@WIN-T3FPCJLTUH1",[[1,11046,"\n"]],[11044,11044],[11045,11045]]],[1586914701960,["Administrator@WIN-T3FPCJLTUH1",[[1,11047,"\n"]],[11045,11045],[11046,11046]]],[1586914702062,["Administrator@WIN-T3FPCJLTUH1",[[1,11048,"\n"]],[11046,11046],[11047,11047]]],[1586914702198,["Administrator@WIN-T3FPCJLTUH1",[[1,11049,"\n"]],[11047,11047],[11048,11048]]],[1586914702312,["Administrator@WIN-T3FPCJLTUH1",[[1,11050,"\n"]],[11048,11048],[11049,11049]]],[1586914702491,["Administrator@WIN-T3FPCJLTUH1",[[1,11051,"\n"]],[11049,11049],[11050,11050]]],[1586914702607,["Administrator@WIN-T3FPCJLTUH1",[[1,11052,"\n"]],[11050,11050],[11051,11051]]],[1586914702771,["Administrator@WIN-T3FPCJLTUH1",[[1,11053,"\n"]],[11051,11051],[11052,11052]]],[1586914702871,["Administrator@WIN-T3FPCJLTUH1",[[1,11054,"\n"]],[11052,11052],[11053,11053]]],[1586914703054,["Administrator@WIN-T3FPCJLTUH1",[[1,11055,"\n"]],[11053,11053],[11054,11054]]],[1586914703152,["Administrator@WIN-T3FPCJLTUH1",[[1,11056,"\n"]],[11054,11054],[11055,11055]]],[1586914703318,["Administrator@WIN-T3FPCJLTUH1",[[1,11057,"\n"]],[11055,11055],[11056,11056]]],[1586914703420,["Administrator@WIN-T3FPCJLTUH1",[[1,11058,"\n"]],[11056,11056],[11057,11057]]],[1586914703591,["Administrator@WIN-T3FPCJLTUH1",[[1,11059,"\n"]],[11057,11057],[11058,11058]]],[1586914731301,["Administrator@WIN-T3FPCJLTUH1",[[1,11044,"## 2020.04.15"]],[11044,11044],[11057,11057]]],[1586914731944,["Administrator@WIN-T3FPCJLTUH1",[[1,11073,"\n"]],[11057,11057],[11058,11058]]],[1586914732836,["Administrator@WIN-T3FPCJLTUH1",[[1,11074,"\n"]],[11058,11058],[11059,11059]]],[1586914735329,["Administrator@WIN-T3FPCJLTUH1",[[1,11059,"### []"]],[11059,11059],[11065,11065]]],[1586914737434,["Administrator@WIN-T3FPCJLTUH1",[[1,11064,"html"]],[11064,11064],[11068,11068]]],[1586914738203,["Administrator@WIN-T3FPCJLTUH1",[[1,11069," "]],[11069,11069],[11070,11070]]],[1586915970391,["Administrator@WIN-T3FPCJLTUH1",[[-1,11064,"html"]],[11068,11068],[11064,11064]]],[1586915971459,["Administrator@WIN-T3FPCJLTUH1",[[1,11064,"css"]],[11064,11064],[11067,11067]]],[1586915976786,["Administrator@WIN-T3FPCJLTUH1",[[1,11069,"移动端1px"]],[11069,11069],[11075,11075]]],[1586915990557,["Administrator@WIN-T3FPCJLTUH1",[[1,11075,"像素问题及解决办法？"]],[11075,11075],[11085,11085]]],[1586915996149,["Administrator@WIN-T3FPCJLTUH1",[[1,11101,"\n"]],[11085,11085],[11086,11086]]],[1586915997359,["Administrator@WIN-T3FPCJLTUH1",[[1,11102,"\n"]],[11086,11086],[11087,11087]]],[1586915998351,["Administrator@WIN-T3FPCJLTUH1",[[-1,11102,"\n"]],[11087,11087],[11086,11086]]],[1586916000681,["Administrator@WIN-T3FPCJLTUH1",[[1,11086,"[]"]],[11086,11086],[11088,11088]]],[1586916002363,["Administrator@WIN-T3FPCJLTUH1",[[1,11087,"参考"]],[11087,11087],[11089,11089]]],[1586916002870,["Administrator@WIN-T3FPCJLTUH1",[[1,11090," "]],[11090,11090],[11091,11091]]],[1586916004939,["Administrator@WIN-T3FPCJLTUH1",[[-1,11090," "]],[11091,11091],[11090,11090]]],[1586916005908,["Administrator@WIN-T3FPCJLTUH1",[[1,11090,"（0"]],[11090,11090],[11092,11092]]],[1586916007056,["Administrator@WIN-T3FPCJLTUH1",[[-1,11090,"（0"]],[11092,11092],[11090,11090]]],[1586916007517,["Administrator@WIN-T3FPCJLTUH1",[[1,11090,"("]],[11090,11090],[11091,11091]]],[1586916007571,["Administrator@WIN-T3FPCJLTUH1",[[1,11091,"https://)"]],[11091,11091],[11091,11099]]],[1586916007662,["Administrator@WIN-T3FPCJLTUH1",[[-1,11091,"https://"],[1,11099,")"]],[11091,11099],[11092,11092]]],[1586916008980,["Administrator@WIN-T3FPCJLTUH1",[[-1,11092,")"]],[11093,11093],[11092,11092]]],[1586916015175,["Administrator@WIN-T3FPCJLTUH1",[[1,11091,"[https://www.jianshu.com/p/31f8907637a6](https://www.jianshu.com/p/31f8907637a6)"]],[11091,11091],[11171,11171]]],[1586916019406,["Administrator@WIN-T3FPCJLTUH1",[[1,11188,"\n"]],[11172,11172],[11173,11173]]],[1586916019638,["Administrator@WIN-T3FPCJLTUH1",[[1,11189,"\n"]],[11173,11173],[11174,11174]]],[1586916021093,["Administrator@WIN-T3FPCJLTUH1",[[1,11174,"### "]],[11174,11174],[11178,11178]]],[1586919164889,["Administrator@WIN-T3FPCJLTUH1",[[1,11059,"\n"]],[11057,11057],[11058,11058]]],[1586919165173,["Administrator@WIN-T3FPCJLTUH1",[[1,11060,"\n"]],[11058,11058],[11059,11059]]],[1586919167364,["Administrator@WIN-T3FPCJLTUH1",[[1,11059,"html"]],[11059,11059],[11063,11063]]],[1586919168080,["Administrator@WIN-T3FPCJLTUH1",[[-1,11059,"html"]],[11063,11063],[11059,11059]]],[1586919168261,["Administrator@WIN-T3FPCJLTUH1",[[-1,11060,"\n"]],[11059,11059],[11058,11058]]],[1586919169705,["Administrator@WIN-T3FPCJLTUH1",[[1,11060,"\n"]],[11058,11058],[11059,11059]]],[1586919172967,["Administrator@WIN-T3FPCJLTUH1",[[1,11059,"### []"]],[11059,11059],[11065,11065]]],[1586919174317,["Administrator@WIN-T3FPCJLTUH1",[[1,11064,"html"]],[11064,11064],[11068,11068]]],[1586919176623,["Administrator@WIN-T3FPCJLTUH1",[[1,11069," [https://www.jianshu.com/p/9c3264f4a405](https://www.jianshu.com/p/9c3264f4a405)"]],[11069,11069],[11150,11150]]],[1586919186219,["Administrator@WIN-T3FPCJLTUH1",[[-1,11071,"https://www.jianshu.com/p/9c3264f4a405"],[1,11109,"参考"]],[11071,11071],[11073,11073]]],[1586919187939,["Administrator@WIN-T3FPCJLTUH1",[[1,11074," "]],[11074,11074],[11075,11075]]],[1586919205356,["Administrator@WIN-T3FPCJLTUH1",[[-1,11074," "]],[11075,11075],[11074,11074]]],[1586919217296,["Administrator@WIN-T3FPCJLTUH1",[[-1,11070,"[参考](https://www.jianshu.com/p/9c3264f4a405)"]],[11070,11114],[11070,11070]]],[1586919243125,["Administrator@WIN-T3FPCJLTUH1",[[1,11070,"移动端如何使页面横、竖屏？"]],[11070,11070],[11083,11083]]],[1586919243937,["Administrator@WIN-T3FPCJLTUH1",[[1,11085,"\n"]],[11083,11083],[11084,11084]]],[1586919244967,["Administrator@WIN-T3FPCJLTUH1",[[1,11084,"[参考](https://www.jianshu.com/p/9c3264f4a405)"]],[11084,11084],[11128,11128]]],[1586919258904,["Administrator@WIN-T3FPCJLTUH1",[[-1,11242,")"]],[11243,11243],[11242,11242]]],[1586919262975,["Administrator@WIN-T3FPCJLTUH1",[[-1,11162,"[https://www.jianshu.com/p/31f8907637a6]("]],[11161,11202],[11161,11161]]],[1586931131308,["Administrator@WIN-T3FPCJLTUH1",[[1,11207,"[]"]],[11207,11207],[11209,11209]]],[1586931133488,["Administrator@WIN-T3FPCJLTUH1",[[1,11208,"css"]],[11208,11208],[11211,11211]]],[1586931144862,["Administrator@WIN-T3FPCJLTUH1",[[1,11212," 动态伪类选择器"]],[11212,11212],[11220,11220]]],[1586931154198,["Administrator@WIN-T3FPCJLTUH1",[[1,11236,"\n"]],[11220,11220],[11221,11221]]],[1586931158218,["Administrator@WIN-T3FPCJLTUH1",[[1,11221,"link"]],[11221,11221],[11225,11225]]],[1586931161515,["Administrator@WIN-T3FPCJLTUH1",[[1,11221,":"]],[11221,11221],[11222,11222]]],[1586931168596,["Administrator@WIN-T3FPCJLTUH1",[[1,11226,"\\"]],[11226,11226],[11227,11227]]],[1586931169230,["Administrator@WIN-T3FPCJLTUH1",[[-1,11226,"\\"]],[11227,11227],[11226,11226]]],[1586931171118,["Administrator@WIN-T3FPCJLTUH1",[[1,11226,"、、、、"]],[11226,11226],[11230,11230]]],[1586931177857,["Administrator@WIN-T3FPCJLTUH1",[[1,11227,":visited"]],[11227,11227],[11235,11235]]],[1586931186344,["Administrator@WIN-T3FPCJLTUH1",[[1,11236,":hover"]],[11236,11236],[11242,11242]]],[1586931191500,["Administrator@WIN-T3FPCJLTUH1",[[1,11243,":active"]],[11243,11243],[11250,11250]]],[1586931194773,["Administrator@WIN-T3FPCJLTUH1",[[1,11251,":focus"]],[11251,11251],[11257,11257]]],[1586931200187,["Administrator@WIN-T3FPCJLTUH1",[[1,11221,"`"],[1,11257,"`"]],[11221,11257],[11221,11259]]],[1586932649538,["Administrator@WIN-T3FPCJLTUH1",[[1,11261,"### []"]],[11261,11261],[11267,11267]]],[1586932651125,["Administrator@WIN-T3FPCJLTUH1",[[1,11266,"css"]],[11266,11266],[11269,11269]]],[1586932653035,["Administrator@WIN-T3FPCJLTUH1",[[1,11270," s"]],[11270,11270],[11272,11272]]],[1586932653578,["Administrator@WIN-T3FPCJLTUH1",[[-1,11271,"s"]],[11272,11272],[11271,11271]]],[1586932656629,["Administrator@WIN-T3FPCJLTUH1",[[1,11271,"使用css"]],[11271,11271],[11276,11276]]],[1586932657911,["Administrator@WIN-T3FPCJLTUH1",[[-1,11271,"使用css"]],[11276,11276],[11271,11271]]],[1586932662150,["Administrator@WIN-T3FPCJLTUH1",[[1,11271,"绘制扇形"]],[11271,11271],[11275,11275]]],[1586932665105,["Administrator@WIN-T3FPCJLTUH1",[[1,11289,"\n"]],[11275,11275],[11276,11276]]],[1586932668878,["Administrator@WIN-T3FPCJLTUH1",[[1,11276,"[]"]],[11276,11276],[11278,11278]]],[1586932672631,["Administrator@WIN-T3FPCJLTUH1",[[1,11277,"参考"]],[11277,11277],[11279,11279]]],[1586932674707,["Administrator@WIN-T3FPCJLTUH1",[[1,11280,"("]],[11280,11280],[11281,11281]]],[1586932674765,["Administrator@WIN-T3FPCJLTUH1",[[1,11281,"https://)"]],[11281,11281],[11281,11289]]],[1586932674864,["Administrator@WIN-T3FPCJLTUH1",[[-1,11281,"https://"],[1,11289,")"]],[11281,11289],[11282,11282]]],[1586932676107,["Administrator@WIN-T3FPCJLTUH1",[[-1,11282,")"]],[11283,11283],[11282,11282]]],[1586932677432,["Administrator@WIN-T3FPCJLTUH1",[[1,11281,"[https://codepen.io/klain97710/pen/mdeVdpP](https://codepen.io/klain97710/pen/mdeVdpP)"]],[11281,11281],[11367,11367]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["54d1230c-54d2-4f9b-ad16-08dd87675562",1587003755700,"# 积跬步\n\n## 2020.03.23\n\n### [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n[参考](https://www.cnblogs.com/LisenH/p/11635919.html)\n\n### [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n### [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n### [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n### [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n### [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n### [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n### [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n### [js] [call、apply、bind的用法？](https://www.cnblogs.com/moqiutao/p/7371988.html)\n替换函数运行时的上下文，即`this`指向。\n`call`和`apply`都是在当前调用时临时替换一次，并立即执行函数；\n`bind`则会返回一个内部`this`被替换为指定对象的新函数。\n`call`和`apply`的区别在于`call`需要按顺序传形参，如`Arrray.prototype.slice.call(this, 1, 2)`，`apply`支持除了`this`外，剩余参数是一个数组，如`Arrray.prototype.slice.apply(this, [1, 2])`。\n\n## 2020.03.27\n\n### [js] 在axios中怎样添加授权验证？\n\n[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n\n```javascript\nimport axios from 'axios';\nimport router from './router';\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'https://api.github.com';\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = localStorage.token; //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;\n```\n\n### [js] 如何给localStorage存储的数据设置过期时间？\n\n### [js] 什么是UUID？它有什么作用？用js写一个生成UUID的方法？\nUUID（Universally Unique Identifier, 通用唯一识别码，也叫GUID（Globally Unique IDentifier，全局唯一识别码）。在互联网工程任务组发布的[RFC4122](https://tools.ietf.org/html/rfc4122)文档中介绍，UUID是一种不需要中央机构分配而产生唯一标识符的方式在时间和空间上保持其唯一性。UUID是由128位的二进制数据组成，通常使用32位的十六进制数据表示，并使用连字符连接。其表示格式为8-4-4-4-12。例如：\n\n```\n7e6eeeef-5271-545e-bcd5-eacf6a804e2b\nxxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n```\n\nM中使用4位来表示UUID的版本，N中使用1-3位表示不同的变体。\n项目中用到的写法：\n```javascript\nfunction GET_UUID () {\n  var s = []\n  var hexDigits = '0123456789abcdef'\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n  }\n  s[14] = '4' // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1) // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = '-'\n  var uuid = s.join('')\n  return uuid\n}\n```\n  \n\n\n## 2020.04.02\n\n### [js] 生成1-10000的数组？\n```javascript\nconsole.time();\n// 1.最快的方法：创建数组，填充内容，修改内容\nnew Array(10000).fill(0).map((o,i)=>i+1);\n// 2.使用Array.apply()初始化，修改内容\nArray.apply(null,{length:10000}).map((item,index)=>index+1)\n// 3.for循环\nfor(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}\nconsole.timeEnd()\n// 4.使用Array.from()把一个iterator数据或类数组对象转换成真正的数组，修改内容\nArray.from(new Array(10001).keys()).slice(1);\nArray.from({ length: 10000 }, (_, i) => i+1);\n// 5.使用Generator\n[...function*(i = 1){\n  while(i <= 10000) yield i++;\n}()]\n```\n\n### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。\n\n## 2020.04.07\n\n### [html] 禁止移动端页面缩放？\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1,user-scalable=0\">\n```\n\n### [css] 给文字的color设置渐变？\n`webkit only`\n[案例](https://codepen.io/klain97710/pen/MWwNryE)\n\n### [js] 切换标签窗口后js定时器自动停止了，如何在激活标签后又继续呢？\n想法1：监听页面`visibilitychange`事件\n想法2：`webworker`\n\n## 2020.04.08\n\n### [html] 3像素Bug指的是什么？怎么解决？\nimg标签渲染之后下方会出现几个像素（我用谷歌测试是4px, 火狐3.5px）的空白；\nimg是行内元素，默认`display：inline`; 它与文本的默认行为类似，下边缘是与基线对齐，而不是贴紧容器下边缘，所以会有几像素的空白；\n解决办法：\n1.  把img设置为`display: block`;\n2.  给img和其父元素都设置`vertical-align: top`；让其top对齐而不是baseline对齐；或者给img设置`vertical-align: middle`；\n3.  给img父元素设置`line-height: 0`;\n\n### [js] 看下面代码，判断a和b的类型是否为true？为什么？什么是基本包装类型？\n```javascript\nvar a=1;\nvar b = new Number(1);\ntypeof(a)===typeof(b);\n```\n先说结果，输出是`false`；\na是基本数据类型`number`，b是通过`new`操作符创建的引用类型实例，所以`typeof(b)` 是`object`，因而结果为`false`。\n基本包装类型是`ECMAScript`为了便于操作基本类型值提供的三种特殊的引用类型（`function`）,包括：`Number`、`String`、`Boolean`\n\n### [js] W3C的事件处理和IE的事件处理有哪些区别？\n*   绑定事件 W3C addEventListener ;IE attachEvent\n*   移除事件 W3c removeEventListner;IE detachEvent\n*   阻止默认事件 W3C e.preventDefault; IE window.event.returnValue = false\n*   阻止事件传播 W3C e.stopPropagation; IE winow.event.cancelBuble = true\n[参考](https://blog.csdn.net/weixin_42334281/article/details/102533325)\n\n### [js] DOM0、DOM2、DOM3事件处理方式的区别是什么？\n1. DOM0级事件处理方式：\n    btn.onclick = func;\n    btn.onclick = null;\n2. DOM2级事件处理方式：\n    btn.addEventListener('click', func, false);\n    btn.removeEventListener('click', func, false);\n    btn.attachEvent(\"onclick\", func);//IE\n    btn.detachEvent(\"onclick\", func);//IE\n3. DOM3级事件处理方式：\n    eventUtil.addListener(input, \"textInput\", func);\n    eventUtil 是自定义对象，textInput 是DOM3级事件\n[参考](https://blog.csdn.net/judyge/article/details/51898124)\n\n## 2020.04.09\n\n### [html] 可以给内联元素设置宽高吗？为什么？\n 1. 正常情况下不能设置宽高(可替换内容元素除外例如img、input、textarea)\n 2. 元素被浮动，绝对定位，固定定位后，可以设置宽高\n 3. `display:block,display:inline-block`等后可以设置宽高\n 4. 内联元素的宽高是由其内容决定的，并且在一行显示（可以换行），呈现包裹性,因此设置宽高无效\n\n### [css] 如何解决IE6浮动时产生双倍边距的BUG？\n1. 当块级元素有浮动样式的时候，给元素添加`margin-left`和`margin-right`样式，在ie6下就会出现双倍边距\n2. 给当前元素添加样式，使当前元素不为块，如：`display:inline;display:list-item`这样在元素浮动的时候就不会在ie6下面产生双倍边距的问题了\n\n### [js] parseInt()与Number()的区别？\n1. 类型不同：\n    `parseInt()`是`js`的全局函数；\n    `Number()`还能作为基本包装类型`Number`的构造函数，可以和`new`操作符一起创建变量。\n2. 定义和用法不同：\n    `parseInt()`函数可解析一个字符串，并返回一个整数(或`NaN`)；\n    `Number()`函数把对象的值转换为数字(或`NaN`)。\n    `parseInt(string, radix)`，`string`必须，要被解析的字符串，非`string`自动调`toString`转化；`radix`要解析的数字的基数，即进制。\n    `Number(obj)`，`obj`是`js`对象。\n3. `parseInt()`解析`string`时，忽略第一个空格，任意个0，解析到非数字就停(遇到`0x`后面还有数字时不会停)，更像是正则转化。\n    `Number()`可以解析纯数字`String`、`Boolean`、`Date`、空数组、只有一个元素且是数字或纯数字`String`的数组(如[1])\n参考：[parseInt](https://www.w3school.com.cn/jsref/jsref_parseInt.asp)、[Number](https://www.w3school.com.cn/js/jsref_number.asp)\n\n## 2020.04.10\n\n### [html] 如何解决input在Firefox和Chrome中高度不一致的问题？\n* 原因是`firefox`的`input`的`border-width`、`padding` 受win10系统的文本大小设置影响\n* 设置一样的样式\n\n```css\ninput{\n  box-sizing:border-box;\n  height:20px;\n}\n```\n\n* 将win10系统的文本大小设置为100%\n\n### [css] 如何让IE6支持min-width和max-width？\n*   利用IE特有的css语法\n\n```css\n.className {\n  max-width:620px;\n  min-width:1px;\n  _width:expression(this.scrollWidth > 620 ? \"620px\":(this.scrollWidth < 1? \"1px\":\"auto\"));\n}\n```\n\n*   [参考文章](https://www.jb51.net/css/76142.html)\n\n### [js]请解释如下js代码对数组排序后的输出结果？\n```javascript\nvar result = [55, 22, 168]; \nconsole.log(result.sort());\n```\n\n`sort`默认比较的是字符串，并且按照字符编码的顺序进行升序排序\n结果：[168, 22, 55]\n\n## 2020.04.11\n\n### [html] 怎么去除img之间存在的间隔缝隙？\n* img标签连着写，不空格，不回车\n* 给父元素设置`font-size:0`\n\n### [html] html的img标签为什么要添加alt属性呢？\n**alt 属性是一个必需的属性，它规定在图像无法显示时的替代文本。**\n\n假设由于一些原因，用户无法查看图像，alt属性可以为图像提供替代的信息。比如：\n\n*   网速太慢\n*   src 属性中的错误\n*   浏览器禁用图像\n*   用户使用的是屏幕阅读器等\n\n**添加alt属性提示文本的好处有哪些：**\n\n1.  有利于SEO优化，让搜索引擎爬虫蜘蛛爬取关键词\n2.  在很多情况下用户无法查看图像，可以让用户明白图片的意思，提高用户体验\n3.  便于百度的图片收录和优化，百度会对网站的title以及alt分析，进而分类进行排序\n\n### [html] 如何禁止长按保存或复制图像？\n```css\nimg {\n  pointer-events:none;\n  -webkit-user-select:none;\n  -moz-user-select:none;\n  user-select:none;\n}\n```\n\n## 2020.04.13\n\n### [css] CSS中height:100%和height:inherit的异同？\n**1. 兼容性差异**\n`height:100%` IE6+ √\n`height:inherit` IE8+ √\n\n**2. 大多数情况作用是一样的**\n除去兼容性，大多数情况下，两者作用是一样的，甚至都很难想出不一样的理由。\n\n① 父容器`height: auto`，无论`height:100%`或者`height:inherit`表现都是`auto`.\n② 父容器定高`height: 100px`，无论`height:100%`或者`height:inherit`表现都是`100px`高.\n\n**3. 绝对定位大不同**\n当子元素为绝对定位元素，同时，父容器的`position`值为`static`的时候，`height:100%`和`height:inherit`的差异就可以明显体现出来了！\n[https://codepen.io/klain97710/pen/JjYdrWa](https://codepen.io/klain97710/pen/JjYdrWa)\n\n### [css] 当使用@font-face的时候，为什么src中要加入local呢？\n```css\n@font-face {\n  font-family: MyHelvetica;\n  src: local(\"Helvetica Neue Bold\"),\n  local(\"HelveticaNeue-Bold\"),\n  url(MgOpenModernaBold.ttf);\n  font-weight: bold;\n}\n```\n用到了用户本地字体\"Helvetica Neue Bold\"的备份；如果当前用户(浏览器)未安装该字体(两种可能的字体名都已经试过)，就会用下载的字体\"MgOpenModernaBold.ttf\"来代替。意味着加入local后，代码加载时会优先采用电脑资源，而不是从网络加载，这个可以加快加载速度，提升用户体验感。\n\n### [js] axios如何一次发送多个请求？\n```javascript\naxios.all([\n  getUserAccount(),\n  getUserPermissions()\n])\n.then(axios.spread(function(acct,perms){\n//当这两个请求都完成的时候会触发这个函数，两个参数分别代表返回的结果\n}\n```\n\n### [js] 这两种展开运算符的方式有什么区别呢？\n```javascript\nconst o1 = { ...obj, o3 }\n\nconst o2 = { ...obj, o3: { ...o3 } }\n```\n...展开运算符是一个浅拷贝，浅拷贝不会拷贝原型链上的东西\n\n## 2020.04.14\n\n### [html] img中的src加载失败时如何用默认图片来替换呢？\n`img`有`onerror`属性，加载失败时会触发\n```html\n<img :src=\"url\" :onerror=\"default\">\n```\n\n```javascript\ndata() {\n  return {\n    url: '',\n    default: 'this.src=\"' + require('default.img') + '\"'\n  }\n}\n```\n\n### [css] 用css实现tab切换？\n[target伪类](https://codepen.io/klain97710/pen/wvKKzPQ)\n\n### [js] 如何判断一个对象是否为空？\n1. `JSON.stringify(obj) === '{}'`\n2. `for in`遍历，没有`key`就是空\n3. `Object.keys`返回对象自身可枚举属性组成的数组，数组空就空\n\n## 2020.04.15\n\n### [html] 移动端如何使页面横、竖屏？\n[参考](https://www.jianshu.com/p/9c3264f4a405)\n\n### [css] 移动端1px像素问题及解决办法？\n[参考](https://www.jianshu.com/p/31f8907637a6)\n\n### [css] 动态伪类选择器\n`:link、:visited、:hover、:active、:focus`\n\n### [css] 绘制扇形\n[参考]([https://codepen.io/klain97710/pen/mdeVdpP](https://codepen.io/klain97710/pen/mdeVdpP))\n\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1587003712844,["Administrator@WIN-T3FPCJLTUH1",[[1,11370,"## 2020.04.16"]],[11370,11370],[11383,11383]]],[1587003716729,["Administrator@WIN-T3FPCJLTUH1",[[1,11395,"\n"]],[11383,11383],[11384,11384]]],[1587003724361,["Administrator@WIN-T3FPCJLTUH1",[[1,11396,"\n"]],[11384,11384],[11385,11385]]],[1587003726824,["Administrator@WIN-T3FPCJLTUH1",[[1,11385,"### 【】"]],[11385,11385],[11391,11391]]],[1587003728393,["Administrator@WIN-T3FPCJLTUH1",[[-1,11389,"【】"]],[11391,11391],[11389,11389]]],[1587003730255,["Administrator@WIN-T3FPCJLTUH1",[[1,11389,"[]"]],[11389,11389],[11391,11391]]],[1587003731227,["Administrator@WIN-T3FPCJLTUH1",[[1,11390,"css"]],[11390,11390],[11393,11393]]],[1587003732225,["Administrator@WIN-T3FPCJLTUH1",[[1,11394," "]],[11394,11394],[11395,11395]]],[1587003756447,["Administrator@WIN-T3FPCJLTUH1",[[1,11397,"ochi"]],[11397,11397],[11401,11401]]],[1587003758756,["Administrator@WIN-T3FPCJLTUH1",[[-1,11395,"baochi"]],[11401,11401],[11395,11395]]],[1587003788046,["Administrator@WIN-T3FPCJLTUH1",[[1,11395,"移动端保持页面底部按钮一直可见"]],[11395,11395],[11410,11410]]],[1587003791834,["Administrator@WIN-T3FPCJLTUH1",[[1,11422,"\n"]],[11410,11410],[11411,11411]]],[1587003798819,["Administrator@WIN-T3FPCJLTUH1",[[1,11411,"demo"]],[11411,11411],[11415,11415]]],[1587004223340,[null,[[1,11425,"\n\n"]],[11425,11425],[11427,11427]]],[1587004223340,[null,[[-1,11425,"\n\n"]],[11427,11427],[11425,11425]]],[1587004212812,["Administrator@WIN-T3FPCJLTUH1",[[1,11411,"["],[1,11415,"](https://codepen.io/klain97710/pen/wvKMxYd)"]],[11411,11415],[11460,11460]]],[1587004214978,["Administrator@WIN-T3FPCJLTUH1",[[1,11472,"\n"]],[11460,11460],[11461,11461]]],[1587004215488,["Administrator@WIN-T3FPCJLTUH1",[[1,11473,"\n"]],[11461,11461],[11462,11462]]],[1587004283340,[null,[[1,11472,"\n\n"]],[11472,11472],[11474,11474]]],[1587004283340,[null,[[-1,11472,"\n\n"]],[11474,11474],[11472,11472]]],[1587004225606,["Administrator@WIN-T3FPCJLTUH1",[[1,11411,"\n"]],[11410,11410],[11411,11411]]],[1587004227900,["Administrator@WIN-T3FPCJLTUH1",[[1,11411,"··"]],[11411,11411],[11413,11413]]],[1587004228810,["Administrator@WIN-T3FPCJLTUH1",[[-1,11411,"··"]],[11413,11413],[11411,11411]]],[1587004229628,["Administrator@WIN-T3FPCJLTUH1",[[1,11411,"·``"]],[11411,11411],[11414,11414]]],[1587004230745,["Administrator@WIN-T3FPCJLTUH1",[[-1,11411,"·"]],[11412,11412],[11411,11411]]],[1587004235337,["Administrator@WIN-T3FPCJLTUH1",[[1,11412,"position: stu=icky"]],[11412,11412],[11430,11430]]],[1587004237312,["Administrator@WIN-T3FPCJLTUH1",[[-1,11424,"u=icky"]],[11430,11430],[11424,11424]]],[1587004238604,["Administrator@WIN-T3FPCJLTUH1",[[1,11424,"icky"]],[11424,11424],[11428,11428]]],[1587004241852,["Administrator@WIN-T3FPCJLTUH1",[[1,11429,"的使用"]],[11429,11429],[11432,11432]]],[1587004246603,["Administrator@WIN-T3FPCJLTUH1",[[1,11496,"\n"]],[11482,11482],[11483,11483]]],[1587004248970,["Administrator@WIN-T3FPCJLTUH1",[[1,11483,"[]"]],[11483,11483],[11485,11485]]],[1587004251523,["Administrator@WIN-T3FPCJLTUH1",[[1,11484,"参考"]],[11484,11484],[11486,11486]]],[1587004253284,["Administrator@WIN-T3FPCJLTUH1",[[1,11487,"("]],[11487,11487],[11488,11488]]],[1587004253340,["Administrator@WIN-T3FPCJLTUH1",[[1,11488,"https://)"]],[11488,11488],[11488,11496]]],[1587004253438,["Administrator@WIN-T3FPCJLTUH1",[[-1,11488,"https://"],[1,11496,")"]],[11488,11496],[11489,11489]]],[1587004254627,["Administrator@WIN-T3FPCJLTUH1",[[-1,11489,")"]],[11490,11490],[11489,11489]]],[1587004523347,[null,[[1,11501,"\n\n"]],[11501,11501],[11503,11503]]],[1587004523347,[null,[[-1,11501,"\n\n"]],[11503,11503],[11501,11501]]],[1587004478734,["Administrator@WIN-T3FPCJLTUH1",[[1,11488,"[https://segmentfault.com/a/1190000007183209](https://segmentfault.com/a/1190000007183209)"]],[11488,11488],[11578,11578]]],[1587004480791,["Administrator@WIN-T3FPCJLTUH1",[[-1,11578,")"]],[11579,11579],[11578,11578]]],[1587004489444,["Administrator@WIN-T3FPCJLTUH1",[[-1,11488,"[https://segmentfault.com/a/1190000007183209]("]],[11487,11533],[11487,11487]]],[1587004583349,[null,[[1,11544,"\n\n"]],[11544,11544],[11546,11546]]],[1587004583349,[null,[[-1,11544,"\n\n"]],[11546,11546],[11544,11544]]],[1587004534596,["Administrator@WIN-T3FPCJLTUH1",[[1,11534,"# 当页面高度不够时，底部固定在下面，反之不固定"]],[11534,11534],[11558,11558]]],[1587004537104,["Administrator@WIN-T3FPCJLTUH1",[[-1,11535," "]],[11534,11536],[11535,11535]]],[1587004540166,["Administrator@WIN-T3FPCJLTUH1",[[1,11535,"## 【】"]],[11535,11535],[11540,11540]]],[1587004541066,["Administrator@WIN-T3FPCJLTUH1",[[-1,11538,"【】"]],[11540,11540],[11538,11538]]],[1587004541553,["Administrator@WIN-T3FPCJLTUH1",[[1,11538,"[]"]],[11538,11538],[11540,11540]]],[1587004542587,["Administrator@WIN-T3FPCJLTUH1",[[1,11539,"css"]],[11539,11539],[11542,11542]]],[1587004543239,["Administrator@WIN-T3FPCJLTUH1",[[1,11543," "]],[11543,11543],[11544,11544]]],[1587005243472,[null,[[1,11576,"\n\n"]],[11576,11576],[11578,11578]]],[1587005243472,[null,[[-1,11576,"\n\n"]],[11578,11578],[11576,11576]]],[1587005192640,["Administrator@WIN-T3FPCJLTUH1",[[1,11567,"demo"]],[11567,11567],[11571,11571]]],[1587005195817,["Administrator@WIN-T3FPCJLTUH1",[[1,11567,"【"]],[11567,11567],[11568,11568]]],[1587005196447,["Administrator@WIN-T3FPCJLTUH1",[[-1,11567,"【"]],[11568,11568],[11567,11567]]],[1587005196865,["Administrator@WIN-T3FPCJLTUH1",[[1,11567,"{"]],[11567,11567],[11568,11568]]],[1587005198479,["Administrator@WIN-T3FPCJLTUH1",[[-1,11567,"{"]],[11568,11568],[11567,11567]]],[1587005198918,["Administrator@WIN-T3FPCJLTUH1",[[1,11567,"【"]],[11567,11567],[11568,11568]]],[1587005199608,["Administrator@WIN-T3FPCJLTUH1",[[-1,11567,"【"]],[11568,11568],[11567,11567]]],[1587005200031,["Administrator@WIN-T3FPCJLTUH1",[[1,11567,"["]],[11567,11567],[11568,11568]]],[1587005202176,["Administrator@WIN-T3FPCJLTUH1",[[1,11572,"]("]],[11572,11572],[11574,11574]]],[1587005202232,["Administrator@WIN-T3FPCJLTUH1",[[1,11574,"https://)"]],[11574,11574],[11574,11582]]],[1587005202328,["Administrator@WIN-T3FPCJLTUH1",[[-1,11574,"https://"],[1,11582,")"]],[11574,11582],[11575,11575]]],[1587005203428,["Administrator@WIN-T3FPCJLTUH1",[[-1,11575,")"]],[11576,11576],[11575,11575]]],[1587005204139,["Administrator@WIN-T3FPCJLTUH1",[[1,11574,"[https://codepen.io/klain97710/pen/RwWrBda](https://codepen.io/klain97710/pen/RwWrBda)"]],[11574,11574],[11660,11660]]],[1587005208642,["Administrator@WIN-T3FPCJLTUH1",[[-1,11574,"[https://codepen.io/klain97710/pen/RwWrBda]("]],[11573,11617],[11573,11573]]],[1587005209992,["Administrator@WIN-T3FPCJLTUH1",[[-1,11616,")"]],[11617,11617],[11616,11616]]],[1587005483475,[null,[[1,11625,"\n\n"]],[11625,11625],[11627,11627]]],[1587005483475,[null,[[-1,11625,"\n\n"]],[11627,11627],[11625,11625]]],[1587005433772,["Administrator@WIN-T3FPCJLTUH1",[[1,11617,"[]"]],[11617,11617],[11619,11619]]],[1587005434647,["Administrator@WIN-T3FPCJLTUH1",[[-1,11617,"[]"]],[11619,11619],[11617,11617]]],[1587005435327,["Administrator@WIN-T3FPCJLTUH1",[[1,11617,"[http://caibaojian.com/css-5-ways-sticky-footer.html](http://caibaojian.com/css-5-ways-sticky-footer.html)"]],[11617,11617],[11723,11723]]],[1587005441877,["Administrator@WIN-T3FPCJLTUH1",[[-1,11618,"http://caibaojian.com/css-5-ways-sticky-footer.html"],[1,11669,"参考"]],[11618,11618],[11620,11620]]],[1587026068639,[null,[[1,11682,"\n\n"]],[11682,11682],[11684,11684]]],[1587026068639,[null,[[-1,11682,"\n\n"]],[11684,11684],[11682,11682]]],[1587026036276,["Administrator@WIN-T3FPCJLTUH1",[[1,11385,"\n"]],[11384,11384],[11385,11385]]],[1587026038676,["Administrator@WIN-T3FPCJLTUH1",[[1,11385,"### []"]],[11385,11385],[11391,11391]]],[1587026040350,["Administrator@WIN-T3FPCJLTUH1",[[1,11390,"html"]],[11390,11390],[11394,11394]]],[1587026045943,["Administrator@WIN-T3FPCJLTUH1",[[1,11395," ru"]],[11395,11395],[11398,11398]]],[1587026046545,["Administrator@WIN-T3FPCJLTUH1",[[-1,11396,"ru"]],[11398,11398],[11396,11396]]],[1587026056369,["Administrator@WIN-T3FPCJLTUH1",[[1,11396,"如何禁止html页面缓存？"]],[11396,11396],[11409,11409]]],[1587026058264,["Administrator@WIN-T3FPCJLTUH1",[[1,11410,"\n"]],[11409,11409],[11410,11410]]],[1587026058419,["Administrator@WIN-T3FPCJLTUH1",[[1,11411,"\n"]],[11410,11410],[11411,11411]]],[1587026128728,[null,[[1,11709,"\n\n"]],[11709,11709],[11711,11711]]],[1587026128728,[null,[[-1,11709,"\n\n"]],[11711,11711],[11709,11709]]],[1587026070414,["Administrator@WIN-T3FPCJLTUH1",[[1,11410,"<meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\">\n<meta http-equiv=\"Pragma\" content=\"no-cache\">\n<meta http-equiv=\"Expires\" content=\"0\">"]],[11410,11410],[11575,11575]]],[1587026072896,["Administrator@WIN-T3FPCJLTUH1",[[1,11410,"\n"]],[11409,11409],[11410,11410]]],[1587026076634,["Administrator@WIN-T3FPCJLTUH1",[[1,11410,"···"]],[11410,11410],[11413,11413]]],[1587026077342,["Administrator@WIN-T3FPCJLTUH1",[[-1,11410,"···"]],[11413,11413],[11410,11410]]],[1587026078126,["Administrator@WIN-T3FPCJLTUH1",[[1,11410,"```"]],[11410,11410],[11413,11413]]],[1587026078186,["Administrator@WIN-T3FPCJLTUH1",[[1,11413,"language\n```\n"]],[11413,11413],[11413,11421]]],[1587026078869,["Administrator@WIN-T3FPCJLTUH1",[[-1,11413,"language"],[1,11421,"j"]],[11413,11421],[11414,11414]]],[1587026079161,["Administrator@WIN-T3FPCJLTUH1",[[1,11414,"av"]],[11414,11414],[11416,11416]]],[1587026080233,["Administrator@WIN-T3FPCJLTUH1",[[-1,11412,"`jav"]],[11416,11416],[11412,11412]]],[1587026081734,["Administrator@WIN-T3FPCJLTUH1",[[1,11412,"·"]],[11412,11412],[11413,11413]]],[1587026082674,["Administrator@WIN-T3FPCJLTUH1",[[-1,11412,"·"]],[11413,11413],[11412,11412]]],[1587026084411,["Administrator@WIN-T3FPCJLTUH1",[[1,11412,"`html"]],[11412,11412],[11417,11417]]],[1587026084760,["Administrator@WIN-T3FPCJLTUH1",[[1,11418,"\n"]],[11417,11417],[11418,11418]]],[1587026087309,["Administrator@WIN-T3FPCJLTUH1",[[-1,11424,"<meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\">\n<meta http-equiv=\"Pragma\" content=\"no-cache\">\n<meta http-equiv=\"Expires\" content=\"0\">\n"]],[11424,11590],[11424,11424]]],[1587026088486,["Administrator@WIN-T3FPCJLTUH1",[[1,11418,"<meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\">\n<meta http-equiv=\"Pragma\" content=\"no-cache\">\n<meta http-equiv=\"Expires\" content=\"0\">\n"]],[11418,11418],[11584,11584]]],[1587026089906,["Administrator@WIN-T3FPCJLTUH1",[[-1,11590,"\n"]],[11589,11589],[11588,11588]]],[1587026099845,["Administrator@WIN-T3FPCJLTUH1",[[-1,11584,"\n"]],[11584,11584],[11583,11583]]],[1587026111404,["Administrator@WIN-T3FPCJLTUH1",[[1,11588,"### Cache-Control\n\n表示缓存控制，no-cache，no-store，must-revalidate，都表示不缓存的意思。\n不过，Cache-Control是http1.1支持的。目前大多数http传输都是1.1的版本。\n\n### Pragma\n\n值设置为no-cache，和Cache-Control的意义是一样的。\n区别：Pragma是http1.0支持的写法，所以这一句是为了兼容老版本的http传输协议。\n\n### Expires\n\n值设置为0，表示过期时间，不进行缓存。"]],[11588,11588],[11837,11837]]],[1587026113523,["Administrator@WIN-T3FPCJLTUH1",[[1,11838,"\n"]],[11837,11837],[11838,11838]]],[1587026123554,["Administrator@WIN-T3FPCJLTUH1",[[-1,11588,"### "]],[11588,11591],[11588,11588]]],[1587026124107,["Administrator@WIN-T3FPCJLTUH1",[[-1,11602,"\n"]],[11602,11602],[11601,11601]]],[1587026125897,["Administrator@WIN-T3FPCJLTUH1",[[-1,11704,"### "]],[11704,11708],[11704,11704]]],[1587026126736,["Administrator@WIN-T3FPCJLTUH1",[[-1,11703,"\n"]],[11704,11704],[11703,11703]]],[1587026128565,["Administrator@WIN-T3FPCJLTUH1",[[1,11703,"\n"]],[11702,11702],[11703,11703]]],[1587026188724,[null,[[1,12127,"\n\n"]],[12127,12127],[12129,12129]]],[1587026188724,[null,[[-1,12127,"\n\n"]],[12129,12129],[12127,12127]]],[1587026129604,["Administrator@WIN-T3FPCJLTUH1",[[-1,11711,"\n"]],[11711,11711],[11710,11710]]],[1587026133682,["Administrator@WIN-T3FPCJLTUH1",[[-1,11795,"### "]],[11795,11799],[11795,11795]]],[1587026134497,["Administrator@WIN-T3FPCJLTUH1",[[-1,11803,"\n"]],[11803,11803],[11802,11802]]],[1587026139443,["Administrator@WIN-T3FPCJLTUH1",[[1,11588,"**"],[1,11601,"**"]],[11588,11601],[11588,11605]]],[1587026152746,["Administrator@WIN-T3FPCJLTUH1",[[1,11708,"**"],[1,11714,"**"]],[11708,11714],[11708,11718]]],[1587026157433,["Administrator@WIN-T3FPCJLTUH1",[[1,11588,"`"],[1,11605,"`"]],[11588,11605],[11588,11607]]],[1587026162459,["Administrator@WIN-T3FPCJLTUH1",[[-1,11588,"`"],[-1,11606,"`"]],[11588,11607],[11588,11605]]],[1587026165635,["Administrator@WIN-T3FPCJLTUH1",[[1,11590,"`"],[1,11603,"`"]],[11590,11603],[11590,11605]]],[1587026168933,["Administrator@WIN-T3FPCJLTUH1",[[1,11712,"`"],[1,11718,"`"]],[11712,11718],[11712,11720]]],[1587026175764,["Administrator@WIN-T3FPCJLTUH1",[[1,11807,"**"],[1,11814,"**"]],[11807,11814],[11807,11818]]],[1587026177810,["Administrator@WIN-T3FPCJLTUH1",[[1,11809,"`"],[1,11816,"`"]],[11809,11816],[11809,11818]]],[1587027868729,[null,[[1,12139,"\n\n"]],[12139,12139],[12141,12141]]],[1587027868729,[null,[[-1,12139,"\n\n"]],[12141,12141],[12139,12139]]],[1587027866863,["Administrator@WIN-T3FPCJLTUH1",[[1,12133,"【】"]],[12133,12133],[12135,12135]]],[1587027867519,["Administrator@WIN-T3FPCJLTUH1",[[-1,12133,"【】"]],[12135,12135],[12133,12133]]],[1587027928742,[null,[[1,12139,"\n\n"]],[12139,12139],[12141,12141]]],[1587027928742,[null,[[-1,12139,"\n\n"]],[12141,12141],[12139,12139]]],[1587027870432,["Administrator@WIN-T3FPCJLTUH1",[[1,12134,"## []"]],[12134,12134],[12139,12139]]],[1587027871538,["Administrator@WIN-T3FPCJLTUH1",[[1,12138,"js"]],[12138,12138],[12140,12140]]],[1587027876909,["Administrator@WIN-T3FPCJLTUH1",[[1,12141," nizhi"]],[12141,12141],[12147,12147]]],[1587027878430,["Administrator@WIN-T3FPCJLTUH1",[[-1,12142,"nizhi"]],[12147,12147],[12142,12142]]],[1587027897949,["Administrator@WIN-T3FPCJLTUH1",[[1,12142,"你知道js可选链是什么吗、？"]],[12142,12142],[12156,12156]]],[1587027898684,["Administrator@WIN-T3FPCJLTUH1",[[-1,12154,"、？"]],[12156,12156],[12154,12154]]],[1587027899631,["Administrator@WIN-T3FPCJLTUH1",[[1,12154,"？"]],[12154,12154],[12155,12155]]],[1587027988751,[null,[[-1,12133,"\n"],[1,12134,"#"],[1,12155,"\n\n\n"]],[12133,12133],[12158,12158]]],[1587027988751,[null,[[1,12133,"\n"],[-1,12133,"#"],[-1,12155,"\n\n\n"]],[12158,12158],[12133,12133]]],[1587027981878,["Administrator@WIN-T3FPCJLTUH1",[[1,12163,"\n"]],[12155,12155],[12156,12156]]],[1587028048746,[null,[[-1,12133,"\n"],[1,12134,"#"],[1,12155,"\n\n\n"]],[12133,12133],[12158,12158]]],[1587028048746,[null,[[1,12133,"\n"],[-1,12133,"#"],[-1,12155,"\n\n\n"]],[12158,12158],[12133,12133]]],[1587028030821,["Administrator@WIN-T3FPCJLTUH1",[[1,12156,"[可选链](https://github.com/tc39/proposal-optional-chaining)是ES2020新引入的功能，目前处于[ECMAScript Proposal Stage 4](https://github.com/tc39/proposals/blob/master/finished-proposals.md)阶段，将陆续登陆各大浏览器（目前可通过勾选chrome的Experimental JavaScript功能体验该功能）。"]],[12156,12156],[12389,12389]]],[1587028044267,["Administrator@WIN-T3FPCJLTUH1",[[1,12390,"语法如下：\n\n```source-js\nwindow?.console?.log?.(\"Hello\");\n```"]],[12390,12390],[12446,12446]]],[1587028108747,[null,[[-1,12133,"\n"],[1,12134,"#"],[1,12446,"\n\n\n"]],[12133,12133],[12449,12449]]],[1587028108747,[null,[[1,12133,"\n"],[-1,12133,"#"],[-1,12446,"\n\n\n"]],[12449,12449],[12133,12133]]],[1587028052069,["Administrator@WIN-T3FPCJLTUH1",[[-1,12400,"source-js"],[1,12409,"java"]],[12400,12409],[12404,12404]]],[1587028055481,["Administrator@WIN-T3FPCJLTUH1",[[1,12404,"sctipt"]],[12404,12404],[12410,12410]]],[1587028057646,["Administrator@WIN-T3FPCJLTUH1",[[-1,12406,"ti"],[1,12408,"r"]],[12406,12408],[12407,12407]]],[1587028058517,["Administrator@WIN-T3FPCJLTUH1",[[1,12407,"i"]],[12407,12407],[12408,12408]]],[1587028078041,["Administrator@WIN-T3FPCJLTUH1",[[1,12448,"该代码可解读为\n\n> 如果`window`存在，则其取`console`属性，如果`console`存在，则取其`log`属性，如果`log`存在，则将其作为方法调用。\n> 如果该链任意一环节不存在，则忽略整个链并返回`undefined`。\n\n在ES2020以前若要实现类似逻辑，可以使用以下方式：\n\n```source-js\nwindow && window.console && window.console.log && window.console.log(\"Hello\");\n```\n\n该功能在获取一个多层嵌套对象的属性，并且上层对象可能不存在时非常有用，比如 `user.data?.extraData?.phone`，如果`data`、`extraData`有可能不存在，我们不需要判断其是否存在就可以取其`phone`值，会减少很多逻辑判断和冗余代码。"]],[12448,12448],[12833,12833]]],[1587028528755,[null,[[-1,12133,"\n"],[1,12134,"#"],[1,12836,"\n\n\n"]],[12133,12133],[12839,12839]]],[1587028528755,[null,[[1,12133,"\n"],[-1,12133,"#"],[-1,12836,"\n\n\n"]],[12839,12839],[12133,12133]]],[1587028485737,["Administrator@WIN-T3FPCJLTUH1",[[-1,12147,"可选"],[-1,12734," "],[1,12735," "]],[12147,12149],[12147,12147]]],[1587028501507,["Administrator@WIN-T3FPCJLTUH1",[[1,12147,"可选"],[1,12732," "],[-1,12732," "]],[12147,12147],[12147,12149]]],[1587028501791,["Administrator@WIN-T3FPCJLTUH1",[[-1,12448,"该代码可解读为\n\n> 如果`window`存在，则其取`console`属性，如果`console`存在，则取其`log`属性，如果`log`存在，则将其作为方法调用。\n> 如果该链任意一环节不存在，则忽略整个链并返回`undefined`。\n\n在ES2020以前若要实现类似逻辑，可以使用以下方式：\n\n```source-js\nwindow && window.console && window.console.log && window.console.log(\"Hello\");\n```\n\n该功能在获取一个多层嵌套对象的属性，并且上层对象可能不存在时非常有用，比如 `user.data?.extraData?.phone`，如果`data`、`extraData`有可能不存在，我们不需要判断其是否存在就可以取其`phone`值，会减少很多逻辑判断和冗余代码。"]],[12833,12833],[12448,12448]]],[1587028503705,["Administrator@WIN-T3FPCJLTUH1",[[1,12448,"该代码可解读为\n\n> 如果`window`存在，则其取`console`属性，如果`console`存在，则取其`log`属性，如果`log`存在，则将其作为方法调用。\n> 如果该链任意一环节不存在，则忽略整个链并返回`undefined`。\n\n在ES2020以前若要实现类似逻辑，可以使用以下方式：\n\n```source-js\nwindow && window.console && window.console.log && window.console.log(\"Hello\");\n```\n\n该功能在获取一个多层嵌套对象的属性，并且上层对象可能不存在时非常有用，比如 `user.data?.extraData?.phone`，如果`data`、`extraData`有可能不存在，我们不需要判断其是否存在就可以取其`phone`值，会减少很多逻辑判断和冗余代码。"]],[12448,12448],[12833,12833]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["82cc40cb-2a7b-4456-bac8-77e855f3331e",1587104730142,"# 积跬步\n\n## 2020.03.23\n\n### [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n[参考](https://www.cnblogs.com/LisenH/p/11635919.html)\n\n### [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n### [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n### [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n### [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n### [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n### [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n### [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n### [js] [call、apply、bind的用法？](https://www.cnblogs.com/moqiutao/p/7371988.html)\n替换函数运行时的上下文，即`this`指向。\n`call`和`apply`都是在当前调用时临时替换一次，并立即执行函数；\n`bind`则会返回一个内部`this`被替换为指定对象的新函数。\n`call`和`apply`的区别在于`call`需要按顺序传形参，如`Arrray.prototype.slice.call(this, 1, 2)`，`apply`支持除了`this`外，剩余参数是一个数组，如`Arrray.prototype.slice.apply(this, [1, 2])`。\n\n## 2020.03.27\n\n### [js] 在axios中怎样添加授权验证？\n\n[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n\n```javascript\nimport axios from 'axios';\nimport router from './router';\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'https://api.github.com';\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = localStorage.token; //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;\n```\n\n### [js] 如何给localStorage存储的数据设置过期时间？\n\n### [js] 什么是UUID？它有什么作用？用js写一个生成UUID的方法？\nUUID（Universally Unique Identifier, 通用唯一识别码，也叫GUID（Globally Unique IDentifier，全局唯一识别码）。在互联网工程任务组发布的[RFC4122](https://tools.ietf.org/html/rfc4122)文档中介绍，UUID是一种不需要中央机构分配而产生唯一标识符的方式在时间和空间上保持其唯一性。UUID是由128位的二进制数据组成，通常使用32位的十六进制数据表示，并使用连字符连接。其表示格式为8-4-4-4-12。例如：\n\n```\n7e6eeeef-5271-545e-bcd5-eacf6a804e2b\nxxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n```\n\nM中使用4位来表示UUID的版本，N中使用1-3位表示不同的变体。\n项目中用到的写法：\n```javascript\nfunction GET_UUID () {\n  var s = []\n  var hexDigits = '0123456789abcdef'\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n  }\n  s[14] = '4' // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1) // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = '-'\n  var uuid = s.join('')\n  return uuid\n}\n```\n  \n\n\n## 2020.04.02\n\n### [js] 生成1-10000的数组？\n```javascript\nconsole.time();\n// 1.最快的方法：创建数组，填充内容，修改内容\nnew Array(10000).fill(0).map((o,i)=>i+1);\n// 2.使用Array.apply()初始化，修改内容\nArray.apply(null,{length:10000}).map((item,index)=>index+1)\n// 3.for循环\nfor(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}\nconsole.timeEnd()\n// 4.使用Array.from()把一个iterator数据或类数组对象转换成真正的数组，修改内容\nArray.from(new Array(10001).keys()).slice(1);\nArray.from({ length: 10000 }, (_, i) => i+1);\n// 5.使用Generator\n[...function*(i = 1){\n  while(i <= 10000) yield i++;\n}()]\n```\n\n### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。\n\n## 2020.04.07\n\n### [html] 禁止移动端页面缩放？\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1,user-scalable=0\">\n```\n\n### [css] 给文字的color设置渐变？\n`webkit only`\n[案例](https://codepen.io/klain97710/pen/MWwNryE)\n\n### [js] 切换标签窗口后js定时器自动停止了，如何在激活标签后又继续呢？\n想法1：监听页面`visibilitychange`事件\n想法2：`webworker`\n\n## 2020.04.08\n\n### [html] 3像素Bug指的是什么？怎么解决？\nimg标签渲染之后下方会出现几个像素（我用谷歌测试是4px, 火狐3.5px）的空白；\nimg是行内元素，默认`display：inline`; 它与文本的默认行为类似，下边缘是与基线对齐，而不是贴紧容器下边缘，所以会有几像素的空白；\n解决办法：\n1.  把img设置为`display: block`;\n2.  给img和其父元素都设置`vertical-align: top`；让其top对齐而不是baseline对齐；或者给img设置`vertical-align: middle`；\n3.  给img父元素设置`line-height: 0`;\n\n### [js] 看下面代码，判断a和b的类型是否为true？为什么？什么是基本包装类型？\n```javascript\nvar a=1;\nvar b = new Number(1);\ntypeof(a)===typeof(b);\n```\n先说结果，输出是`false`；\na是基本数据类型`number`，b是通过`new`操作符创建的引用类型实例，所以`typeof(b)` 是`object`，因而结果为`false`。\n基本包装类型是`ECMAScript`为了便于操作基本类型值提供的三种特殊的引用类型（`function`）,包括：`Number`、`String`、`Boolean`\n\n### [js] W3C的事件处理和IE的事件处理有哪些区别？\n*   绑定事件 W3C addEventListener ;IE attachEvent\n*   移除事件 W3c removeEventListner;IE detachEvent\n*   阻止默认事件 W3C e.preventDefault; IE window.event.returnValue = false\n*   阻止事件传播 W3C e.stopPropagation; IE winow.event.cancelBuble = true\n[参考](https://blog.csdn.net/weixin_42334281/article/details/102533325)\n\n### [js] DOM0、DOM2、DOM3事件处理方式的区别是什么？\n1. DOM0级事件处理方式：\n    btn.onclick = func;\n    btn.onclick = null;\n2. DOM2级事件处理方式：\n    btn.addEventListener('click', func, false);\n    btn.removeEventListener('click', func, false);\n    btn.attachEvent(\"onclick\", func);//IE\n    btn.detachEvent(\"onclick\", func);//IE\n3. DOM3级事件处理方式：\n    eventUtil.addListener(input, \"textInput\", func);\n    eventUtil 是自定义对象，textInput 是DOM3级事件\n[参考](https://blog.csdn.net/judyge/article/details/51898124)\n\n## 2020.04.09\n\n### [html] 可以给内联元素设置宽高吗？为什么？\n 1. 正常情况下不能设置宽高(可替换内容元素除外例如img、input、textarea)\n 2. 元素被浮动，绝对定位，固定定位后，可以设置宽高\n 3. `display:block,display:inline-block`等后可以设置宽高\n 4. 内联元素的宽高是由其内容决定的，并且在一行显示（可以换行），呈现包裹性,因此设置宽高无效\n\n### [css] 如何解决IE6浮动时产生双倍边距的BUG？\n1. 当块级元素有浮动样式的时候，给元素添加`margin-left`和`margin-right`样式，在ie6下就会出现双倍边距\n2. 给当前元素添加样式，使当前元素不为块，如：`display:inline;display:list-item`这样在元素浮动的时候就不会在ie6下面产生双倍边距的问题了\n\n### [js] parseInt()与Number()的区别？\n1. 类型不同：\n    `parseInt()`是`js`的全局函数；\n    `Number()`还能作为基本包装类型`Number`的构造函数，可以和`new`操作符一起创建变量。\n2. 定义和用法不同：\n    `parseInt()`函数可解析一个字符串，并返回一个整数(或`NaN`)；\n    `Number()`函数把对象的值转换为数字(或`NaN`)。\n    `parseInt(string, radix)`，`string`必须，要被解析的字符串，非`string`自动调`toString`转化；`radix`要解析的数字的基数，即进制。\n    `Number(obj)`，`obj`是`js`对象。\n3. `parseInt()`解析`string`时，忽略第一个空格，任意个0，解析到非数字就停(遇到`0x`后面还有数字时不会停)，更像是正则转化。\n    `Number()`可以解析纯数字`String`、`Boolean`、`Date`、空数组、只有一个元素且是数字或纯数字`String`的数组(如[1])\n参考：[parseInt](https://www.w3school.com.cn/jsref/jsref_parseInt.asp)、[Number](https://www.w3school.com.cn/js/jsref_number.asp)\n\n## 2020.04.10\n\n### [html] 如何解决input在Firefox和Chrome中高度不一致的问题？\n* 原因是`firefox`的`input`的`border-width`、`padding` 受win10系统的文本大小设置影响\n* 设置一样的样式\n\n```css\ninput{\n  box-sizing:border-box;\n  height:20px;\n}\n```\n\n* 将win10系统的文本大小设置为100%\n\n### [css] 如何让IE6支持min-width和max-width？\n*   利用IE特有的css语法\n\n```css\n.className {\n  max-width:620px;\n  min-width:1px;\n  _width:expression(this.scrollWidth > 620 ? \"620px\":(this.scrollWidth < 1? \"1px\":\"auto\"));\n}\n```\n\n*   [参考文章](https://www.jb51.net/css/76142.html)\n\n### [js]请解释如下js代码对数组排序后的输出结果？\n```javascript\nvar result = [55, 22, 168]; \nconsole.log(result.sort());\n```\n\n`sort`默认比较的是字符串，并且按照字符编码的顺序进行升序排序\n结果：[168, 22, 55]\n\n## 2020.04.11\n\n### [html] 怎么去除img之间存在的间隔缝隙？\n* img标签连着写，不空格，不回车\n* 给父元素设置`font-size:0`\n\n### [html] html的img标签为什么要添加alt属性呢？\n**alt 属性是一个必需的属性，它规定在图像无法显示时的替代文本。**\n\n假设由于一些原因，用户无法查看图像，alt属性可以为图像提供替代的信息。比如：\n\n*   网速太慢\n*   src 属性中的错误\n*   浏览器禁用图像\n*   用户使用的是屏幕阅读器等\n\n**添加alt属性提示文本的好处有哪些：**\n\n1.  有利于SEO优化，让搜索引擎爬虫蜘蛛爬取关键词\n2.  在很多情况下用户无法查看图像，可以让用户明白图片的意思，提高用户体验\n3.  便于百度的图片收录和优化，百度会对网站的title以及alt分析，进而分类进行排序\n\n### [html] 如何禁止长按保存或复制图像？\n```css\nimg {\n  pointer-events:none;\n  -webkit-user-select:none;\n  -moz-user-select:none;\n  user-select:none;\n}\n```\n\n## 2020.04.13\n\n### [css] CSS中height:100%和height:inherit的异同？\n**1. 兼容性差异**\n`height:100%` IE6+ √\n`height:inherit` IE8+ √\n\n**2. 大多数情况作用是一样的**\n除去兼容性，大多数情况下，两者作用是一样的，甚至都很难想出不一样的理由。\n\n① 父容器`height: auto`，无论`height:100%`或者`height:inherit`表现都是`auto`.\n② 父容器定高`height: 100px`，无论`height:100%`或者`height:inherit`表现都是`100px`高.\n\n**3. 绝对定位大不同**\n当子元素为绝对定位元素，同时，父容器的`position`值为`static`的时候，`height:100%`和`height:inherit`的差异就可以明显体现出来了！\n[https://codepen.io/klain97710/pen/JjYdrWa](https://codepen.io/klain97710/pen/JjYdrWa)\n\n### [css] 当使用@font-face的时候，为什么src中要加入local呢？\n```css\n@font-face {\n  font-family: MyHelvetica;\n  src: local(\"Helvetica Neue Bold\"),\n  local(\"HelveticaNeue-Bold\"),\n  url(MgOpenModernaBold.ttf);\n  font-weight: bold;\n}\n```\n用到了用户本地字体\"Helvetica Neue Bold\"的备份；如果当前用户(浏览器)未安装该字体(两种可能的字体名都已经试过)，就会用下载的字体\"MgOpenModernaBold.ttf\"来代替。意味着加入local后，代码加载时会优先采用电脑资源，而不是从网络加载，这个可以加快加载速度，提升用户体验感。\n\n### [js] axios如何一次发送多个请求？\n```javascript\naxios.all([\n  getUserAccount(),\n  getUserPermissions()\n])\n.then(axios.spread(function(acct,perms){\n//当这两个请求都完成的时候会触发这个函数，两个参数分别代表返回的结果\n}\n```\n\n### [js] 这两种展开运算符的方式有什么区别呢？\n```javascript\nconst o1 = { ...obj, o3 }\n\nconst o2 = { ...obj, o3: { ...o3 } }\n```\n...展开运算符是一个浅拷贝，浅拷贝不会拷贝原型链上的东西\n\n## 2020.04.14\n\n### [html] img中的src加载失败时如何用默认图片来替换呢？\n`img`有`onerror`属性，加载失败时会触发\n```html\n<img :src=\"url\" :onerror=\"default\">\n```\n\n```javascript\ndata() {\n  return {\n    url: '',\n    default: 'this.src=\"' + require('default.img') + '\"'\n  }\n}\n```\n\n### [css] 用css实现tab切换？\n[target伪类](https://codepen.io/klain97710/pen/wvKKzPQ)\n\n### [js] 如何判断一个对象是否为空？\n1. `JSON.stringify(obj) === '{}'`\n2. `for in`遍历，没有`key`就是空\n3. `Object.keys`返回对象自身可枚举属性组成的数组，数组空就空\n\n## 2020.04.15\n\n### [html] 移动端如何使页面横、竖屏？\n[参考](https://www.jianshu.com/p/9c3264f4a405)\n\n### [css] 移动端1px像素问题及解决办法？\n[参考](https://www.jianshu.com/p/31f8907637a6)\n\n### [css] 动态伪类选择器\n`:link、:visited、:hover、:active、:focus`\n\n### [css] 绘制扇形\n[参考]([https://codepen.io/klain97710/pen/mdeVdpP](https://codepen.io/klain97710/pen/mdeVdpP))\n\n## 2020.04.16\n\n### [html] 如何禁止html页面缓存？\n```html\n<meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\">\n<meta http-equiv=\"Pragma\" content=\"no-cache\">\n<meta http-equiv=\"Expires\" content=\"0\">\n```\n**`Cache-Control`**\n表示缓存控制，no-cache，no-store，must-revalidate，都表示不缓存的意思。\n不过，Cache-Control是http1.1支持的。目前大多数http传输都是1.1的版本。\n\n**`Pragma`**\n值设置为no-cache，和Cache-Control的意义是一样的。\n区别：Pragma是http1.0支持的写法，所以这一句是为了兼容老版本的http传输协议。\n\n**`Expires`**\n值设置为0，表示过期时间，不进行缓存。\n\n### [css] 移动端保持页面底部按钮一直可见\n`position: sticky`的使用\n[demo](https://codepen.io/klain97710/pen/wvKMxYd)\n[参考](https://segmentfault.com/a/1190000007183209)\n\n### [css] 当页面高度不够时，底部固定在下面，反之不固定\n[demo](https://codepen.io/klain97710/pen/RwWrBda)\n[参考](http://caibaojian.com/css-5-ways-sticky-footer.html)\n\n### [js] 你知道js可选链是什么吗？\n[可选链](https://github.com/tc39/proposal-optional-chaining)是ES2020新引入的功能，目前处于[ECMAScript Proposal Stage 4](https://github.com/tc39/proposals/blob/master/finished-proposals.md)阶段，将陆续登陆各大浏览器（目前可通过勾选chrome的Experimental JavaScript功能体验该功能）。\n语法如下：\n\n```javascript\nwindow?.console?.log?.(\"Hello\");\n```\n该代码可解读为\n\n> 如果`window`存在，则其取`console`属性，如果`console`存在，则取其`log`属性，如果`log`存在，则将其作为方法调用。\n> 如果该链任意一环节不存在，则忽略整个链并返回`undefined`。\n\n在ES2020以前若要实现类似逻辑，可以使用以下方式：\n\n```source-js\nwindow && window.console && window.console.log && window.console.log(\"Hello\");\n```\n\n该功能在获取一个多层嵌套对象的属性，并且上层对象可能不存在时非常有用，比如 `user.data?.extraData?.phone`，如果`data`、`extraData`有可能不存在，我们不需要判断其是否存在就可以取其`phone`值，会减少很多逻辑判断和冗余代码。\n\n\n\n\n\n",[[1587104725538,["Administrator@WIN-T3FPCJLTUH1",[[-1,12734," "],[1,12735," "],[1,12835,"2020.04.17"]],[12835,12835],[12845,12845]]],[1587104728688,["Administrator@WIN-T3FPCJLTUH1",[[1,12835,"## "]],[12835,12835],[12838,12838]]],[1587104730951,["Administrator@WIN-T3FPCJLTUH1",[[1,12852,"\n"]],[12848,12848],[12849,12849]]],[1587104731646,["Administrator@WIN-T3FPCJLTUH1",[[1,12853,"\n"]],[12849,12849],[12850,12850]]],[1587104733429,["Administrator@WIN-T3FPCJLTUH1",[[1,12850,"### "]],[12850,12850],[12854,12854]]],[1587104743413,["Administrator@WIN-T3FPCJLTUH1",[[1,12858,"\n"]],[12857,12857],[12858,12858]]],[1587104743973,["Administrator@WIN-T3FPCJLTUH1",[[1,12859,"\n"]],[12858,12858],[12859,12859]]],[1587104744080,["Administrator@WIN-T3FPCJLTUH1",[[1,12860,"\n"]],[12859,12859],[12860,12860]]],[1587104744184,["Administrator@WIN-T3FPCJLTUH1",[[1,12861,"\n"]],[12860,12860],[12861,12861]]],[1587104744288,["Administrator@WIN-T3FPCJLTUH1",[[1,12862,"\n"]],[12861,12861],[12862,12862]]],[1587104744405,["Administrator@WIN-T3FPCJLTUH1",[[1,12863,"\n"]],[12862,12862],[12863,12863]]],[1587104744515,["Administrator@WIN-T3FPCJLTUH1",[[1,12864,"\n"]],[12863,12863],[12864,12864]]],[1587104744625,["Administrator@WIN-T3FPCJLTUH1",[[1,12865,"\n"]],[12864,12864],[12865,12865]]],[1587104744732,["Administrator@WIN-T3FPCJLTUH1",[[1,12866,"\n"]],[12865,12865],[12866,12866]]],[1587104744837,["Administrator@WIN-T3FPCJLTUH1",[[1,12867,"\n"]],[12866,12866],[12867,12867]]],[1587104744959,["Administrator@WIN-T3FPCJLTUH1",[[1,12868,"\n"]],[12867,12867],[12868,12868]]],[1587104745064,["Administrator@WIN-T3FPCJLTUH1",[[1,12869,"\n"]],[12868,12868],[12869,12869]]],[1587104745175,["Administrator@WIN-T3FPCJLTUH1",[[1,12870,"\n"]],[12869,12869],[12870,12870]]],[1587104745281,["Administrator@WIN-T3FPCJLTUH1",[[1,12871,"\n"]],[12870,12870],[12871,12871]]],[1587104745387,["Administrator@WIN-T3FPCJLTUH1",[[1,12872,"\n"]],[12871,12871],[12872,12872]]],[1587104745519,["Administrator@WIN-T3FPCJLTUH1",[[1,12873,"\n"]],[12872,12872],[12873,12873]]],[1587104745833,["Administrator@WIN-T3FPCJLTUH1",[[1,12874,"\n"]],[12873,12873],[12874,12874]]],[1587104745950,["Administrator@WIN-T3FPCJLTUH1",[[1,12875,"\n"]],[12874,12874],[12875,12875]]],[1587104746056,["Administrator@WIN-T3FPCJLTUH1",[[1,12876,"\n"]],[12875,12875],[12876,12876]]],[1587104746162,["Administrator@WIN-T3FPCJLTUH1",[[1,12877,"\n"]],[12876,12876],[12877,12877]]],[1587104746265,["Administrator@WIN-T3FPCJLTUH1",[[1,12878,"\n"]],[12877,12877],[12878,12878]]],[1587104746370,["Administrator@WIN-T3FPCJLTUH1",[[1,12879,"\n"]],[12878,12878],[12879,12879]]],[1587104746473,["Administrator@WIN-T3FPCJLTUH1",[[1,12880,"\n"]],[12879,12879],[12880,12880]]],[1587104746578,["Administrator@WIN-T3FPCJLTUH1",[[1,12881,"\n"]],[12880,12880],[12881,12881]]],[1587104746731,["Administrator@WIN-T3FPCJLTUH1",[[1,12882,"\n"]],[12881,12881],[12882,12882]]],[1587104747518,["Administrator@WIN-T3FPCJLTUH1",[[1,12883,"\n"]],[12882,12882],[12883,12883]]],[1587104747624,["Administrator@WIN-T3FPCJLTUH1",[[1,12884,"\n"]],[12883,12883],[12884,12884]]],[1587104747727,["Administrator@WIN-T3FPCJLTUH1",[[1,12885,"\n"]],[12884,12884],[12885,12885]]],[1587104747827,["Administrator@WIN-T3FPCJLTUH1",[[1,12886,"\n"]],[12885,12885],[12886,12886]]],[1587104747933,["Administrator@WIN-T3FPCJLTUH1",[[1,12887,"\n"]],[12886,12886],[12887,12887]]],[1587104748037,["Administrator@WIN-T3FPCJLTUH1",[[1,12888,"\n"]],[12887,12887],[12888,12888]]],[1587104748144,["Administrator@WIN-T3FPCJLTUH1",[[1,12889,"\n"]],[12888,12888],[12889,12889]]],[1587104748260,["Administrator@WIN-T3FPCJLTUH1",[[1,12890,"\n"]],[12889,12889],[12890,12890]]],[1587104748365,["Administrator@WIN-T3FPCJLTUH1",[[1,12891,"\n"]],[12890,12890],[12891,12891]]],[1587104748475,["Administrator@WIN-T3FPCJLTUH1",[[1,12892,"\n"]],[12891,12891],[12892,12892]]],[1587104748580,["Administrator@WIN-T3FPCJLTUH1",[[1,12893,"\n"]],[12892,12892],[12893,12893]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["b054806f-30de-4633-a29b-fef41206582c",1587429930787,"# 积跬步\n\n## 2020.03.23\n\n### [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n[参考](https://www.cnblogs.com/LisenH/p/11635919.html)\n\n### [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n### [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n### [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n### [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n### [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n### [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n### [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n### [js] [call、apply、bind的用法？](https://www.cnblogs.com/moqiutao/p/7371988.html)\n替换函数运行时的上下文，即`this`指向。\n`call`和`apply`都是在当前调用时临时替换一次，并立即执行函数；\n`bind`则会返回一个内部`this`被替换为指定对象的新函数。\n`call`和`apply`的区别在于`call`需要按顺序传形参，如`Arrray.prototype.slice.call(this, 1, 2)`，`apply`支持除了`this`外，剩余参数是一个数组，如`Arrray.prototype.slice.apply(this, [1, 2])`。\n\n## 2020.03.27\n\n### [js] 在axios中怎样添加授权验证？\n\n[参考]([https://blog.csdn.net/weixin_34342905/article/details/87964261)\n\n```javascript\nimport axios from 'axios';\nimport router from './router';\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'https://api.github.com';\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = localStorage.token; //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;\n```\n\n### [js] 如何给localStorage存储的数据设置过期时间？\n\n### [js] 什么是UUID？它有什么作用？用js写一个生成UUID的方法？\nUUID（Universally Unique Identifier, 通用唯一识别码，也叫GUID（Globally Unique IDentifier，全局唯一识别码）。在互联网工程任务组发布的[RFC4122](https://tools.ietf.org/html/rfc4122)文档中介绍，UUID是一种不需要中央机构分配而产生唯一标识符的方式在时间和空间上保持其唯一性。UUID是由128位的二进制数据组成，通常使用32位的十六进制数据表示，并使用连字符连接。其表示格式为8-4-4-4-12。例如：\n\n```\n7e6eeeef-5271-545e-bcd5-eacf6a804e2b\nxxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n```\n\nM中使用4位来表示UUID的版本，N中使用1-3位表示不同的变体。\n项目中用到的写法：\n```javascript\nfunction GET_UUID () {\n  var s = []\n  var hexDigits = '0123456789abcdef'\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n  }\n  s[14] = '4' // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1) // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = '-'\n  var uuid = s.join('')\n  return uuid\n}\n```\n  \n\n\n## 2020.04.02\n\n### [js] 生成1-10000的数组？\n```javascript\nconsole.time();\n// 1.最快的方法：创建数组，填充内容，修改内容\nnew Array(10000).fill(0).map((o,i)=>i+1);\n// 2.使用Array.apply()初始化，修改内容\nArray.apply(null,{length:10000}).map((item,index)=>index+1)\n// 3.for循环\nfor(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}\nconsole.timeEnd()\n// 4.使用Array.from()把一个iterator数据或类数组对象转换成真正的数组，修改内容\nArray.from(new Array(10001).keys()).slice(1);\nArray.from({ length: 10000 }, (_, i) => i+1);\n// 5.使用Generator\n[...function*(i = 1){\n  while(i <= 10000) yield i++;\n}()]\n```\n\n### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。\n\n## 2020.04.07\n\n### [html] 禁止移动端页面缩放？\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1,user-scalable=0\">\n```\n\n### [css] 给文字的color设置渐变？\n`webkit only`\n[案例](https://codepen.io/klain97710/pen/MWwNryE)\n\n### [js] 切换标签窗口后js定时器自动停止了，如何在激活标签后又继续呢？\n想法1：监听页面`visibilitychange`事件\n想法2：`webworker`\n\n## 2020.04.08\n\n### [html] 3像素Bug指的是什么？怎么解决？\nimg标签渲染之后下方会出现几个像素（我用谷歌测试是4px, 火狐3.5px）的空白；\nimg是行内元素，默认`display：inline`; 它与文本的默认行为类似，下边缘是与基线对齐，而不是贴紧容器下边缘，所以会有几像素的空白；\n解决办法：\n1.  把img设置为`display: block`;\n2.  给img和其父元素都设置`vertical-align: top`；让其top对齐而不是baseline对齐；或者给img设置`vertical-align: middle`；\n3.  给img父元素设置`line-height: 0`;\n\n### [js] 看下面代码，判断a和b的类型是否为true？为什么？什么是基本包装类型？\n```javascript\nvar a=1;\nvar b = new Number(1);\ntypeof(a)===typeof(b);\n```\n先说结果，输出是`false`；\na是基本数据类型`number`，b是通过`new`操作符创建的引用类型实例，所以`typeof(b)` 是`object`，因而结果为`false`。\n基本包装类型是`ECMAScript`为了便于操作基本类型值提供的三种特殊的引用类型（`function`）,包括：`Number`、`String`、`Boolean`\n\n### [js] W3C的事件处理和IE的事件处理有哪些区别？\n*   绑定事件 W3C addEventListener ;IE attachEvent\n*   移除事件 W3c removeEventListner;IE detachEvent\n*   阻止默认事件 W3C e.preventDefault; IE window.event.returnValue = false\n*   阻止事件传播 W3C e.stopPropagation; IE winow.event.cancelBuble = true\n[参考](https://blog.csdn.net/weixin_42334281/article/details/102533325)\n\n### [js] DOM0、DOM2、DOM3事件处理方式的区别是什么？\n1. DOM0级事件处理方式：\n    btn.onclick = func;\n    btn.onclick = null;\n2. DOM2级事件处理方式：\n    btn.addEventListener('click', func, false);\n    btn.removeEventListener('click', func, false);\n    btn.attachEvent(\"onclick\", func);//IE\n    btn.detachEvent(\"onclick\", func);//IE\n3. DOM3级事件处理方式：\n    eventUtil.addListener(input, \"textInput\", func);\n    eventUtil 是自定义对象，textInput 是DOM3级事件\n[参考](https://blog.csdn.net/judyge/article/details/51898124)\n\n## 2020.04.09\n\n### [html] 可以给内联元素设置宽高吗？为什么？\n 1. 正常情况下不能设置宽高(可替换内容元素除外例如img、input、textarea)\n 2. 元素被浮动，绝对定位，固定定位后，可以设置宽高\n 3. `display:block,display:inline-block`等后可以设置宽高\n 4. 内联元素的宽高是由其内容决定的，并且在一行显示（可以换行），呈现包裹性,因此设置宽高无效\n\n### [css] 如何解决IE6浮动时产生双倍边距的BUG？\n1. 当块级元素有浮动样式的时候，给元素添加`margin-left`和`margin-right`样式，在ie6下就会出现双倍边距\n2. 给当前元素添加样式，使当前元素不为块，如：`display:inline;display:list-item`这样在元素浮动的时候就不会在ie6下面产生双倍边距的问题了\n\n### [js] parseInt()与Number()的区别？\n1. 类型不同：\n    `parseInt()`是`js`的全局函数；\n    `Number()`还能作为基本包装类型`Number`的构造函数，可以和`new`操作符一起创建变量。\n2. 定义和用法不同：\n    `parseInt()`函数可解析一个字符串，并返回一个整数(或`NaN`)；\n    `Number()`函数把对象的值转换为数字(或`NaN`)。\n    `parseInt(string, radix)`，`string`必须，要被解析的字符串，非`string`自动调`toString`转化；`radix`要解析的数字的基数，即进制。\n    `Number(obj)`，`obj`是`js`对象。\n3. `parseInt()`解析`string`时，忽略第一个空格，任意个0，解析到非数字就停(遇到`0x`后面还有数字时不会停)，更像是正则转化。\n    `Number()`可以解析纯数字`String`、`Boolean`、`Date`、空数组、只有一个元素且是数字或纯数字`String`的数组(如[1])\n参考：[parseInt](https://www.w3school.com.cn/jsref/jsref_parseInt.asp)、[Number](https://www.w3school.com.cn/js/jsref_number.asp)\n\n## 2020.04.10\n\n### [html] 如何解决input在Firefox和Chrome中高度不一致的问题？\n* 原因是`firefox`的`input`的`border-width`、`padding` 受win10系统的文本大小设置影响\n* 设置一样的样式\n\n```css\ninput{\n  box-sizing:border-box;\n  height:20px;\n}\n```\n\n* 将win10系统的文本大小设置为100%\n\n### [css] 如何让IE6支持min-width和max-width？\n*   利用IE特有的css语法\n\n```css\n.className {\n  max-width:620px;\n  min-width:1px;\n  _width:expression(this.scrollWidth > 620 ? \"620px\":(this.scrollWidth < 1? \"1px\":\"auto\"));\n}\n```\n\n*   [参考文章](https://www.jb51.net/css/76142.html)\n\n### [js]请解释如下js代码对数组排序后的输出结果？\n```javascript\nvar result = [55, 22, 168]; \nconsole.log(result.sort());\n```\n\n`sort`默认比较的是字符串，并且按照字符编码的顺序进行升序排序\n结果：[168, 22, 55]\n\n## 2020.04.11\n\n### [html] 怎么去除img之间存在的间隔缝隙？\n* img标签连着写，不空格，不回车\n* 给父元素设置`font-size:0`\n\n### [html] html的img标签为什么要添加alt属性呢？\n**alt 属性是一个必需的属性，它规定在图像无法显示时的替代文本。**\n\n假设由于一些原因，用户无法查看图像，alt属性可以为图像提供替代的信息。比如：\n\n*   网速太慢\n*   src 属性中的错误\n*   浏览器禁用图像\n*   用户使用的是屏幕阅读器等\n\n**添加alt属性提示文本的好处有哪些：**\n\n1.  有利于SEO优化，让搜索引擎爬虫蜘蛛爬取关键词\n2.  在很多情况下用户无法查看图像，可以让用户明白图片的意思，提高用户体验\n3.  便于百度的图片收录和优化，百度会对网站的title以及alt分析，进而分类进行排序\n\n### [html] 如何禁止长按保存或复制图像？\n```css\nimg {\n  pointer-events:none;\n  -webkit-user-select:none;\n  -moz-user-select:none;\n  user-select:none;\n}\n```\n\n## 2020.04.13\n\n### [css] CSS中height:100%和height:inherit的异同？\n**1. 兼容性差异**\n`height:100%` IE6+ √\n`height:inherit` IE8+ √\n\n**2. 大多数情况作用是一样的**\n除去兼容性，大多数情况下，两者作用是一样的，甚至都很难想出不一样的理由。\n\n① 父容器`height: auto`，无论`height:100%`或者`height:inherit`表现都是`auto`.\n② 父容器定高`height: 100px`，无论`height:100%`或者`height:inherit`表现都是`100px`高.\n\n**3. 绝对定位大不同**\n当子元素为绝对定位元素，同时，父容器的`position`值为`static`的时候，`height:100%`和`height:inherit`的差异就可以明显体现出来了！\n[https://codepen.io/klain97710/pen/JjYdrWa](https://codepen.io/klain97710/pen/JjYdrWa)\n\n### [css] 当使用@font-face的时候，为什么src中要加入local呢？\n```css\n@font-face {\n  font-family: MyHelvetica;\n  src: local(\"Helvetica Neue Bold\"),\n  local(\"HelveticaNeue-Bold\"),\n  url(MgOpenModernaBold.ttf);\n  font-weight: bold;\n}\n```\n用到了用户本地字体\"Helvetica Neue Bold\"的备份；如果当前用户(浏览器)未安装该字体(两种可能的字体名都已经试过)，就会用下载的字体\"MgOpenModernaBold.ttf\"来代替。意味着加入local后，代码加载时会优先采用电脑资源，而不是从网络加载，这个可以加快加载速度，提升用户体验感。\n\n### [js] axios如何一次发送多个请求？\n```javascript\naxios.all([\n  getUserAccount(),\n  getUserPermissions()\n])\n.then(axios.spread(function(acct,perms){\n//当这两个请求都完成的时候会触发这个函数，两个参数分别代表返回的结果\n}\n```\n\n### [js] 这两种展开运算符的方式有什么区别呢？\n```javascript\nconst o1 = { ...obj, o3 }\n\nconst o2 = { ...obj, o3: { ...o3 } }\n```\n...展开运算符是一个浅拷贝，浅拷贝不会拷贝原型链上的东西\n\n## 2020.04.14\n\n### [html] img中的src加载失败时如何用默认图片来替换呢？\n`img`有`onerror`属性，加载失败时会触发\n```html\n<img :src=\"url\" :onerror=\"default\">\n```\n\n```javascript\ndata() {\n  return {\n    url: '',\n    default: 'this.src=\"' + require('default.img') + '\"'\n  }\n}\n```\n\n### [css] 用css实现tab切换？\n[target伪类](https://codepen.io/klain97710/pen/wvKKzPQ)\n\n### [js] 如何判断一个对象是否为空？\n1. `JSON.stringify(obj) === '{}'`\n2. `for in`遍历，没有`key`就是空\n3. `Object.keys`返回对象自身可枚举属性组成的数组，数组空就空\n\n## 2020.04.15\n\n### [html] 移动端如何使页面横、竖屏？\n[参考](https://www.jianshu.com/p/9c3264f4a405)\n\n### [css] 移动端1px像素问题及解决办法？\n[参考](https://www.jianshu.com/p/31f8907637a6)\n\n### [css] 动态伪类选择器\n`:link、:visited、:hover、:active、:focus`\n\n### [css] 绘制扇形\n[参考]([https://codepen.io/klain97710/pen/mdeVdpP](https://codepen.io/klain97710/pen/mdeVdpP))\n\n## 2020.04.16\n\n### [html] 如何禁止html页面缓存？\n```html\n<meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\">\n<meta http-equiv=\"Pragma\" content=\"no-cache\">\n<meta http-equiv=\"Expires\" content=\"0\">\n```\n**`Cache-Control`**\n表示缓存控制，no-cache，no-store，must-revalidate，都表示不缓存的意思。\n不过，Cache-Control是http1.1支持的。目前大多数http传输都是1.1的版本。\n\n**`Pragma`**\n值设置为no-cache，和Cache-Control的意义是一样的。\n区别：Pragma是http1.0支持的写法，所以这一句是为了兼容老版本的http传输协议。\n\n**`Expires`**\n值设置为0，表示过期时间，不进行缓存。\n\n### [css] 移动端保持页面底部按钮一直可见\n`position: sticky`的使用\n[demo](https://codepen.io/klain97710/pen/wvKMxYd)\n[参考](https://segmentfault.com/a/1190000007183209)\n\n### [css] 当页面高度不够时，底部固定在下面，反之不固定\n[demo](https://codepen.io/klain97710/pen/RwWrBda)\n[参考](http://caibaojian.com/css-5-ways-sticky-footer.html)\n\n### [js] 你知道js可选链是什么吗？\n[可选链](https://github.com/tc39/proposal-optional-chaining)是ES2020新引入的功能，目前处于[ECMAScript Proposal Stage 4](https://github.com/tc39/proposals/blob/master/finished-proposals.md)阶段，将陆续登陆各大浏览器（目前可通过勾选chrome的Experimental JavaScript功能体验该功能）。\n语法如下：\n\n```javascript\nwindow?.console?.log?.(\"Hello\");\n```\n该代码可解读为\n\n> 如果`window`存在，则其取`console`属性，如果`console`存在，则取其`log`属性，如果`log`存在，则将其作为方法调用。\n> 如果该链任意一环节不存在，则忽略整个链并返回`undefined`。\n\n在ES2020以前若要实现类似逻辑，可以使用以下方式：\n\n```source-js\nwindow && window.console && window.console.log && window.console.log(\"Hello\");\n```\n\n该功能在获取一个多层嵌套对象的属性，并且上层对象可能不存在时非常有用，比如 `user.data?.extraData?.phone`，如果`data`、`extraData`有可能不存在，我们不需要判断其是否存在就可以取其`phone`值，会减少很多逻辑判断和冗余代码。\n\n## 2020.04.17\n\n### \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1587429915463,["Administrator@WIN-T3FPCJLTUH1",[[-1,3062,"["]],[3063,3063],[3062,3062]]],[1587429957169,["Administrator@WIN-T3FPCJLTUH1",[[-1,10403,"acct"],[1,10407,"r"]],[10403,10407],[10404,10404]]],[1587429958055,["Administrator@WIN-T3FPCJLTUH1",[[1,10404,"es1"]],[10404,10404],[10407,10407]]],[1587429959721,["Administrator@WIN-T3FPCJLTUH1",[[1,10408," "]],[10408,10408],[10409,10409]]],[1587429961713,["Administrator@WIN-T3FPCJLTUH1",[[-1,10409,"pe"],[-1,10412,"ms"]],[10409,10414],[10410,10410]]],[1587429962494,["Administrator@WIN-T3FPCJLTUH1",[[1,10410,"es2"]],[10410,10410],[10413,10413]]],[1587433938511,["Administrator@WIN-T3FPCJLTUH1",[[-1,12845,"17"]],[12847,12847],[12845,12845]]],[1587433939293,["Administrator@WIN-T3FPCJLTUH1",[[1,12845,"21"]],[12845,12845],[12847,12847]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["ed0fcc96-9fa7-4b98-a986-f0c33d4800fa",1588228788992,"# 积跬步\n\n## 2020.03.23\n\n### [html] input上传文件，怎么触发相机拍照？\n\n```html\n// 拍照\n<input type=\"file\" accept=\"image/*\" capture>\n// 录像\n<input type=\"file\" accept=\"video/*\" capture>\n// 录音\n<input type=\"file\" accept=\"audio/*\" capture>\n```\n[参考](https://www.cnblogs.com/LisenH/p/11635919.html)\n\n### [css] 判断下面三句话的对错？[参考](https://www.cnblogs.com/chenjg/p/7126822.html)\n  1. css加载会阻塞DOM树的解析-----------------×\n  2. css加载会阻塞DOM树的渲染-----------------√\n  3. css加载不会阻塞后面js语句的执行----------×\n\n### [js] 了解数组、对象和类数组。\n\n  1. 在JS底层，我认为，数组是一种特殊的对象。数组的`key`为从0开始的正整数，且有`length`属性和自己独有的方法。`for in`和`for of`都适用于数组。\n  2. 对象是包含若干个`key:value`的数据结构，没有length属性，有自己的对象方法。此时，只有`for in`能用。`for of`只接受`iterable`类型的数据，如数组、类数组、字符串。\n  3. 而当对象的每个`key:value`的`key`变成顺序数字，且该对象有了自己的`length`属性时，就变成了一个特殊的类数组对象，如`Arguments`对象，`document.getElementsByTagName()`返回一个类数组对象。此时，`for of`还会是我们预期的结果，但是`for in`除了会获得数字`key`外，还有`length`、`item`、 `namedItem`三个`key`。\n  4. 还有一种不常见的东西，叫做关联数组。`arr=['a':1, 'b':2]`。\n\n## 2020.03.24\n\n### [html] 如何禁止input输入框的历史记录？\n\n```html\n// 给form加上 `autocomplete=off` 可以禁止整个表单的历史记录\n// 给单个input加上 `autocomplete=off` 可禁止这个input的历史记录\n<input type=\"text\" autocomplete=\"off\" />\n// 比较特殊的是input的类型为password\n<input type=\"password\" autocomplete=\"new-password\" />\n```\n\n### [css] [纯css画一个爱心。](https://codepen.io/klain97710/pen/VwLVpyq)\n### [js] 怎么把类数组对象转换为数组？\n 1. `Array.from()`方法---[具体用法](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n```javascript\n//将likeArray用Array.from()方法转换为数组，并用list变量接收\nlet list = Array.from(likeArray);\n```\n 2. 用`Array.prototype.slice.call(elem)`方法\n```javascript\n//likeArray转化为数组并用list变量接收\nlet list = Array.prototype.slice.call(likeArray);\n```\n3. 用`[ ...elems ]`方法\n```javascript\nlet list = [...likeArray];//用[ ...elems ]方法转化为数组并用list接收\n```\n4. 用`Array.prototype.forEach.call(elem,callback)`方法\n```javascript\n//直接对likeArray集合进行循环或者map等\nArray.prototype.forEach.call(likeArray,function(){\n//...\n}）\nArray.prototype.map.call(likeArray,function(){\n//...\n}）\n```\n5. 用`Array.prototype.forEach.apply(elem,[callback])`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.apply(likeArray,[(current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n}]);\n```\n6. 用`bind`方法\n```javascript\n//添加点击事件\nArray.prototype.forEach.bind(likeArray)((current,index) => {\n    current.addEventListener('click',() => {\n        animationFn(index);\n    },false);\n});\n```\n\n## 2020.03.25\n\n### [html] 你知道`<a>`标签的target属性规定在何处打开链接文档吗？\n\n| target属性值 | 说明     |\n| ---------   | -------- |\n| _blank      | 新建窗口打开 |\n| _self       | 当前窗口打开 |\n| _parent     | 在父框架集中打开 |\n| _top        | 在整个窗口中打开 |\n\n### [css] [使用css3实现一个斑马线的效果。](https://codepen.io/klain97710/pen/MWwzvRO)\n### [js] [call、apply、bind的用法？](https://www.cnblogs.com/moqiutao/p/7371988.html)\n替换函数运行时的上下文，即`this`指向。\n`call`和`apply`都是在当前调用时临时替换一次，并立即执行函数；\n`bind`则会返回一个内部`this`被替换为指定对象的新函数。\n`call`和`apply`的区别在于`call`需要按顺序传形参，如`Arrray.prototype.slice.call(this, 1, 2)`，`apply`支持除了`this`外，剩余参数是一个数组，如`Arrray.prototype.slice.apply(this, [1, 2])`。\n\n## 2020.03.27\n\n### [js] 在axios中怎样添加授权验证？\n\n[参考](https://blog.csdn.net/weixin_34342905/article/details/87964261)\n\n```javascript\nimport axios from 'axios';\nimport router from './router';\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'https://api.github.com';\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = localStorage.token; //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;\n```\n\n### [js] 如何给localStorage存储的数据设置过期时间？\n\n### [js] 什么是UUID？它有什么作用？用js写一个生成UUID的方法？\nUUID（Universally Unique Identifier, 通用唯一识别码，也叫GUID（Globally Unique IDentifier，全局唯一识别码）。在互联网工程任务组发布的[RFC4122](https://tools.ietf.org/html/rfc4122)文档中介绍，UUID是一种不需要中央机构分配而产生唯一标识符的方式在时间和空间上保持其唯一性。UUID是由128位的二进制数据组成，通常使用32位的十六进制数据表示，并使用连字符连接。其表示格式为8-4-4-4-12。例如：\n\n```\n7e6eeeef-5271-545e-bcd5-eacf6a804e2b\nxxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n```\n\nM中使用4位来表示UUID的版本，N中使用1-3位表示不同的变体。\n项目中用到的写法：\n```javascript\nfunction GET_UUID () {\n  var s = []\n  var hexDigits = '0123456789abcdef'\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n  }\n  s[14] = '4' // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1) // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = '-'\n  var uuid = s.join('')\n  return uuid\n}\n```\n  \n\n\n## 2020.04.02\n\n### [js] 生成1-10000的数组？\n```javascript\nconsole.time();\n// 1.最快的方法：创建数组，填充内容，修改内容\nnew Array(10000).fill(0).map((o,i)=>i+1);\n// 2.使用Array.apply()初始化，修改内容\nArray.apply(null,{length:10000}).map((item,index)=>index+1)\n// 3.for循环\nfor(var i=0, arr=[]; i<10000; i++) {\n  arr[i] = i+1;\n}\nconsole.timeEnd()\n// 4.使用Array.from()把一个iterator数据或类数组对象转换成真正的数组，修改内容\nArray.from(new Array(10001).keys()).slice(1);\nArray.from({ length: 10000 }, (_, i) => i+1);\n// 5.使用Generator\n[...function*(i = 1){\n  while(i <= 10000) yield i++;\n}()]\n```\n\n### [js] `new Array(10000)`与`Array.apply(null, {length:10000})`的区别？\n`new Array(10000)`创建的是10000位的`empty`数组，`Array.apply(null,{length:10000})`创建的是10000位的`undefined`数组。\n\n## 2020.04.07\n\n### [html] 禁止移动端页面缩放？\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1,user-scalable=0\">\n```\n\n### [css] 给文字的color设置渐变？\n`webkit only`\n[案例](https://codepen.io/klain97710/pen/MWwNryE)\n\n### [js] 切换标签窗口后js定时器自动停止了，如何在激活标签后又继续呢？\n想法1：监听页面`visibilitychange`事件\n想法2：`webworker`\n\n## 2020.04.08\n\n### [html] 3像素Bug指的是什么？怎么解决？\nimg标签渲染之后下方会出现几个像素（我用谷歌测试是4px, 火狐3.5px）的空白；\nimg是行内元素，默认`display：inline`; 它与文本的默认行为类似，下边缘是与基线对齐，而不是贴紧容器下边缘，所以会有几像素的空白；\n解决办法：\n1.  把img设置为`display: block`;\n2.  给img和其父元素都设置`vertical-align: top`；让其top对齐而不是baseline对齐；或者给img设置`vertical-align: middle`；\n3.  给img父元素设置`line-height: 0`;\n\n### [js] 看下面代码，判断a和b的类型是否为true？为什么？什么是基本包装类型？\n```javascript\nvar a=1;\nvar b = new Number(1);\ntypeof(a)===typeof(b);\n```\n先说结果，输出是`false`；\na是基本数据类型`number`，b是通过`new`操作符创建的引用类型实例，所以`typeof(b)` 是`object`，因而结果为`false`。\n基本包装类型是`ECMAScript`为了便于操作基本类型值提供的三种特殊的引用类型（`function`）,包括：`Number`、`String`、`Boolean`\n\n### [js] W3C的事件处理和IE的事件处理有哪些区别？\n*   绑定事件 W3C addEventListener ;IE attachEvent\n*   移除事件 W3c removeEventListner;IE detachEvent\n*   阻止默认事件 W3C e.preventDefault; IE window.event.returnValue = false\n*   阻止事件传播 W3C e.stopPropagation; IE winow.event.cancelBuble = true\n[参考](https://blog.csdn.net/weixin_42334281/article/details/102533325)\n\n### [js] DOM0、DOM2、DOM3事件处理方式的区别是什么？\n1. DOM0级事件处理方式：\n    btn.onclick = func;\n    btn.onclick = null;\n2. DOM2级事件处理方式：\n    btn.addEventListener('click', func, false);\n    btn.removeEventListener('click', func, false);\n    btn.attachEvent(\"onclick\", func);//IE\n    btn.detachEvent(\"onclick\", func);//IE\n3. DOM3级事件处理方式：\n    eventUtil.addListener(input, \"textInput\", func);\n    eventUtil 是自定义对象，textInput 是DOM3级事件\n[参考](https://blog.csdn.net/judyge/article/details/51898124)\n\n## 2020.04.09\n\n### [html] 可以给内联元素设置宽高吗？为什么？\n 1. 正常情况下不能设置宽高(可替换内容元素除外例如img、input、textarea)\n 2. 元素被浮动，绝对定位，固定定位后，可以设置宽高\n 3. `display:block,display:inline-block`等后可以设置宽高\n 4. 内联元素的宽高是由其内容决定的，并且在一行显示（可以换行），呈现包裹性,因此设置宽高无效\n\n### [css] 如何解决IE6浮动时产生双倍边距的BUG？\n1. 当块级元素有浮动样式的时候，给元素添加`margin-left`和`margin-right`样式，在ie6下就会出现双倍边距\n2. 给当前元素添加样式，使当前元素不为块，如：`display:inline;display:list-item`这样在元素浮动的时候就不会在ie6下面产生双倍边距的问题了\n\n### [js] parseInt()与Number()的区别？\n1. 类型不同：\n    `parseInt()`是`js`的全局函数；\n    `Number()`还能作为基本包装类型`Number`的构造函数，可以和`new`操作符一起创建变量。\n2. 定义和用法不同：\n    `parseInt()`函数可解析一个字符串，并返回一个整数(或`NaN`)；\n    `Number()`函数把对象的值转换为数字(或`NaN`)。\n    `parseInt(string, radix)`，`string`必须，要被解析的字符串，非`string`自动调`toString`转化；`radix`要解析的数字的基数，即进制。\n    `Number(obj)`，`obj`是`js`对象。\n3. `parseInt()`解析`string`时，忽略第一个空格，任意个0，解析到非数字就停(遇到`0x`后面还有数字时不会停)，更像是正则转化。\n    `Number()`可以解析纯数字`String`、`Boolean`、`Date`、空数组、只有一个元素且是数字或纯数字`String`的数组(如[1])\n参考：[parseInt](https://www.w3school.com.cn/jsref/jsref_parseInt.asp)、[Number](https://www.w3school.com.cn/js/jsref_number.asp)\n\n## 2020.04.10\n\n### [html] 如何解决input在Firefox和Chrome中高度不一致的问题？\n* 原因是`firefox`的`input`的`border-width`、`padding` 受win10系统的文本大小设置影响\n* 设置一样的样式\n\n```css\ninput{\n  box-sizing:border-box;\n  height:20px;\n}\n```\n\n* 将win10系统的文本大小设置为100%\n\n### [css] 如何让IE6支持min-width和max-width？\n*   利用IE特有的css语法\n\n```css\n.className {\n  max-width:620px;\n  min-width:1px;\n  _width:expression(this.scrollWidth > 620 ? \"620px\":(this.scrollWidth < 1? \"1px\":\"auto\"));\n}\n```\n\n*   [参考文章](https://www.jb51.net/css/76142.html)\n\n### [js]请解释如下js代码对数组排序后的输出结果？\n```javascript\nvar result = [55, 22, 168]; \nconsole.log(result.sort());\n```\n\n`sort`默认比较的是字符串，并且按照字符编码的顺序进行升序排序\n结果：[168, 22, 55]\n\n## 2020.04.11\n\n### [html] 怎么去除img之间存在的间隔缝隙？\n* img标签连着写，不空格，不回车\n* 给父元素设置`font-size:0`\n\n### [html] html的img标签为什么要添加alt属性呢？\n**alt 属性是一个必需的属性，它规定在图像无法显示时的替代文本。**\n\n假设由于一些原因，用户无法查看图像，alt属性可以为图像提供替代的信息。比如：\n\n*   网速太慢\n*   src 属性中的错误\n*   浏览器禁用图像\n*   用户使用的是屏幕阅读器等\n\n**添加alt属性提示文本的好处有哪些：**\n\n1.  有利于SEO优化，让搜索引擎爬虫蜘蛛爬取关键词\n2.  在很多情况下用户无法查看图像，可以让用户明白图片的意思，提高用户体验\n3.  便于百度的图片收录和优化，百度会对网站的title以及alt分析，进而分类进行排序\n\n### [html] 如何禁止长按保存或复制图像？\n```css\nimg {\n  pointer-events:none;\n  -webkit-user-select:none;\n  -moz-user-select:none;\n  user-select:none;\n}\n```\n\n## 2020.04.13\n\n### [css] CSS中height:100%和height:inherit的异同？\n**1. 兼容性差异**\n`height:100%` IE6+ √\n`height:inherit` IE8+ √\n\n**2. 大多数情况作用是一样的**\n除去兼容性，大多数情况下，两者作用是一样的，甚至都很难想出不一样的理由。\n\n① 父容器`height: auto`，无论`height:100%`或者`height:inherit`表现都是`auto`.\n② 父容器定高`height: 100px`，无论`height:100%`或者`height:inherit`表现都是`100px`高.\n\n**3. 绝对定位大不同**\n当子元素为绝对定位元素，同时，父容器的`position`值为`static`的时候，`height:100%`和`height:inherit`的差异就可以明显体现出来了！\n[https://codepen.io/klain97710/pen/JjYdrWa](https://codepen.io/klain97710/pen/JjYdrWa)\n\n### [css] 当使用@font-face的时候，为什么src中要加入local呢？\n```css\n@font-face {\n  font-family: MyHelvetica;\n  src: local(\"Helvetica Neue Bold\"),\n  local(\"HelveticaNeue-Bold\"),\n  url(MgOpenModernaBold.ttf);\n  font-weight: bold;\n}\n```\n用到了用户本地字体\"Helvetica Neue Bold\"的备份；如果当前用户(浏览器)未安装该字体(两种可能的字体名都已经试过)，就会用下载的字体\"MgOpenModernaBold.ttf\"来代替。意味着加入local后，代码加载时会优先采用电脑资源，而不是从网络加载，这个可以加快加载速度，提升用户体验感。\n\n### [js] axios如何一次发送多个请求？\n```javascript\naxios.all([\n  getUserAccount(),\n  getUserPermissions()\n])\n.then(axios.spread(function(res1, res2){\n//当这两个请求都完成的时候会触发这个函数，两个参数分别代表返回的结果\n}\n```\n\n### [js] 这两种展开运算符的方式有什么区别呢？\n```javascript\nconst o1 = { ...obj, o3 }\n\nconst o2 = { ...obj, o3: { ...o3 } }\n```\n...展开运算符是一个浅拷贝，浅拷贝不会拷贝原型链上的东西\n\n## 2020.04.14\n\n### [html] img中的src加载失败时如何用默认图片来替换呢？\n`img`有`onerror`属性，加载失败时会触发\n```html\n<img :src=\"url\" :onerror=\"default\">\n```\n\n```javascript\ndata() {\n  return {\n    url: '',\n    default: 'this.src=\"' + require('default.img') + '\"'\n  }\n}\n```\n\n### [css] 用css实现tab切换？\n[target伪类](https://codepen.io/klain97710/pen/wvKKzPQ)\n\n### [js] 如何判断一个对象是否为空？\n1. `JSON.stringify(obj) === '{}'`\n2. `for in`遍历，没有`key`就是空\n3. `Object.keys`返回对象自身可枚举属性组成的数组，数组空就空\n\n## 2020.04.15\n\n### [html] 移动端如何使页面横、竖屏？\n[参考](https://www.jianshu.com/p/9c3264f4a405)\n\n### [css] 移动端1px像素问题及解决办法？\n[参考](https://www.jianshu.com/p/31f8907637a6)\n\n### [css] 动态伪类选择器\n`:link、:visited、:hover、:active、:focus`\n\n### [css] 绘制扇形\n[参考]([https://codepen.io/klain97710/pen/mdeVdpP](https://codepen.io/klain97710/pen/mdeVdpP))\n\n## 2020.04.16\n\n### [html] 如何禁止html页面缓存？\n```html\n<meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\">\n<meta http-equiv=\"Pragma\" content=\"no-cache\">\n<meta http-equiv=\"Expires\" content=\"0\">\n```\n**`Cache-Control`**\n表示缓存控制，no-cache，no-store，must-revalidate，都表示不缓存的意思。\n不过，Cache-Control是http1.1支持的。目前大多数http传输都是1.1的版本。\n\n**`Pragma`**\n值设置为no-cache，和Cache-Control的意义是一样的。\n区别：Pragma是http1.0支持的写法，所以这一句是为了兼容老版本的http传输协议。\n\n**`Expires`**\n值设置为0，表示过期时间，不进行缓存。\n\n### [css] 移动端保持页面底部按钮一直可见\n`position: sticky`的使用\n[demo](https://codepen.io/klain97710/pen/wvKMxYd)\n[参考](https://segmentfault.com/a/1190000007183209)\n\n### [css] 当页面高度不够时，底部固定在下面，反之不固定\n[demo](https://codepen.io/klain97710/pen/RwWrBda)\n[参考](http://caibaojian.com/css-5-ways-sticky-footer.html)\n\n### [js] 你知道js可选链是什么吗？\n[可选链](https://github.com/tc39/proposal-optional-chaining)是ES2020新引入的功能，目前处于[ECMAScript Proposal Stage 4](https://github.com/tc39/proposals/blob/master/finished-proposals.md)阶段，将陆续登陆各大浏览器（目前可通过勾选chrome的Experimental JavaScript功能体验该功能）。\n语法如下：\n\n```javascript\nwindow?.console?.log?.(\"Hello\");\n```\n该代码可解读为\n\n> 如果`window`存在，则其取`console`属性，如果`console`存在，则取其`log`属性，如果`log`存在，则将其作为方法调用。\n> 如果该链任意一环节不存在，则忽略整个链并返回`undefined`。\n\n在ES2020以前若要实现类似逻辑，可以使用以下方式：\n\n```source-js\nwindow && window.console && window.console.log && window.console.log(\"Hello\");\n```\n\n该功能在获取一个多层嵌套对象的属性，并且上层对象可能不存在时非常有用，比如 `user.data?.extraData?.phone`，如果`data`、`extraData`有可能不存在，我们不需要判断其是否存在就可以取其`phone`值，会减少很多逻辑判断和冗余代码。\n\n## 2020.04.21\n\n### \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1588228734172,["Administrator@WIN-T3FPCJLTUH1",[[-1,7287,"固定"]],[7287,7289],[7287,7287]]],[1588228737362,["Administrator@WIN-T3FPCJLTUH1",[[1,7287,"固定"]],[7287,7287],[7287,7289]]]],null,"Administrator@WIN-T3FPCJLTUH1"]]}